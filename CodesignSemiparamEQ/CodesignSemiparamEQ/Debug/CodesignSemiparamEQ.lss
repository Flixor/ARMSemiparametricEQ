
CodesignSemiparamEQ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004080  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000009e8  20000000  00404080  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00002110  200009e8  00404a68  000209e8  2**3
                  ALLOC
  3 .heap         00000200  20002af8  00406b78  000209e8  2**0
                  ALLOC
  4 .stack        00003000  20002cf8  00406d78  000209e8  2**0
                  ALLOC
  5 .ARM.attributes 00000030  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY
  6 .comment      000000ce  00000000  00000000  00020a18  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a28e  00000000  00000000  00020ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001b4a  00000000  00000000  0002ad74  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00001f32  00000000  00000000  0002c8be  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000002c0  00000000  00000000  0002e7f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000005e8  00000000  00000000  0002eab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001f7da  00000000  00000000  0002f098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00006d2a  00000000  00000000  0004e872  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009beeb  00000000  00000000  0005559c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000011f0  00000000  00000000  000f1488  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 5c 00 20 79 03 40 00 75 03 40 00 75 03 40 00     .\. y.@.u.@.u.@.
  400010:	75 03 40 00 75 03 40 00 75 03 40 00 00 00 00 00     u.@.u.@.u.@.....
	...
  40002c:	75 03 40 00 75 03 40 00 00 00 00 00 75 03 40 00     u.@.u.@.....u.@.
  40003c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40004c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40005c:	75 03 40 00 75 03 40 00 d1 07 40 00 00 00 00 00     u.@.u.@...@.....
  40006c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40007c:	75 03 40 00 f1 06 40 00 75 03 40 00 75 03 40 00     u.@...@.u.@.u.@.
  40008c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40009c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  4000ac:	75 03 40 00 75 03 40 00 75 03 40 00 00 00 00 00     u.@.u.@.u.@.....
	...
  4000fc:	75 03 40 00 75 03 40 00 75 03 40 00                 u.@.u.@.u.@.

00400108 <__do_global_dtors_aux>:
  400108:	b510      	push	{r4, lr}
  40010a:	4c05      	ldr	r4, [pc, #20]	; (400120 <__do_global_dtors_aux+0x18>)
  40010c:	7823      	ldrb	r3, [r4, #0]
  40010e:	b933      	cbnz	r3, 40011e <__do_global_dtors_aux+0x16>
  400110:	4b04      	ldr	r3, [pc, #16]	; (400124 <__do_global_dtors_aux+0x1c>)
  400112:	b113      	cbz	r3, 40011a <__do_global_dtors_aux+0x12>
  400114:	4804      	ldr	r0, [pc, #16]	; (400128 <__do_global_dtors_aux+0x20>)
  400116:	f3af 8000 	nop.w
  40011a:	2301      	movs	r3, #1
  40011c:	7023      	strb	r3, [r4, #0]
  40011e:	bd10      	pop	{r4, pc}
  400120:	200009e8 	.word	0x200009e8
  400124:	00000000 	.word	0x00000000
  400128:	00404080 	.word	0x00404080

0040012c <frame_dummy>:
  40012c:	4b0c      	ldr	r3, [pc, #48]	; (400160 <frame_dummy+0x34>)
  40012e:	b143      	cbz	r3, 400142 <frame_dummy+0x16>
  400130:	480c      	ldr	r0, [pc, #48]	; (400164 <frame_dummy+0x38>)
  400132:	490d      	ldr	r1, [pc, #52]	; (400168 <frame_dummy+0x3c>)
  400134:	b510      	push	{r4, lr}
  400136:	f3af 8000 	nop.w
  40013a:	480c      	ldr	r0, [pc, #48]	; (40016c <frame_dummy+0x40>)
  40013c:	6803      	ldr	r3, [r0, #0]
  40013e:	b923      	cbnz	r3, 40014a <frame_dummy+0x1e>
  400140:	bd10      	pop	{r4, pc}
  400142:	480a      	ldr	r0, [pc, #40]	; (40016c <frame_dummy+0x40>)
  400144:	6803      	ldr	r3, [r0, #0]
  400146:	b933      	cbnz	r3, 400156 <frame_dummy+0x2a>
  400148:	4770      	bx	lr
  40014a:	4b09      	ldr	r3, [pc, #36]	; (400170 <frame_dummy+0x44>)
  40014c:	2b00      	cmp	r3, #0
  40014e:	d0f7      	beq.n	400140 <frame_dummy+0x14>
  400150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400154:	4718      	bx	r3
  400156:	4b06      	ldr	r3, [pc, #24]	; (400170 <frame_dummy+0x44>)
  400158:	2b00      	cmp	r3, #0
  40015a:	d0f5      	beq.n	400148 <frame_dummy+0x1c>
  40015c:	4718      	bx	r3
  40015e:	bf00      	nop
  400160:	00000000 	.word	0x00000000
  400164:	00404080 	.word	0x00404080
  400168:	200009ec 	.word	0x200009ec
  40016c:	00404080 	.word	0x00404080
  400170:	00000000 	.word	0x00000000

00400174 <AK4588EN_Init>:
	
	return TWI0 -> TWI_RHR;
}

uint8_t AK4588EN_Init(void)
{
  400174:	b508      	push	{r3, lr}
	uint32_t timeout;
	
	TWI0 -> TWI_MMR = TWI_MMR_DADR(AK4588EN_I2C_ADDR);	//enter adress
  400176:	4b7c      	ldr	r3, [pc, #496]	; (400368 <AK4588EN_Init+0x1f4>)
  400178:	f44f 1298 	mov.w	r2, #1245184	; 0x130000
  40017c:	605a      	str	r2, [r3, #4]
	
	TWI0 -> TWI_THR = AK4588EN_PWRMNGMNT;		//register to start writing
  40017e:	2200      	movs	r2, #0
  400180:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400182:	6a1b      	ldr	r3, [r3, #32]
  400184:	f413 7f80 	tst.w	r3, #256	; 0x100
  400188:	d00e      	beq.n	4001a8 <AK4588EN_Init+0x34>
  40018a:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  40018e:	4976      	ldr	r1, [pc, #472]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400190:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400192:	6a0a      	ldr	r2, [r1, #32]
  400194:	f412 7f80 	tst.w	r2, #256	; 0x100
  400198:	d003      	beq.n	4001a2 <AK4588EN_Init+0x2e>
  40019a:	2b00      	cmp	r3, #0
  40019c:	d1f8      	bne.n	400190 <AK4588EN_Init+0x1c>
	}
	if (!timeout) return 0;
  40019e:	2000      	movs	r0, #0
  4001a0:	bd08      	pop	{r3, pc}
  4001a2:	2b00      	cmp	r3, #0
  4001a4:	f000 80cc 	beq.w	400340 <AK4588EN_Init+0x1cc>
	
	TWI0 -> TWI_THR = AK4588EN_PLL_CTRL_DEFAULT; //data	
  4001a8:	4b6f      	ldr	r3, [pc, #444]	; (400368 <AK4588EN_Init+0x1f4>)
  4001aa:	2205      	movs	r2, #5
  4001ac:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001ae:	6a1b      	ldr	r3, [r3, #32]
  4001b0:	f413 7f80 	tst.w	r3, #256	; 0x100
  4001b4:	d00e      	beq.n	4001d4 <AK4588EN_Init+0x60>
  4001b6:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4001ba:	496b      	ldr	r1, [pc, #428]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4001bc:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001be:	6a0a      	ldr	r2, [r1, #32]
  4001c0:	f412 7f80 	tst.w	r2, #256	; 0x100
  4001c4:	d003      	beq.n	4001ce <AK4588EN_Init+0x5a>
  4001c6:	2b00      	cmp	r3, #0
  4001c8:	d1f8      	bne.n	4001bc <AK4588EN_Init+0x48>
	}
	if (!timeout) return 0;
  4001ca:	2000      	movs	r0, #0
  4001cc:	bd08      	pop	{r3, pc}
  4001ce:	2b00      	cmp	r3, #0
  4001d0:	f000 80b8 	beq.w	400344 <AK4588EN_Init+0x1d0>
	
	TWI0 -> TWI_THR = AK4588EN_DAC_TDM_DEFAULT; //data
  4001d4:	4b64      	ldr	r3, [pc, #400]	; (400368 <AK4588EN_Init+0x1f4>)
  4001d6:	2200      	movs	r2, #0
  4001d8:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001da:	6a1b      	ldr	r3, [r3, #32]
  4001dc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4001e0:	d00e      	beq.n	400200 <AK4588EN_Init+0x8c>
  4001e2:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4001e6:	4960      	ldr	r1, [pc, #384]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4001e8:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001ea:	6a0a      	ldr	r2, [r1, #32]
  4001ec:	f412 7f80 	tst.w	r2, #256	; 0x100
  4001f0:	d003      	beq.n	4001fa <AK4588EN_Init+0x86>
  4001f2:	2b00      	cmp	r3, #0
  4001f4:	d1f8      	bne.n	4001e8 <AK4588EN_Init+0x74>
	}
	if (!timeout) return 0;
  4001f6:	2000      	movs	r0, #0
  4001f8:	bd08      	pop	{r3, pc}
  4001fa:	2b00      	cmp	r3, #0
  4001fc:	f000 80a4 	beq.w	400348 <AK4588EN_Init+0x1d4>
	
	TWI0 -> TWI_THR = AK4588EN_CTRL1_DEFAULT; //data
  400200:	4b59      	ldr	r3, [pc, #356]	; (400368 <AK4588EN_Init+0x1f4>)
  400202:	2238      	movs	r2, #56	; 0x38
  400204:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400206:	6a1b      	ldr	r3, [r3, #32]
  400208:	f413 7f80 	tst.w	r3, #256	; 0x100
  40020c:	d00e      	beq.n	40022c <AK4588EN_Init+0xb8>
  40020e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400212:	4955      	ldr	r1, [pc, #340]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400214:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400216:	6a0a      	ldr	r2, [r1, #32]
  400218:	f412 7f80 	tst.w	r2, #256	; 0x100
  40021c:	d003      	beq.n	400226 <AK4588EN_Init+0xb2>
  40021e:	2b00      	cmp	r3, #0
  400220:	d1f8      	bne.n	400214 <AK4588EN_Init+0xa0>
	}
	if (!timeout) return 0;
  400222:	2000      	movs	r0, #0
  400224:	bd08      	pop	{r3, pc}
  400226:	2b00      	cmp	r3, #0
  400228:	f000 8090 	beq.w	40034c <AK4588EN_Init+0x1d8>
	
	TWI0 -> TWI_THR = AK4588EN_CTRL2_DEFAULT; //data
  40022c:	4b4e      	ldr	r3, [pc, #312]	; (400368 <AK4588EN_Init+0x1f4>)
  40022e:	2201      	movs	r2, #1
  400230:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400232:	6a1b      	ldr	r3, [r3, #32]
  400234:	f413 7f80 	tst.w	r3, #256	; 0x100
  400238:	d00d      	beq.n	400256 <AK4588EN_Init+0xe2>
  40023a:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  40023e:	494a      	ldr	r1, [pc, #296]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400240:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400242:	6a0a      	ldr	r2, [r1, #32]
  400244:	f412 7f80 	tst.w	r2, #256	; 0x100
  400248:	d003      	beq.n	400252 <AK4588EN_Init+0xde>
  40024a:	2b00      	cmp	r3, #0
  40024c:	d1f8      	bne.n	400240 <AK4588EN_Init+0xcc>
	}
	if (!timeout) return 0;
  40024e:	2000      	movs	r0, #0
  400250:	bd08      	pop	{r3, pc}
  400252:	2b00      	cmp	r3, #0
  400254:	d07c      	beq.n	400350 <AK4588EN_Init+0x1dc>
	
	TWI0 -> TWI_THR = AK4588EN_MODE_CTRL_DEFAULT; //data
  400256:	4b44      	ldr	r3, [pc, #272]	; (400368 <AK4588EN_Init+0x1f4>)
  400258:	222a      	movs	r2, #42	; 0x2a
  40025a:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  40025c:	6a1b      	ldr	r3, [r3, #32]
  40025e:	f413 7f80 	tst.w	r3, #256	; 0x100
  400262:	d00d      	beq.n	400280 <AK4588EN_Init+0x10c>
  400264:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400268:	493f      	ldr	r1, [pc, #252]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  40026a:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  40026c:	6a0a      	ldr	r2, [r1, #32]
  40026e:	f412 7f80 	tst.w	r2, #256	; 0x100
  400272:	d003      	beq.n	40027c <AK4588EN_Init+0x108>
  400274:	2b00      	cmp	r3, #0
  400276:	d1f8      	bne.n	40026a <AK4588EN_Init+0xf6>
	}
	if (!timeout) return 0;
  400278:	2000      	movs	r0, #0
  40027a:	bd08      	pop	{r3, pc}
  40027c:	2b00      	cmp	r3, #0
  40027e:	d069      	beq.n	400354 <AK4588EN_Init+0x1e0>
	
	TWI0 -> TWI_THR = AK4588EN_FILTER_SET_DEFAULT;	//data
  400280:	4b39      	ldr	r3, [pc, #228]	; (400368 <AK4588EN_Init+0x1f4>)
  400282:	2231      	movs	r2, #49	; 0x31
  400284:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400286:	6a1b      	ldr	r3, [r3, #32]
  400288:	f413 7f80 	tst.w	r3, #256	; 0x100
  40028c:	d00d      	beq.n	4002aa <AK4588EN_Init+0x136>
  40028e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400292:	4935      	ldr	r1, [pc, #212]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400294:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400296:	6a0a      	ldr	r2, [r1, #32]
  400298:	f412 7f80 	tst.w	r2, #256	; 0x100
  40029c:	d003      	beq.n	4002a6 <AK4588EN_Init+0x132>
  40029e:	2b00      	cmp	r3, #0
  4002a0:	d1f8      	bne.n	400294 <AK4588EN_Init+0x120>
	}
	if (!timeout) return 0;
  4002a2:	2000      	movs	r0, #0
  4002a4:	bd08      	pop	{r3, pc}
  4002a6:	2b00      	cmp	r3, #0
  4002a8:	d056      	beq.n	400358 <AK4588EN_Init+0x1e4>
	
	TWI0 -> TWI_THR = AK4588EN_HPF_EN_FILTER_SET_DEFAULT; //data
  4002aa:	4b2f      	ldr	r3, [pc, #188]	; (400368 <AK4588EN_Init+0x1f4>)
  4002ac:	220b      	movs	r2, #11
  4002ae:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002b0:	6a1b      	ldr	r3, [r3, #32]
  4002b2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4002b6:	d00d      	beq.n	4002d4 <AK4588EN_Init+0x160>
  4002b8:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4002bc:	492a      	ldr	r1, [pc, #168]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4002be:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002c0:	6a0a      	ldr	r2, [r1, #32]
  4002c2:	f412 7f80 	tst.w	r2, #256	; 0x100
  4002c6:	d003      	beq.n	4002d0 <AK4588EN_Init+0x15c>
  4002c8:	2b00      	cmp	r3, #0
  4002ca:	d1f8      	bne.n	4002be <AK4588EN_Init+0x14a>
	}
	if (!timeout) return 0;
  4002cc:	2000      	movs	r0, #0
  4002ce:	bd08      	pop	{r3, pc}
  4002d0:	2b00      	cmp	r3, #0
  4002d2:	d043      	beq.n	40035c <AK4588EN_Init+0x1e8>
	
	TWI0 -> TWI_THR = AK4588EN_LOUT_VOLUME_DEFAULT; //data
  4002d4:	4b24      	ldr	r3, [pc, #144]	; (400368 <AK4588EN_Init+0x1f4>)
  4002d6:	22ff      	movs	r2, #255	; 0xff
  4002d8:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002da:	6a1b      	ldr	r3, [r3, #32]
  4002dc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4002e0:	d00d      	beq.n	4002fe <AK4588EN_Init+0x18a>
  4002e2:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4002e6:	4920      	ldr	r1, [pc, #128]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4002e8:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002ea:	6a0a      	ldr	r2, [r1, #32]
  4002ec:	f412 7f80 	tst.w	r2, #256	; 0x100
  4002f0:	d003      	beq.n	4002fa <AK4588EN_Init+0x186>
  4002f2:	2b00      	cmp	r3, #0
  4002f4:	d1f8      	bne.n	4002e8 <AK4588EN_Init+0x174>
	}
	if (!timeout) return 0;
  4002f6:	2000      	movs	r0, #0
  4002f8:	bd08      	pop	{r3, pc}
  4002fa:	2b00      	cmp	r3, #0
  4002fc:	d030      	beq.n	400360 <AK4588EN_Init+0x1ec>
	
	TWI0 -> TWI_THR = AK4588EN_ROUT_VOLUME_DEFAULT; //data
  4002fe:	4b1a      	ldr	r3, [pc, #104]	; (400368 <AK4588EN_Init+0x1f4>)
  400300:	22ff      	movs	r2, #255	; 0xff
  400302:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400304:	6a1b      	ldr	r3, [r3, #32]
  400306:	f413 7f80 	tst.w	r3, #256	; 0x100
  40030a:	d00c      	beq.n	400326 <AK4588EN_Init+0x1b2>
  40030c:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400310:	4915      	ldr	r1, [pc, #84]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400312:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400314:	6a0a      	ldr	r2, [r1, #32]
  400316:	f412 7f80 	tst.w	r2, #256	; 0x100
  40031a:	d003      	beq.n	400324 <AK4588EN_Init+0x1b0>
  40031c:	2b00      	cmp	r3, #0
  40031e:	d1f8      	bne.n	400312 <AK4588EN_Init+0x19e>
	}
	if (!timeout) return 0;
  400320:	2000      	movs	r0, #0
  400322:	bd08      	pop	{r3, pc}
  400324:	b1f3      	cbz	r3, 400364 <AK4588EN_Init+0x1f0>
	

	
	//while (!(TWI0 -> TWI_SR & TWI_SR_TXRDY));
	
	TWI0 -> TWI_CR	= TWI_CR_STOP; //issue stop
  400326:	2202      	movs	r2, #2
  400328:	4b0f      	ldr	r3, [pc, #60]	; (400368 <AK4588EN_Init+0x1f4>)
  40032a:	601a      	str	r2, [r3, #0]
	while (!(TWI0 -> TWI_SR & TWI_SR_TXCOMP)); //transfer not done yet
  40032c:	461a      	mov	r2, r3
  40032e:	6a13      	ldr	r3, [r2, #32]
  400330:	f013 0f01 	tst.w	r3, #1
  400334:	d0fb      	beq.n	40032e <AK4588EN_Init+0x1ba>
	
	UART_Puts("Audio Codec Initialized\r\n");
  400336:	480d      	ldr	r0, [pc, #52]	; (40036c <AK4588EN_Init+0x1f8>)
  400338:	4b0d      	ldr	r3, [pc, #52]	; (400370 <AK4588EN_Init+0x1fc>)
  40033a:	4798      	blx	r3
	
	return 1;
  40033c:	2001      	movs	r0, #1
  40033e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400340:	2000      	movs	r0, #0
  400342:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400344:	2000      	movs	r0, #0
  400346:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400348:	2000      	movs	r0, #0
  40034a:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  40034c:	2000      	movs	r0, #0
  40034e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400350:	2000      	movs	r0, #0
  400352:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400354:	2000      	movs	r0, #0
  400356:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400358:	2000      	movs	r0, #0
  40035a:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  40035c:	2000      	movs	r0, #0
  40035e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400360:	2000      	movs	r0, #0
  400362:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400364:	2000      	movs	r0, #0
  400366:	bd08      	pop	{r3, pc}
  400368:	4000c600 	.word	0x4000c600
  40036c:	00403e8c 	.word	0x00403e8c
  400370:	00400c55 	.word	0x00400c55

00400374 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400374:	e7fe      	b.n	400374 <Dummy_Handler>
	...

00400378 <Reset_Handler>:
{
  400378:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  40037a:	4b17      	ldr	r3, [pc, #92]	; (4003d8 <Reset_Handler+0x60>)
  40037c:	4a17      	ldr	r2, [pc, #92]	; (4003dc <Reset_Handler+0x64>)
  40037e:	429a      	cmp	r2, r3
  400380:	d010      	beq.n	4003a4 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  400382:	4b17      	ldr	r3, [pc, #92]	; (4003e0 <Reset_Handler+0x68>)
  400384:	4a14      	ldr	r2, [pc, #80]	; (4003d8 <Reset_Handler+0x60>)
  400386:	429a      	cmp	r2, r3
  400388:	d20c      	bcs.n	4003a4 <Reset_Handler+0x2c>
  40038a:	3b01      	subs	r3, #1
  40038c:	1a9b      	subs	r3, r3, r2
  40038e:	f023 0303 	bic.w	r3, r3, #3
  400392:	3304      	adds	r3, #4
  400394:	4413      	add	r3, r2
  400396:	4911      	ldr	r1, [pc, #68]	; (4003dc <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  400398:	f851 0b04 	ldr.w	r0, [r1], #4
  40039c:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4003a0:	429a      	cmp	r2, r3
  4003a2:	d1f9      	bne.n	400398 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4003a4:	4b0f      	ldr	r3, [pc, #60]	; (4003e4 <Reset_Handler+0x6c>)
  4003a6:	4a10      	ldr	r2, [pc, #64]	; (4003e8 <Reset_Handler+0x70>)
  4003a8:	429a      	cmp	r2, r3
  4003aa:	d20a      	bcs.n	4003c2 <Reset_Handler+0x4a>
  4003ac:	3b01      	subs	r3, #1
  4003ae:	1a9b      	subs	r3, r3, r2
  4003b0:	f023 0303 	bic.w	r3, r3, #3
  4003b4:	3304      	adds	r3, #4
  4003b6:	4413      	add	r3, r2
                *pDest++ = 0;
  4003b8:	2100      	movs	r1, #0
  4003ba:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4003be:	4293      	cmp	r3, r2
  4003c0:	d1fb      	bne.n	4003ba <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4003c2:	4a0a      	ldr	r2, [pc, #40]	; (4003ec <Reset_Handler+0x74>)
  4003c4:	4b0a      	ldr	r3, [pc, #40]	; (4003f0 <Reset_Handler+0x78>)
  4003c6:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4003ca:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  4003cc:	4b09      	ldr	r3, [pc, #36]	; (4003f4 <Reset_Handler+0x7c>)
  4003ce:	4798      	blx	r3
        main();
  4003d0:	4b09      	ldr	r3, [pc, #36]	; (4003f8 <Reset_Handler+0x80>)
  4003d2:	4798      	blx	r3
  4003d4:	e7fe      	b.n	4003d4 <Reset_Handler+0x5c>
  4003d6:	bf00      	nop
  4003d8:	20000000 	.word	0x20000000
  4003dc:	00404080 	.word	0x00404080
  4003e0:	200009e8 	.word	0x200009e8
  4003e4:	20002af8 	.word	0x20002af8
  4003e8:	200009e8 	.word	0x200009e8
  4003ec:	e000ed00 	.word	0xe000ed00
  4003f0:	00400000 	.word	0x00400000
  4003f4:	00401ff1 	.word	0x00401ff1
  4003f8:	00400509 	.word	0x00400509

004003fc <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
    // Keep the default device state after reset
    SystemCoreClock = __SYSTEM_CLOCK;
  4003fc:	4a01      	ldr	r2, [pc, #4]	; (400404 <SystemInit+0x8>)
  4003fe:	4b02      	ldr	r3, [pc, #8]	; (400408 <SystemInit+0xc>)
  400400:	601a      	str	r2, [r3, #0]
  400402:	4770      	bx	lr
  400404:	007a1200 	.word	0x007a1200
  400408:	20000000 	.word	0x20000000

0040040c <I2SC_DMAenable>:
	UART_Puts("I2SC Initialized\r\n");	
	
}

void I2SC_DMAenable(int32_t *srcbuffL, int32_t *srcbuffR, int32_t *dstbuffL, int32_t *dstbuffR, uint32_t len)
{
  40040c:	b430      	push	{r4, r5}
  40040e:	9d02      	ldr	r5, [sp, #8]
	Pdc *I2SC0_2 = (Pdc *)((uint32_t)I2SC0 + 0x200U);                  /**< \brief (I2SC0 PDC ) Base Address R channel */
	
	//Left channel Tx
	I2SC0 -> I2SC_TPR = (int32_t)srcbuffL;
  400410:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
  400414:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
	I2SC0 -> I2SC_TCR = len;
  400418:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
	I2SC0 -> I2SC_TNPR = (int32_t)srcbuffL;
  40041c:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
	I2SC0 -> I2SC_TNCR = len;
  400420:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
	
	I2SC0 -> I2SC_RPR = (int32_t)dstbuffL;
  400424:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
	I2SC0 -> I2SC_RCR = len;
  400428:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
	I2SC0 -> I2SC_RNPR = (int32_t)dstbuffL;
  40042c:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
	I2SC0 -> I2SC_RNCR = len;
  400430:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
	
	//Right channel Tx 
	I2SC0_2 -> PERIPH_TPR = (int32_t)srcbuffR;
  400434:	4a07      	ldr	r2, [pc, #28]	; (400454 <I2SC_DMAenable+0x48>)
  400436:	6091      	str	r1, [r2, #8]
	I2SC0_2 -> PERIPH_TCR = len;
  400438:	60d5      	str	r5, [r2, #12]
	I2SC0_2 -> PERIPH_TNPR = (int32_t)srcbuffR;
  40043a:	6191      	str	r1, [r2, #24]
	I2SC0_2 -> PERIPH_TNCR = len;
  40043c:	61d5      	str	r5, [r2, #28]
	
 	I2SC0_2 -> PERIPH_RPR = (int32_t)dstbuffR;
  40043e:	6013      	str	r3, [r2, #0]
 	I2SC0_2 -> PERIPH_RCR = len;
  400440:	6055      	str	r5, [r2, #4]
 	I2SC0_2 -> PERIPH_RNPR = (int32_t)dstbuffR;
  400442:	6113      	str	r3, [r2, #16]
 	I2SC0_2 -> PERIPH_RNCR = len;
  400444:	6155      	str	r5, [r2, #20]
	
	
	I2SC0 -> I2SC_PTCR		= I2SC_PTCR_TXTEN | I2SC_PTCR_RXTEN;
  400446:	f240 1301 	movw	r3, #257	; 0x101
  40044a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
	I2SC0_2 -> PERIPH_PTCR	= I2SC_PTCR_TXTEN | I2SC_PTCR_RXTEN;
  40044e:	6213      	str	r3, [r2, #32]
}
  400450:	bc30      	pop	{r4, r5}
  400452:	4770      	bx	lr
  400454:	40000200 	.word	0x40000200

00400458 <Init_I2SC>:
{	
  400458:	b570      	push	{r4, r5, r6, lr}
  40045a:	b082      	sub	sp, #8


static void I2SC_PioSetup(void)
{
	//enable peripheral control of IO pins
	PIOA -> PIO_PDR	|=	PIO_PDR_P0	//Clock
  40045c:	4c1f      	ldr	r4, [pc, #124]	; (4004dc <Init_I2SC+0x84>)
  40045e:	6865      	ldr	r5, [r4, #4]
  400460:	f445 25c0 	orr.w	r5, r5, #393216	; 0x60000
  400464:	f045 051f 	orr.w	r5, r5, #31
  400468:	6065      	str	r5, [r4, #4]
	 *	 1	 1		D
	 * since not used pins are not used in PCB hand them to peripheral as well
	 */
	
	//PA0 & PA1 to peripheral A
	PIOA -> PIO_ABCDSR[0] &= ~( PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P17 | PIO_ABCDSR_P18 );
  40046a:	6f25      	ldr	r5, [r4, #112]	; 0x70
  40046c:	f425 25c0 	bic.w	r5, r5, #393216	; 0x60000
  400470:	f025 0503 	bic.w	r5, r5, #3
  400474:	6725      	str	r5, [r4, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~( PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P17 | PIO_ABCDSR_P18 );
  400476:	6f65      	ldr	r5, [r4, #116]	; 0x74
  400478:	f425 25c0 	bic.w	r5, r5, #393216	; 0x60000
  40047c:	f025 0503 	bic.w	r5, r5, #3
  400480:	6765      	str	r5, [r4, #116]	; 0x74
	
	//PA2 & PA3 & PA4 to peripheral B
	PIOA -> PIO_ABCDSR[0] |=  ( PIO_ABCDSR_P2 | PIO_ABCDSR_P3 | PIO_ABCDSR_P4 );
  400482:	6f25      	ldr	r5, [r4, #112]	; 0x70
  400484:	f045 051c 	orr.w	r5, r5, #28
  400488:	6725      	str	r5, [r4, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~( PIO_ABCDSR_P2 | PIO_ABCDSR_P3 | PIO_ABCDSR_P4 );
  40048a:	6f65      	ldr	r5, [r4, #116]	; 0x74
  40048c:	f025 051c 	bic.w	r5, r5, #28
  400490:	6765      	str	r5, [r4, #116]	; 0x74
	I2SC0 -> I2SC_CR	=	I2SC_CR_SWRST;
  400492:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
  400496:	2580      	movs	r5, #128	; 0x80
  400498:	6025      	str	r5, [r4, #0]
	I2SC0 -> I2SC_MR	=	I2SC_MR_MODE_SLAVE
  40049a:	f44f 46c4 	mov.w	r6, #25088	; 0x6200
  40049e:	6066      	str	r6, [r4, #4]
	I2SC_DMAenable(DMAsrcbuffL, DMAsrcbuffR, DMAdstbuffL, DMAdstbuffR, DMAbuffLen);
  4004a0:	9e06      	ldr	r6, [sp, #24]
  4004a2:	9600      	str	r6, [sp, #0]
  4004a4:	4e0e      	ldr	r6, [pc, #56]	; (4004e0 <Init_I2SC+0x88>)
  4004a6:	47b0      	blx	r6
	I2SC0 -> I2SC_IER =	I2SC_IER_ENDTX; //ENDTX? or TXRDY
  4004a8:	6165      	str	r5, [r4, #20]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4004aa:	4a0e      	ldr	r2, [pc, #56]	; (4004e4 <Init_I2SC+0x8c>)
  4004ac:	2300      	movs	r3, #0
  4004ae:	f882 3310 	strb.w	r3, [r2, #784]	; 0x310
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
  4004b2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4004b6:	6011      	str	r1, [r2, #0]
	I2SC0 -> I2SC_CR	=	0;
  4004b8:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_RXEN;	//enable receiver
  4004ba:	6823      	ldr	r3, [r4, #0]
  4004bc:	f043 0301 	orr.w	r3, r3, #1
  4004c0:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_TXEN;	//enable transmitter
  4004c2:	6823      	ldr	r3, [r4, #0]
  4004c4:	f043 0310 	orr.w	r3, r3, #16
  4004c8:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_CKEN;	//generate clock
  4004ca:	6823      	ldr	r3, [r4, #0]
  4004cc:	f043 0304 	orr.w	r3, r3, #4
  4004d0:	6023      	str	r3, [r4, #0]
	UART_Puts("I2SC Initialized\r\n");	
  4004d2:	4805      	ldr	r0, [pc, #20]	; (4004e8 <Init_I2SC+0x90>)
  4004d4:	4b05      	ldr	r3, [pc, #20]	; (4004ec <Init_I2SC+0x94>)
  4004d6:	4798      	blx	r3
}
  4004d8:	b002      	add	sp, #8
  4004da:	bd70      	pop	{r4, r5, r6, pc}
  4004dc:	400e0e00 	.word	0x400e0e00
  4004e0:	0040040d 	.word	0x0040040d
  4004e4:	e000e100 	.word	0xe000e100
  4004e8:	00403ea8 	.word	0x00403ea8
  4004ec:	00400c55 	.word	0x00400c55

004004f0 <fpu_enable>:
#define REG_CPACR (*((volatile uint32_t *)ADDR_CPACR))


void fpu_enable(void)
{
 REG_CPACR |= (0xFu << 20);
  4004f0:	4a04      	ldr	r2, [pc, #16]	; (400504 <fpu_enable+0x14>)
  4004f2:	6813      	ldr	r3, [r2, #0]
  4004f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4004f8:	6013      	str	r3, [r2, #0]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4004fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4004fe:	f3bf 8f6f 	isb	sy
  400502:	4770      	bx	lr
  400504:	e000ed88 	.word	0xe000ed88

00400508 <main>:
}



int main(void)
{
  400508:	b5f0      	push	{r4, r5, r6, r7, lr}
  40050a:	b08d      	sub	sp, #52	; 0x34
	/* Initialize the SAM system, run of default 8MHz clock ATM */
	SystemInit();
  40050c:	4b57      	ldr	r3, [pc, #348]	; (40066c <main+0x164>)
  40050e:	4798      	blx	r3


static void Init_Board(void)
{
	#if (__FPU_PRESENT == 1)
	fpu_enable();
  400510:	4b57      	ldr	r3, [pc, #348]	; (400670 <main+0x168>)
  400512:	4798      	blx	r3
}

//chapter 17.3
static uint8_t Init_Clock(void)	//run clock @ 120MHz
{
	EFC->EEFC_FMR = EEFC_FMR_FWS(5) | EEFC_FMR_CLOE; //set flash wait state to max. for 120MHz clock
  400514:	4a57      	ldr	r2, [pc, #348]	; (400674 <main+0x16c>)
  400516:	4b58      	ldr	r3, [pc, #352]	; (400678 <main+0x170>)
  400518:	601a      	str	r2, [r3, #0]
	
	//enable crystal osc source
	SUPC -> SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;		//switch slow clock on EXTOSC
  40051a:	4a58      	ldr	r2, [pc, #352]	; (40067c <main+0x174>)
  40051c:	f503 6321 	add.w	r3, r3, #2576	; 0xa10
  400520:	601a      	str	r2, [r3, #0]
	while (!  ((SUPC->SUPC_SR & SUPC_SR_OSCSEL) && (PMC->PMC_SR & PMC_SR_OSCSELS))); //wait for OSC to be ready
  400522:	461a      	mov	r2, r3
  400524:	4956      	ldr	r1, [pc, #344]	; (400680 <main+0x178>)
  400526:	6953      	ldr	r3, [r2, #20]
  400528:	f013 0f80 	tst.w	r3, #128	; 0x80
  40052c:	d0fb      	beq.n	400526 <main+0x1e>
  40052e:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  400530:	f013 0f80 	tst.w	r3, #128	; 0x80
  400534:	d0f7      	beq.n	400526 <main+0x1e>
	
	//PLL enable and lock
	/* 120.000.000 = 32.768 * (3661 + 1) */
	PMC -> CKGR_PLLAR = CKGR_PLLAR_MULA(0);		//Always stop PLL first
  400536:	4b52      	ldr	r3, [pc, #328]	; (400680 <main+0x178>)
  400538:	2200      	movs	r2, #0
  40053a:	629a      	str	r2, [r3, #40]	; 0x28
	PMC -> CKGR_PLLAR =  CKGR_PLLAR_MULA(3661) | CKGR_PLLAR_PLLAEN(1) | CKGR_PLLAR_PLLACOUNT(0x3FU);
  40053c:	4a51      	ldr	r2, [pc, #324]	; (400684 <main+0x17c>)
  40053e:	629a      	str	r2, [r3, #40]	; 0x28
	while (! (PMC -> PMC_SR & PMC_SR_LOCKA) );	//wait for PLL lock
  400540:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  400542:	f012 0f02 	tst.w	r2, #2
  400546:	d0fb      	beq.n	400540 <main+0x38>
	
	//PMC switch MCK to PLL
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk));
  400548:	4b4d      	ldr	r3, [pc, #308]	; (400680 <main+0x178>)
  40054a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40054c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400550:	631a      	str	r2, [r3, #48]	; 0x30
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  400552:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400554:	f013 0f08 	tst.w	r3, #8
  400558:	d109      	bne.n	40056e <main+0x66>
  40055a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40055e:	4a48      	ldr	r2, [pc, #288]	; (400680 <main+0x178>)
  400560:	e001      	b.n	400566 <main+0x5e>
		if (ul_timeout == 0) {
  400562:	3b01      	subs	r3, #1
  400564:	d021      	beq.n	4005aa <main+0xa2>
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  400566:	6e91      	ldr	r1, [r2, #104]	; 0x68
  400568:	f011 0f08 	tst.w	r1, #8
  40056c:	d0f9      	beq.n	400562 <main+0x5a>
			return 1;
		}
	}
	
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |	PMC_MCKR_CSS_PLLA_CLK;
  40056e:	4a44      	ldr	r2, [pc, #272]	; (400680 <main+0x178>)
  400570:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400572:	f023 0303 	bic.w	r3, r3, #3
  400576:	f043 0302 	orr.w	r3, r3, #2
  40057a:	6313      	str	r3, [r2, #48]	; 0x30

	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  40057c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40057e:	f013 0f08 	tst.w	r3, #8
  400582:	d109      	bne.n	400598 <main+0x90>
  400584:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400588:	4a3d      	ldr	r2, [pc, #244]	; (400680 <main+0x178>)
  40058a:	e001      	b.n	400590 <main+0x88>
		if (ul_timeout == 0) {
  40058c:	3b01      	subs	r3, #1
  40058e:	d00c      	beq.n	4005aa <main+0xa2>
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  400590:	6e91      	ldr	r1, [r2, #104]	; 0x68
  400592:	f011 0f08 	tst.w	r1, #8
  400596:	d0f9      	beq.n	40058c <main+0x84>
			return 1;
		}
	}

	//trim clock to 120MHz    trim value 12
	uint32_t ul_pwmr = SUPC -> SUPC_PWMR & (~(0xFu << 9));
  400598:	4a3b      	ldr	r2, [pc, #236]	; (400688 <main+0x180>)
  40059a:	69d3      	ldr	r3, [r2, #28]
  40059c:	f423 53f0 	bic.w	r3, r3, #7680	; 0x1e00
	SUPC -> SUPC_PWMR = SUPC_PWMR_KEY_PASSWD | ul_pwmr | SUPC_PWMR_ECPWRS | ((12 & 0xFu) << 9);
  4005a0:	f043 43b4 	orr.w	r3, r3, #1509949440	; 0x5a000000
  4005a4:	f443 53c8 	orr.w	r3, r3, #6400	; 0x1900
  4005a8:	61d3      	str	r3, [r2, #28]
	WDT -> WDT_CR = WDT_CR_KEY_PASSWD;
  4005aa:	4b38      	ldr	r3, [pc, #224]	; (40068c <main+0x184>)
  4005ac:	f04f 4225 	mov.w	r2, #2768240640	; 0xa5000000
  4005b0:	601a      	str	r2, [r3, #0]
	WDT -> WDT_MR = WDT_MR_WDDIS;	//disable WDT, register can be written only once
  4005b2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4005b6:	605a      	str	r2, [r3, #4]
	Setup_PMC();
  4005b8:	4b35      	ldr	r3, [pc, #212]	; (400690 <main+0x188>)
  4005ba:	4798      	blx	r3
	Init_PIO();
  4005bc:	4b35      	ldr	r3, [pc, #212]	; (400694 <main+0x18c>)
  4005be:	4798      	blx	r3
	Init_UART();
  4005c0:	4b35      	ldr	r3, [pc, #212]	; (400698 <main+0x190>)
  4005c2:	4798      	blx	r3
	Setup_Matrix();
  4005c4:	4b35      	ldr	r3, [pc, #212]	; (40069c <main+0x194>)
  4005c6:	4798      	blx	r3
	Init_TWI();
  4005c8:	4b35      	ldr	r3, [pc, #212]	; (4006a0 <main+0x198>)
  4005ca:	4798      	blx	r3
	AK4588EN_Init();
  4005cc:	4b35      	ldr	r3, [pc, #212]	; (4006a4 <main+0x19c>)
  4005ce:	4798      	blx	r3
	UART_Printf("fpu, %d\r\n", ((REG_CPACR & 0xF00000) >> 20));
  4005d0:	4b35      	ldr	r3, [pc, #212]	; (4006a8 <main+0x1a0>)
  4005d2:	6819      	ldr	r1, [r3, #0]
  4005d4:	f3c1 5103 	ubfx	r1, r1, #20, #4
  4005d8:	4834      	ldr	r0, [pc, #208]	; (4006ac <main+0x1a4>)
  4005da:	4b35      	ldr	r3, [pc, #212]	; (4006b0 <main+0x1a8>)
  4005dc:	4798      	blx	r3
	Init_I2SC(TransmitBufL1, TransmitBufR1, ReceiveBufL1, ReceiveBufR1, I2SC_BUFFSZ);
  4005de:	f44f 7380 	mov.w	r3, #256	; 0x100
  4005e2:	9300      	str	r3, [sp, #0]
  4005e4:	4b33      	ldr	r3, [pc, #204]	; (4006b4 <main+0x1ac>)
  4005e6:	4a34      	ldr	r2, [pc, #208]	; (4006b8 <main+0x1b0>)
  4005e8:	4934      	ldr	r1, [pc, #208]	; (4006bc <main+0x1b4>)
  4005ea:	4835      	ldr	r0, [pc, #212]	; (4006c0 <main+0x1b8>)
  4005ec:	4c35      	ldr	r4, [pc, #212]	; (4006c4 <main+0x1bc>)
  4005ee:	47a0      	blx	r4
	UART_Puts("\r\nBoard_Init successful\r\nNow starting program\r\n");
  4005f0:	4835      	ldr	r0, [pc, #212]	; (4006c8 <main+0x1c0>)
  4005f2:	4b36      	ldr	r3, [pc, #216]	; (4006cc <main+0x1c4>)
  4005f4:	4798      	blx	r3
	arm_biquad_cas_df1_32x64_init_q31(
  4005f6:	4b36      	ldr	r3, [pc, #216]	; (4006d0 <main+0x1c8>)
  4005f8:	f103 0420 	add.w	r4, r3, #32
  4005fc:	2200      	movs	r2, #0
  4005fe:	9200      	str	r2, [sp, #0]
  400600:	4622      	mov	r2, r4
  400602:	2101      	movs	r1, #1
  400604:	a808      	add	r0, sp, #32
  400606:	4d33      	ldr	r5, [pc, #204]	; (4006d4 <main+0x1cc>)
  400608:	47a8      	blx	r5
	coeffs_f32[0] = b0;
  40060a:	f04f 537a 	mov.w	r3, #1048576000	; 0x3e800000
  40060e:	9303      	str	r3, [sp, #12]
	coeffs_f32[1] = b1;
  400610:	2300      	movs	r3, #0
  400612:	9304      	str	r3, [sp, #16]
	coeffs_f32[2] = b2;
  400614:	f04f 433e 	mov.w	r3, #3187671040	; 0xbe000000
  400618:	9305      	str	r3, [sp, #20]
	coeffs_f32[3] = a1;
  40061a:	4b2f      	ldr	r3, [pc, #188]	; (4006d8 <main+0x1d0>)
  40061c:	9306      	str	r3, [sp, #24]
	coeffs_f32[4] = a2;
  40061e:	4b2f      	ldr	r3, [pc, #188]	; (4006dc <main+0x1d4>)
  400620:	9307      	str	r3, [sp, #28]
	arm_float_to_q31(coeffs_f32, coeffs, 5);
  400622:	2205      	movs	r2, #5
  400624:	4621      	mov	r1, r4
  400626:	a803      	add	r0, sp, #12
  400628:	4b2d      	ldr	r3, [pc, #180]	; (4006e0 <main+0x1d8>)
  40062a:	4798      	blx	r3
		if (newdata) {
  40062c:	3c20      	subs	r4, #32
				if (FILTER_ON)	{ arm_biquad_cas_df1_32x64_q31(&BQ, ReceiveBufR1, TransmitBufR1, I2SC_BUFFSZ); }
  40062e:	4f23      	ldr	r7, [pc, #140]	; (4006bc <main+0x1b4>)
  400630:	4e20      	ldr	r6, [pc, #128]	; (4006b4 <main+0x1ac>)
  400632:	e00a      	b.n	40064a <main+0x142>
  400634:	f44f 7380 	mov.w	r3, #256	; 0x100
  400638:	463a      	mov	r2, r7
  40063a:	4631      	mov	r1, r6
  40063c:	a808      	add	r0, sp, #32
  40063e:	4d29      	ldr	r5, [pc, #164]	; (4006e4 <main+0x1dc>)
  400640:	47a8      	blx	r5
			newdata = 0;
  400642:	2300      	movs	r3, #0
  400644:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
		asm("nop");
  400648:	bf00      	nop
		if (newdata) {
  40064a:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
  40064e:	2b00      	cmp	r3, #0
  400650:	d0fa      	beq.n	400648 <main+0x140>
			if (PingPong == PING) {
  400652:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
  400656:	2b00      	cmp	r3, #0
  400658:	d1ec      	bne.n	400634 <main+0x12c>
				if (FILTER_ON)	{ arm_biquad_cas_df1_32x64_q31(&BQ, ReceiveBufR2, TransmitBufR2, I2SC_BUFFSZ); }
  40065a:	f44f 7380 	mov.w	r3, #256	; 0x100
  40065e:	4a22      	ldr	r2, [pc, #136]	; (4006e8 <main+0x1e0>)
  400660:	4922      	ldr	r1, [pc, #136]	; (4006ec <main+0x1e4>)
  400662:	a808      	add	r0, sp, #32
  400664:	4d1f      	ldr	r5, [pc, #124]	; (4006e4 <main+0x1dc>)
  400666:	47a8      	blx	r5
  400668:	e7eb      	b.n	400642 <main+0x13a>
  40066a:	bf00      	nop
  40066c:	004003fd 	.word	0x004003fd
  400670:	004004f1 	.word	0x004004f1
  400674:	04000500 	.word	0x04000500
  400678:	400e0a00 	.word	0x400e0a00
  40067c:	a5000008 	.word	0xa5000008
  400680:	400e0400 	.word	0x400e0400
  400684:	0e4d3f01 	.word	0x0e4d3f01
  400688:	400e1410 	.word	0x400e1410
  40068c:	400e1450 	.word	0x400e1450
  400690:	00400961 	.word	0x00400961
  400694:	004008e9 	.word	0x004008e9
  400698:	00400b95 	.word	0x00400b95
  40069c:	00400885 	.word	0x00400885
  4006a0:	00400ac9 	.word	0x00400ac9
  4006a4:	00400175 	.word	0x00400175
  4006a8:	e000ed88 	.word	0xe000ed88
  4006ac:	00403ebc 	.word	0x00403ebc
  4006b0:	00400c81 	.word	0x00400c81
  4006b4:	20000eb8 	.word	0x20000eb8
  4006b8:	20001ab8 	.word	0x20001ab8
  4006bc:	20000ab8 	.word	0x20000ab8
  4006c0:	200016b8 	.word	0x200016b8
  4006c4:	00400459 	.word	0x00400459
  4006c8:	00403ec8 	.word	0x00403ec8
  4006cc:	00400c55 	.word	0x00400c55
  4006d0:	20000a08 	.word	0x20000a08
  4006d4:	00401789 	.word	0x00401789
  4006d8:	bfddb3d7 	.word	0xbfddb3d7
  4006dc:	3f600000 	.word	0x3f600000
  4006e0:	00400dc1 	.word	0x00400dc1
  4006e4:	00400fc5 	.word	0x00400fc5
  4006e8:	200012b8 	.word	0x200012b8
  4006ec:	200026c4 	.word	0x200026c4

004006f0 <I2SC0_Handler>:

Pdc *I2SC0_2 = (Pdc *)((uint32_t)I2SC0 + 0x200U);                  /**< \brief (I2SC0 PDC ) Base Address R channel */

void I2SC0_Handler(void) {
	
	if (channelCount == CHANNEL_L && (I2SC0 -> I2SC_SR & I2SC_SR_ENDTX) ) {
  4006f0:	4b2f      	ldr	r3, [pc, #188]	; (4007b0 <I2SC0_Handler+0xc0>)
  4006f2:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
  4006f6:	bb4b      	cbnz	r3, 40074c <I2SC0_Handler+0x5c>
  4006f8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  4006fc:	689b      	ldr	r3, [r3, #8]
  4006fe:	f013 0f80 	tst.w	r3, #128	; 0x80
  400702:	d044      	beq.n	40078e <I2SC0_Handler+0x9e>

		if (PingPong == PING) {
  400704:	4b2a      	ldr	r3, [pc, #168]	; (4007b0 <I2SC0_Handler+0xc0>)
  400706:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
  40070a:	b98b      	cbnz	r3, 400730 <I2SC0_Handler+0x40>
			I2SC0 -> I2SC_TNPR = (uint32_t)ReceiveBufL1; //transmit buffer 1
  40070c:	4929      	ldr	r1, [pc, #164]	; (4007b4 <I2SC0_Handler+0xc4>)
  40070e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400712:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
			I2SC0 -> I2SC_TNCR = I2SC_BUFFSZ;
  400716:	f44f 7280 	mov.w	r2, #256	; 0x100
  40071a:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
			
			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL1; //receive to buffer 1
  40071e:	f8c3 1110 	str.w	r1, [r3, #272]	; 0x110
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
  400722:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114

			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL2; //receive to buffer 2
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
		}

		channelCount = CHANNEL_R;
  400726:	2201      	movs	r2, #1
  400728:	4b21      	ldr	r3, [pc, #132]	; (4007b0 <I2SC0_Handler+0xc0>)
  40072a:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  40072e:	4770      	bx	lr
			I2SC0 -> I2SC_TNPR = (uint32_t)ReceiveBufL2; //transmit buffer 2
  400730:	4921      	ldr	r1, [pc, #132]	; (4007b8 <I2SC0_Handler+0xc8>)
  400732:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400736:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
			I2SC0 -> I2SC_TNCR = I2SC_BUFFSZ;
  40073a:	f44f 7280 	mov.w	r2, #256	; 0x100
  40073e:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL2; //receive to buffer 2
  400742:	f8c3 1110 	str.w	r1, [r3, #272]	; 0x110
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
  400746:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  40074a:	e7ec      	b.n	400726 <I2SC0_Handler+0x36>
		
	} else if (channelCount == CHANNEL_R && (I2SC0 -> I2SC_SR & I2SC_SR_ENDTX) ) {	
  40074c:	2b01      	cmp	r3, #1
  40074e:	d11e      	bne.n	40078e <I2SC0_Handler+0x9e>
  400750:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400754:	689b      	ldr	r3, [r3, #8]
  400756:	f013 0f80 	tst.w	r3, #128	; 0x80
  40075a:	d018      	beq.n	40078e <I2SC0_Handler+0x9e>
		
		if (PingPong == PING) {
  40075c:	4b14      	ldr	r3, [pc, #80]	; (4007b0 <I2SC0_Handler+0xc0>)
  40075e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
  400762:	b9ab      	cbnz	r3, 400790 <I2SC0_Handler+0xa0>
			I2SC0_2 -> PERIPH_TNPR = (uint32_t)TransmitBufR1;
  400764:	4b15      	ldr	r3, [pc, #84]	; (4007bc <I2SC0_Handler+0xcc>)
  400766:	681b      	ldr	r3, [r3, #0]
  400768:	4a15      	ldr	r2, [pc, #84]	; (4007c0 <I2SC0_Handler+0xd0>)
  40076a:	619a      	str	r2, [r3, #24]
			I2SC0_2 -> PERIPH_TNCR = I2SC_BUFFSZ;
  40076c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400770:	61da      	str	r2, [r3, #28]

			I2SC0_2 -> PERIPH_RNPR = (uint32_t)ReceiveBufR1;
  400772:	4914      	ldr	r1, [pc, #80]	; (4007c4 <I2SC0_Handler+0xd4>)
  400774:	6119      	str	r1, [r3, #16]
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
  400776:	615a      	str	r2, [r3, #20]

			PingPong = PONG; 
  400778:	2201      	movs	r2, #1
  40077a:	4b0d      	ldr	r3, [pc, #52]	; (4007b0 <I2SC0_Handler+0xc0>)
  40077c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
			
			PingPong = PING;
		}
		
		channelCount = CHANNEL_L;
  400780:	4b0b      	ldr	r3, [pc, #44]	; (4007b0 <I2SC0_Handler+0xc0>)
  400782:	2200      	movs	r2, #0
  400784:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
		newdata = 1;
  400788:	2201      	movs	r2, #1
  40078a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  40078e:	4770      	bx	lr
			I2SC0_2 -> PERIPH_TNPR = (uint32_t)TransmitBufR2;
  400790:	4b0a      	ldr	r3, [pc, #40]	; (4007bc <I2SC0_Handler+0xcc>)
  400792:	681b      	ldr	r3, [r3, #0]
  400794:	4a0c      	ldr	r2, [pc, #48]	; (4007c8 <I2SC0_Handler+0xd8>)
  400796:	619a      	str	r2, [r3, #24]
			I2SC0_2 -> PERIPH_TNCR = I2SC_BUFFSZ;
  400798:	f44f 7280 	mov.w	r2, #256	; 0x100
  40079c:	61da      	str	r2, [r3, #28]
			I2SC0_2 -> PERIPH_RNPR = (uint32_t)ReceiveBufR2;
  40079e:	490b      	ldr	r1, [pc, #44]	; (4007cc <I2SC0_Handler+0xdc>)
  4007a0:	6119      	str	r1, [r3, #16]
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
  4007a2:	615a      	str	r2, [r3, #20]
			PingPong = PING;
  4007a4:	2200      	movs	r2, #0
  4007a6:	4b02      	ldr	r3, [pc, #8]	; (4007b0 <I2SC0_Handler+0xc0>)
  4007a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  4007ac:	e7e8      	b.n	400780 <I2SC0_Handler+0x90>
  4007ae:	bf00      	nop
  4007b0:	20000a08 	.word	0x20000a08
  4007b4:	20001ab8 	.word	0x20001ab8
  4007b8:	20001ec4 	.word	0x20001ec4
  4007bc:	20000004 	.word	0x20000004
  4007c0:	20000ab8 	.word	0x20000ab8
  4007c4:	20000eb8 	.word	0x20000eb8
  4007c8:	200012b8 	.word	0x200012b8
  4007cc:	200026c4 	.word	0x200026c4

004007d0 <FLEXCOM1_Handler>:

volatile char ubuf[6];
volatile uint8_t i;

// USART1 RXRDY interrupt
void FLEXCOM1_Handler(void){
  4007d0:	b508      	push	{r3, lr}
	
	char c = USART1 -> US_RHR;
  4007d2:	4b26      	ldr	r3, [pc, #152]	; (40086c <FLEXCOM1_Handler+0x9c>)
  4007d4:	699b      	ldr	r3, [r3, #24]
  4007d6:	b2da      	uxtb	r2, r3
	
	/* if id: put id at end of str (after \0) */
	if (c == 'a' || c == 'f'){
  4007d8:	2a61      	cmp	r2, #97	; 0x61
  4007da:	d01c      	beq.n	400816 <FLEXCOM1_Handler+0x46>
  4007dc:	2a66      	cmp	r2, #102	; 0x66
  4007de:	d01a      	beq.n	400816 <FLEXCOM1_Handler+0x46>
		ubuf[5] = c;
		i = 0;
	}
	/* if a digit 0-9 */
	else if ((c - 48) < 10){
  4007e0:	b2db      	uxtb	r3, r3
  4007e2:	3b30      	subs	r3, #48	; 0x30
  4007e4:	2b09      	cmp	r3, #9
  4007e6:	dd21      	ble.n	40082c <FLEXCOM1_Handler+0x5c>
		ubuf[i++] = c;
	}
	/* when null terminator received*/
	else if (c == '\0' && i > 0){
  4007e8:	b9d2      	cbnz	r2, 400820 <FLEXCOM1_Handler+0x50>
  4007ea:	4b21      	ldr	r3, [pc, #132]	; (400870 <FLEXCOM1_Handler+0xa0>)
  4007ec:	781b      	ldrb	r3, [r3, #0]
  4007ee:	b1bb      	cbz	r3, 400820 <FLEXCOM1_Handler+0x50>
		ubuf[i] = c;
  4007f0:	4b1f      	ldr	r3, [pc, #124]	; (400870 <FLEXCOM1_Handler+0xa0>)
  4007f2:	781b      	ldrb	r3, [r3, #0]
  4007f4:	b2db      	uxtb	r3, r3
  4007f6:	4a1f      	ldr	r2, [pc, #124]	; (400874 <FLEXCOM1_Handler+0xa4>)
  4007f8:	2100      	movs	r1, #0
  4007fa:	54d1      	strb	r1, [r2, r3]
		
		if (ubuf[5] == 'a') ampl_db = atoi(ubuf);
  4007fc:	7953      	ldrb	r3, [r2, #5]
  4007fe:	b2db      	uxtb	r3, r3
  400800:	2b61      	cmp	r3, #97	; 0x61
  400802:	d01c      	beq.n	40083e <FLEXCOM1_Handler+0x6e>
		else if (ubuf[5] == 'f') fc = atoi(ubuf);
  400804:	4b1b      	ldr	r3, [pc, #108]	; (400874 <FLEXCOM1_Handler+0xa4>)
  400806:	795b      	ldrb	r3, [r3, #5]
  400808:	b2db      	uxtb	r3, r3
  40080a:	2b66      	cmp	r3, #102	; 0x66
  40080c:	d022      	beq.n	400854 <FLEXCOM1_Handler+0x84>
		//else error;
		
		//printf("%c %d\r\n", ubuf[5], atoi(ubuf));
		
		ubuf[5] = 0;
  40080e:	2200      	movs	r2, #0
  400810:	4b18      	ldr	r3, [pc, #96]	; (400874 <FLEXCOM1_Handler+0xa4>)
  400812:	715a      	strb	r2, [r3, #5]
  400814:	e004      	b.n	400820 <FLEXCOM1_Handler+0x50>
		ubuf[5] = c;
  400816:	4b17      	ldr	r3, [pc, #92]	; (400874 <FLEXCOM1_Handler+0xa4>)
  400818:	715a      	strb	r2, [r3, #5]
		i = 0;
  40081a:	2200      	movs	r2, #0
  40081c:	4b14      	ldr	r3, [pc, #80]	; (400870 <FLEXCOM1_Handler+0xa0>)
  40081e:	701a      	strb	r2, [r3, #0]
	}
		
	USART1 -> US_CR |= US_CR_RSTSTA_Msk; // clears overrun error OVRE bit in receiver, which then clears RXRDY
  400820:	4a12      	ldr	r2, [pc, #72]	; (40086c <FLEXCOM1_Handler+0x9c>)
  400822:	6813      	ldr	r3, [r2, #0]
  400824:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  400828:	6013      	str	r3, [r2, #0]
  40082a:	bd08      	pop	{r3, pc}
		ubuf[i++] = c;
  40082c:	4810      	ldr	r0, [pc, #64]	; (400870 <FLEXCOM1_Handler+0xa0>)
  40082e:	7803      	ldrb	r3, [r0, #0]
  400830:	b2db      	uxtb	r3, r3
  400832:	1c59      	adds	r1, r3, #1
  400834:	b2c9      	uxtb	r1, r1
  400836:	7001      	strb	r1, [r0, #0]
  400838:	490e      	ldr	r1, [pc, #56]	; (400874 <FLEXCOM1_Handler+0xa4>)
  40083a:	54ca      	strb	r2, [r1, r3]
  40083c:	e7f0      	b.n	400820 <FLEXCOM1_Handler+0x50>
		if (ubuf[5] == 'a') ampl_db = atoi(ubuf);
  40083e:	4610      	mov	r0, r2
  400840:	4b0d      	ldr	r3, [pc, #52]	; (400878 <FLEXCOM1_Handler+0xa8>)
  400842:	4798      	blx	r3
  400844:	ee07 0a90 	vmov	s15, r0
  400848:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  40084c:	4b0b      	ldr	r3, [pc, #44]	; (40087c <FLEXCOM1_Handler+0xac>)
  40084e:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
  400852:	e7dc      	b.n	40080e <FLEXCOM1_Handler+0x3e>
		else if (ubuf[5] == 'f') fc = atoi(ubuf);
  400854:	4807      	ldr	r0, [pc, #28]	; (400874 <FLEXCOM1_Handler+0xa4>)
  400856:	4b08      	ldr	r3, [pc, #32]	; (400878 <FLEXCOM1_Handler+0xa8>)
  400858:	4798      	blx	r3
  40085a:	ee07 0a90 	vmov	s15, r0
  40085e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  400862:	4b07      	ldr	r3, [pc, #28]	; (400880 <FLEXCOM1_Handler+0xb0>)
  400864:	edc3 7a01 	vstr	s15, [r3, #4]
  400868:	e7d1      	b.n	40080e <FLEXCOM1_Handler+0x3e>
  40086a:	bf00      	nop
  40086c:	40020200 	.word	0x40020200
  400870:	20001eb8 	.word	0x20001eb8
  400874:	20001ebc 	.word	0x20001ebc
  400878:	00401fe9 	.word	0x00401fe9
  40087c:	20000a08 	.word	0x20000a08
  400880:	20000004 	.word	0x20000004

00400884 <Setup_Matrix>:


void Setup_Matrix(void)
{
	/* Setup MATRIX[1] (processor system bus) slave peripheral bridge (MATRIX[3]) */
	MATRIX -> MATRIX_WPMR &=~(MATRIX_WPMR_WPEN);
  400884:	4b06      	ldr	r3, [pc, #24]	; (4008a0 <Setup_Matrix+0x1c>)
  400886:	f8d3 21e4 	ldr.w	r2, [r3, #484]	; 0x1e4
  40088a:	f022 0201 	bic.w	r2, r2, #1
  40088e:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	MATRIX -> MATRIX_WPMR = (MATRIX_WPMR_WPKEY_PASSWD);
  400892:	4a04      	ldr	r2, [pc, #16]	; (4008a4 <Setup_Matrix+0x20>)
  400894:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	
	//set I2S clock
	MATRIX -> CCFG_I2SCLKSEL = CCFG_I2SCLKSEL_CLKSEL0; //run I2SC of PCK4
  400898:	2201      	movs	r2, #1
  40089a:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
  40089e:	4770      	bx	lr
  4008a0:	400e0200 	.word	0x400e0200
  4008a4:	4d415400 	.word	0x4d415400

004008a8 <Led3State>:
	AK4558EN_PDN_State(1);
}

void Led3State(uint8_t state)
{
	if (state != 0) {
  4008a8:	b928      	cbnz	r0, 4008b6 <Led3State+0xe>
		/* light up LED */
		PIOA -> PIO_SODR	|= PIO_SODR_P28;		//Set output data register
	} else {
		PIOA -> PIO_CODR	|= PIO_CODR_P28;		//clear output data register
  4008aa:	4a06      	ldr	r2, [pc, #24]	; (4008c4 <Led3State+0x1c>)
  4008ac:	6b53      	ldr	r3, [r2, #52]	; 0x34
  4008ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  4008b2:	6353      	str	r3, [r2, #52]	; 0x34
  4008b4:	4770      	bx	lr
		PIOA -> PIO_SODR	|= PIO_SODR_P28;		//Set output data register
  4008b6:	4a03      	ldr	r2, [pc, #12]	; (4008c4 <Led3State+0x1c>)
  4008b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4008ba:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  4008be:	6313      	str	r3, [r2, #48]	; 0x30
  4008c0:	4770      	bx	lr
  4008c2:	bf00      	nop
  4008c4:	400e0e00 	.word	0x400e0e00

004008c8 <AK4558EN_PDN_State>:
	}
}

void AK4558EN_PDN_State(uint8_t state)
{
	if (state != 0) {
  4008c8:	b928      	cbnz	r0, 4008d6 <AK4558EN_PDN_State+0xe>
		/* set high */
		PIOA -> PIO_SODR	|= PIO_SODR_P27;		//Set output data register
		} else {
		PIOA -> PIO_CODR	|= PIO_CODR_P27;		//clear output data register
  4008ca:	4a06      	ldr	r2, [pc, #24]	; (4008e4 <AK4558EN_PDN_State+0x1c>)
  4008cc:	6b53      	ldr	r3, [r2, #52]	; 0x34
  4008ce:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
  4008d2:	6353      	str	r3, [r2, #52]	; 0x34
  4008d4:	4770      	bx	lr
		PIOA -> PIO_SODR	|= PIO_SODR_P27;		//Set output data register
  4008d6:	4a03      	ldr	r2, [pc, #12]	; (4008e4 <AK4558EN_PDN_State+0x1c>)
  4008d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4008da:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
  4008de:	6313      	str	r3, [r2, #48]	; 0x30
  4008e0:	4770      	bx	lr
  4008e2:	bf00      	nop
  4008e4:	400e0e00 	.word	0x400e0e00

004008e8 <Init_PIO>:
{
  4008e8:	b510      	push	{r4, lr}
	PIOA -> PIO_WPMR	&=~ PIO_WPMR_WPEN;
  4008ea:	4b18      	ldr	r3, [pc, #96]	; (40094c <Init_PIO+0x64>)
  4008ec:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  4008f0:	f022 0201 	bic.w	r2, r2, #1
  4008f4:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PIOA -> PIO_WPMR	|=  PIO_WPMR_WPKEY_PASSWD;
  4008f8:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  4008fc:	4c14      	ldr	r4, [pc, #80]	; (400950 <Init_PIO+0x68>)
  4008fe:	4322      	orrs	r2, r4
  400900:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PIOB -> PIO_WPMR	&=~ PIO_WPMR_WPEN;
  400904:	4a13      	ldr	r2, [pc, #76]	; (400954 <Init_PIO+0x6c>)
  400906:	f8d2 00e4 	ldr.w	r0, [r2, #228]	; 0xe4
  40090a:	f020 0001 	bic.w	r0, r0, #1
  40090e:	f8c2 00e4 	str.w	r0, [r2, #228]	; 0xe4
	PIOB -> PIO_WPMR	|=  PIO_WPMR_WPKEY_PASSWD;
  400912:	f8d2 10e4 	ldr.w	r1, [r2, #228]	; 0xe4
  400916:	4321      	orrs	r1, r4
  400918:	f8c2 10e4 	str.w	r1, [r2, #228]	; 0xe4
	PIOA -> PIO_PDR	=	0xFFFFFFFF;
  40091c:	f04f 31ff 	mov.w	r1, #4294967295
  400920:	6059      	str	r1, [r3, #4]
	PIOB -> PIO_PDR	=	0xFFFFFFFF;
  400922:	6051      	str	r1, [r2, #4]
	PIOA -> PIO_PER		|=	PIO_PER_P27 | PIO_PER_P28 | PIO_PER_P29 | PIO_PER_P30;	//only pins I want to control through the PIO controller
  400924:	681a      	ldr	r2, [r3, #0]
  400926:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  40092a:	601a      	str	r2, [r3, #0]
	PIOA -> PIO_OER		|=	PIO_OER_P27 | PIO_OER_P28 | PIO_OER_P29 | PIO_PER_P30;
  40092c:	691a      	ldr	r2, [r3, #16]
  40092e:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  400932:	611a      	str	r2, [r3, #16]
	PIOA -> PIO_CODR	|=	PIO_CODR_P27| PIO_CODR_P28| PIO_CODR_P29| PIO_PER_P30;
  400934:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  400936:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  40093a:	635a      	str	r2, [r3, #52]	; 0x34
	Led3State(0);
  40093c:	2000      	movs	r0, #0
  40093e:	4b06      	ldr	r3, [pc, #24]	; (400958 <Init_PIO+0x70>)
  400940:	4798      	blx	r3
	AK4558EN_PDN_State(1);
  400942:	2001      	movs	r0, #1
  400944:	4b05      	ldr	r3, [pc, #20]	; (40095c <Init_PIO+0x74>)
  400946:	4798      	blx	r3
  400948:	bd10      	pop	{r4, pc}
  40094a:	bf00      	nop
  40094c:	400e0e00 	.word	0x400e0e00
  400950:	50494f00 	.word	0x50494f00
  400954:	400e1000 	.word	0x400e1000
  400958:	004008a9 	.word	0x004008a9
  40095c:	004008c9 	.word	0x004008c9

00400960 <Setup_PMC>:
 */

void Setup_PMC(void)
{	
	/* Write Key */
	PMC -> PMC_WPMR  &=~PMC_WPMR_WPEN;
  400960:	4b1f      	ldr	r3, [pc, #124]	; (4009e0 <Setup_PMC+0x80>)
  400962:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400966:	f022 0201 	bic.w	r2, r2, #1
  40096a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PMC -> PMC_WPMR  |= PMC_WPMR_WPKEY_PASSWD;
  40096e:	f8d3 10e4 	ldr.w	r1, [r3, #228]	; 0xe4
  400972:	4a1c      	ldr	r2, [pc, #112]	; (4009e4 <Setup_PMC+0x84>)
  400974:	430a      	orrs	r2, r1
  400976:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
			
	/* Init IO ports */
	PMC -> PMC_PCER0	=	PMC_PCER0_PID8		//enable FLEXCOM_0 for TWI0
  40097a:	4a1b      	ldr	r2, [pc, #108]	; (4009e8 <Setup_PMC+0x88>)
  40097c:	611a      	str	r2, [r3, #16]
						|	PMC_PCER0_PID11		//enable PIOA peripheral clock
						|	PMC_PCER0_PID12		//enable PIOB peripheral clock
						|	PMC_PCER0_PID16;	//enable I2SC0 peripheral clock
	
	/* Setup PCK1 for output on led, output freq of 800.000 Hz */
	PMC -> PMC_SCDR		= PMC_SCDR_PCK1;					//disable system clock 6 (FLEXCOM 0/1/2/3)
  40097e:	f44f 7200 	mov.w	r2, #512	; 0x200
  400982:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[1]	= PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val) | PMC_PCK_PRES(0);	//use master clock with prescaler(149 + 1)
  400984:	2204      	movs	r2, #4
  400986:	645a      	str	r2, [r3, #68]	; 0x44
	while(!((PMC -> PMC_SR & PMC_SR_PCKRDY1)));				//wait for programmable clock to be ready
  400988:	461a      	mov	r2, r3
  40098a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40098c:	f413 7f00 	tst.w	r3, #512	; 0x200
  400990:	d0fb      	beq.n	40098a <Setup_PMC+0x2a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK1;					//enable PCK1
  400992:	4b13      	ldr	r3, [pc, #76]	; (4009e0 <Setup_PMC+0x80>)
  400994:	681a      	ldr	r2, [r3, #0]
  400996:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  40099a:	601a      	str	r2, [r3, #0]
		
	/* Setup PCK4 for I2SC */
	PMC -> PMC_SCDR		|= PMC_SCDR_PCK4;	//disable clock before setup
  40099c:	685a      	ldr	r2, [r3, #4]
  40099e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  4009a2:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[4]	 = PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val)| PMC_PCK_PRES(4); //120.000.000 / 4 = 30.000.000 clock
  4009a4:	2244      	movs	r2, #68	; 0x44
  4009a6:	651a      	str	r2, [r3, #80]	; 0x50
	while (!(PMC -> PMC_SR & (PMC_SR_PCKRDY4)));
  4009a8:	461a      	mov	r2, r3
  4009aa:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4009ac:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  4009b0:	d0fb      	beq.n	4009aa <Setup_PMC+0x4a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK4; //enable PCK4
  4009b2:	4b0b      	ldr	r3, [pc, #44]	; (4009e0 <Setup_PMC+0x80>)
  4009b4:	681a      	ldr	r2, [r3, #0]
  4009b6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  4009ba:	601a      	str	r2, [r3, #0]
	
	/* Setup PCK6 for TWI, output freq of 800.000 Hz */
	PMC -> PMC_SCDR		= PMC_SCDR_PCK6;					//disable system clock 6 (FLEXCOM 0/1/2/3)
  4009bc:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4009c0:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[6]	= PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val) | PMC_PCK_PRES(149);	//use master clock with prescaler(149 + 1)
  4009c2:	f640 1254 	movw	r2, #2388	; 0x954
  4009c6:	659a      	str	r2, [r3, #88]	; 0x58
	while(!((PMC -> PMC_SR & PMC_SR_PCKRDY6)));				//wait for programmable clock to be ready
  4009c8:	461a      	mov	r2, r3
  4009ca:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4009cc:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  4009d0:	d0fb      	beq.n	4009ca <Setup_PMC+0x6a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK6;					//enable PCK6
  4009d2:	4a03      	ldr	r2, [pc, #12]	; (4009e0 <Setup_PMC+0x80>)
  4009d4:	6813      	ldr	r3, [r2, #0]
  4009d6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  4009da:	6013      	str	r3, [r2, #0]
  4009dc:	4770      	bx	lr
  4009de:	bf00      	nop
  4009e0:	400e0400 	.word	0x400e0400
  4009e4:	504d4300 	.word	0x504d4300
  4009e8:	00011b00 	.word	0x00011b00

004009ec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4009ec:	4b0a      	ldr	r3, [pc, #40]	; (400a18 <_sbrk+0x2c>)
  4009ee:	681b      	ldr	r3, [r3, #0]
  4009f0:	b153      	cbz	r3, 400a08 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4009f2:	4b09      	ldr	r3, [pc, #36]	; (400a18 <_sbrk+0x2c>)
  4009f4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4009f6:	181a      	adds	r2, r3, r0
  4009f8:	4908      	ldr	r1, [pc, #32]	; (400a1c <_sbrk+0x30>)
  4009fa:	4291      	cmp	r1, r2
  4009fc:	db08      	blt.n	400a10 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4009fe:	4610      	mov	r0, r2
  400a00:	4a05      	ldr	r2, [pc, #20]	; (400a18 <_sbrk+0x2c>)
  400a02:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400a04:	4618      	mov	r0, r3
  400a06:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400a08:	4a05      	ldr	r2, [pc, #20]	; (400a20 <_sbrk+0x34>)
  400a0a:	4b03      	ldr	r3, [pc, #12]	; (400a18 <_sbrk+0x2c>)
  400a0c:	601a      	str	r2, [r3, #0]
  400a0e:	e7f0      	b.n	4009f2 <_sbrk+0x6>
		return (caddr_t) -1;	
  400a10:	f04f 30ff 	mov.w	r0, #4294967295
}
  400a14:	4770      	bx	lr
  400a16:	bf00      	nop
  400a18:	20000a4c 	.word	0x20000a4c
  400a1c:	20027ffc 	.word	0x20027ffc
  400a20:	20005cf8 	.word	0x20005cf8

00400a24 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400a24:	f04f 30ff 	mov.w	r0, #4294967295
  400a28:	4770      	bx	lr

00400a2a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400a2a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400a2e:	604b      	str	r3, [r1, #4]

	return 0;
}
  400a30:	2000      	movs	r0, #0
  400a32:	4770      	bx	lr

00400a34 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400a34:	2001      	movs	r0, #1
  400a36:	4770      	bx	lr

00400a38 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400a38:	2000      	movs	r0, #0
  400a3a:	4770      	bx	lr

00400a3c <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400a3c:	3801      	subs	r0, #1
  400a3e:	2802      	cmp	r0, #2
  400a40:	d815      	bhi.n	400a6e <_write+0x32>
{
  400a42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400a46:	460e      	mov	r6, r1
  400a48:	4614      	mov	r4, r2
		return -1;
	}
	for (; len != 0; --len) {
  400a4a:	b19a      	cbz	r2, 400a74 <_write+0x38>
  400a4c:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400a4e:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400a88 <_write+0x4c>
  400a52:	4f0c      	ldr	r7, [pc, #48]	; (400a84 <_write+0x48>)
  400a54:	f8d8 0000 	ldr.w	r0, [r8]
  400a58:	f815 1b01 	ldrb.w	r1, [r5], #1
  400a5c:	683b      	ldr	r3, [r7, #0]
  400a5e:	4798      	blx	r3
  400a60:	2800      	cmp	r0, #0
  400a62:	db0a      	blt.n	400a7a <_write+0x3e>
  400a64:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400a66:	3c01      	subs	r4, #1
  400a68:	d1f4      	bne.n	400a54 <_write+0x18>
  400a6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400a6e:	f04f 30ff 	mov.w	r0, #4294967295
  400a72:	4770      	bx	lr
	for (; len != 0; --len) {
  400a74:	4610      	mov	r0, r2
  400a76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400a7a:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}

	return nChars;
}
  400a7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400a82:	bf00      	nop
  400a84:	20002ac8 	.word	0x20002ac8
  400a88:	20002acc 	.word	0x20002acc

00400a8c <_read>:

void (*ptr_get)(void volatile*, char*);

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400a90:	b980      	cbnz	r0, 400ab4 <_read+0x28>
  400a92:	460c      	mov	r4, r1
  400a94:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400a96:	2a00      	cmp	r2, #0
  400a98:	dd0f      	ble.n	400aba <_read+0x2e>
  400a9a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400a9c:	4e08      	ldr	r6, [pc, #32]	; (400ac0 <_read+0x34>)
  400a9e:	4d09      	ldr	r5, [pc, #36]	; (400ac4 <_read+0x38>)
  400aa0:	6830      	ldr	r0, [r6, #0]
  400aa2:	4621      	mov	r1, r4
  400aa4:	682b      	ldr	r3, [r5, #0]
  400aa6:	4798      	blx	r3
		ptr++;
  400aa8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400aaa:	42bc      	cmp	r4, r7
  400aac:	d1f8      	bne.n	400aa0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400aae:	4640      	mov	r0, r8
  400ab0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400ab4:	f04f 38ff 	mov.w	r8, #4294967295
  400ab8:	e7f9      	b.n	400aae <_read+0x22>
	for (; len > 0; --len) {
  400aba:	4680      	mov	r8, r0
  400abc:	e7f7      	b.n	400aae <_read+0x22>
  400abe:	bf00      	nop
  400ac0:	20002acc 	.word	0x20002acc
  400ac4:	20002ac4 	.word	0x20002ac4

00400ac8 <Init_TWI>:
 * Clock_In = (120.000.000 / 150 = 800.000)
 * 400.000 = 800.000 / 2
 * CLKDIV * 2^(CKDIV) = 8
 */
void Init_TWI(void)
{
  400ac8:	b508      	push	{r3, lr}


static void TWI_PioSetup(void)
{
	/* enable internal pull up on TWI pins PA9 (SCL) & PA10 (SDA) */
	PIOA -> PIO_PPDDR	|= PIO_PPDDR_P9 | PIO_PPDDR_P10;	//first disable internal pull down
  400aca:	4b19      	ldr	r3, [pc, #100]	; (400b30 <Init_TWI+0x68>)
  400acc:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
  400ad0:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400ad4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	PIOA -> PIO_PUER	|= PIO_PUSR_P9 | PIO_PUSR_P10;		//enable internal pull up
  400ad8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
  400ada:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400ade:	665a      	str	r2, [r3, #100]	; 0x64
	
	//enable peripheral control of IO pins
	PIOA -> PIO_PDR	|=	PIO_PDR_P9		//SCL
  400ae0:	685a      	ldr	r2, [r3, #4]
  400ae2:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400ae6:	605a      	str	r2, [r3, #4]
					|	PIO_PDR_P10;	//SDA
	
	//PA9 & PA10 to peripheral A (both bits should be zero)
	PIOA -> PIO_ABCDSR[0] &= ~(0x03 << 9);
  400ae8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400aea:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
  400aee:	671a      	str	r2, [r3, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~(0x03 << 9);
  400af0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400af2:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
  400af6:	675a      	str	r2, [r3, #116]	; 0x74
	FLEXCOM0 -> FLEXCOM_MR = FLEXCOM_MR_OPMODE_TWI;
  400af8:	2203      	movs	r2, #3
  400afa:	4b0e      	ldr	r3, [pc, #56]	; (400b34 <Init_TWI+0x6c>)
  400afc:	601a      	str	r2, [r3, #0]
	TWI0 -> TWI_WPMR &= ~(TWI_WPMR_WPEN);
  400afe:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
  400b02:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400b06:	f022 0201 	bic.w	r2, r2, #1
  400b0a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	TWI0 -> TWI_WPMR = TWI_WPMR_WPKEY_PASSWD;
  400b0e:	4a0a      	ldr	r2, [pc, #40]	; (400b38 <Init_TWI+0x70>)
  400b10:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	TWI0 -> TWI_CWGR	=	TWI_CWGR_CLDIV(0x01)
  400b14:	4a09      	ldr	r2, [pc, #36]	; (400b3c <Init_TWI+0x74>)
  400b16:	611a      	str	r2, [r3, #16]
	TWI0 -> TWI_CR		=	TWI_CR_MSEN		//master mode
  400b18:	4a09      	ldr	r2, [pc, #36]	; (400b40 <Init_TWI+0x78>)
  400b1a:	601a      	str	r2, [r3, #0]
	TWI0 -> TWI_FILTR	=	TWI_FILTR_PADFEN; //pad filter enable, must be enabled in high-speed mode		
  400b1c:	2202      	movs	r2, #2
  400b1e:	645a      	str	r2, [r3, #68]	; 0x44
	TWI0 -> TWI_MMR		=	TWI_MMR_IADRSZ_NONE	//no internal device address
  400b20:	f44f 1298 	mov.w	r2, #1245184	; 0x130000
  400b24:	605a      	str	r2, [r3, #4]
	UART_Puts("TWI Initialized\r\n");	
  400b26:	4807      	ldr	r0, [pc, #28]	; (400b44 <Init_TWI+0x7c>)
  400b28:	4b07      	ldr	r3, [pc, #28]	; (400b48 <Init_TWI+0x80>)
  400b2a:	4798      	blx	r3
  400b2c:	bd08      	pop	{r3, pc}
  400b2e:	bf00      	nop
  400b30:	400e0e00 	.word	0x400e0e00
  400b34:	4000c000 	.word	0x4000c000
  400b38:	54574900 	.word	0x54574900
  400b3c:	00130101 	.word	0x00130101
  400b40:	01000024 	.word	0x01000024
  400b44:	00403ef8 	.word	0x00403ef8
  400b48:	00400c55 	.word	0x00400c55

00400b4c <Ctrl_putchar>:
}


static inline int Ctrl_putchar(void volatile* usart, const char c)
{
	USART1 -> US_THR = (c & 0xFF);
  400b4c:	4b04      	ldr	r3, [pc, #16]	; (400b60 <Ctrl_putchar+0x14>)
  400b4e:	61d9      	str	r1, [r3, #28]
	while (!(((USART1 -> US_CSR) & US_CSR_TXRDY_Msk) == US_CSR_TXRDY_Msk));	//wait for character to shift out
  400b50:	461a      	mov	r2, r3
  400b52:	6953      	ldr	r3, [r2, #20]
  400b54:	f013 0f02 	tst.w	r3, #2
  400b58:	d0fb      	beq.n	400b52 <Ctrl_putchar+0x6>
	return 0;
}
  400b5a:	2000      	movs	r0, #0
  400b5c:	4770      	bx	lr
  400b5e:	bf00      	nop
  400b60:	40020200 	.word	0x40020200

00400b64 <convert>:
	}
	va_end(arg);
}

char* convert(unsigned int num, int base)
{
  400b64:	b410      	push	{r4}
  400b66:	4603      	mov	r3, r0
	static char Representation[17]= "0123456789ABCDEF";
	static char buffer[50];
	char *ptr;

	ptr = &buffer[49];
	*ptr = '\0';
  400b68:	4808      	ldr	r0, [pc, #32]	; (400b8c <convert+0x28>)
  400b6a:	2200      	movs	r2, #0
  400b6c:	f800 2f31 	strb.w	r2, [r0, #49]!

	do {
		*--ptr = Representation[num%base];
  400b70:	4c07      	ldr	r4, [pc, #28]	; (400b90 <convert+0x2c>)
  400b72:	fbb3 f2f1 	udiv	r2, r3, r1
  400b76:	fb01 3312 	mls	r3, r1, r2, r3
  400b7a:	5ce3      	ldrb	r3, [r4, r3]
  400b7c:	f800 3d01 	strb.w	r3, [r0, #-1]!
		num /= base;
  400b80:	4613      	mov	r3, r2
	}
	while(num != 0);
  400b82:	2a00      	cmp	r2, #0
  400b84:	d1f5      	bne.n	400b72 <convert+0xe>
	
	return (ptr);
}
  400b86:	f85d 4b04 	ldr.w	r4, [sp], #4
  400b8a:	4770      	bx	lr
  400b8c:	20000a50 	.word	0x20000a50
  400b90:	00403f0c 	.word	0x00403f0c

00400b94 <Init_UART>:
{	
  400b94:	b538      	push	{r3, r4, r5, lr}
	PIOB -> PIO_PDR	|=	PIO_PDR_P2	//Rx
  400b96:	4b1e      	ldr	r3, [pc, #120]	; (400c10 <Init_UART+0x7c>)
  400b98:	685a      	ldr	r2, [r3, #4]
  400b9a:	f042 020c 	orr.w	r2, r2, #12
  400b9e:	605a      	str	r2, [r3, #4]
	PIOB -> PIO_ABCDSR[0] &= ~(0x03 << 2);
  400ba0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400ba2:	f022 020c 	bic.w	r2, r2, #12
  400ba6:	671a      	str	r2, [r3, #112]	; 0x70
	PIOB -> PIO_ABCDSR[1] &= ~(0x03 << 2);
  400ba8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400baa:	f022 020c 	bic.w	r2, r2, #12
  400bae:	675a      	str	r2, [r3, #116]	; 0x74
	FLEXCOM1 -> FLEXCOM_MR = FLEXCOM_MR_OPMODE_USART;
  400bb0:	2201      	movs	r2, #1
  400bb2:	f5a3 2341 	sub.w	r3, r3, #790528	; 0xc1000
  400bb6:	601a      	str	r2, [r3, #0]
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400bb8:	4b16      	ldr	r3, [pc, #88]	; (400c14 <Init_UART+0x80>)
  400bba:	2110      	movs	r1, #16
  400bbc:	f883 1309 	strb.w	r1, [r3, #777]	; 0x309
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
  400bc0:	f44f 7100 	mov.w	r1, #512	; 0x200
  400bc4:	6019      	str	r1, [r3, #0]
	USART1 -> US_IER = US_IER_RXRDY;
  400bc6:	4b14      	ldr	r3, [pc, #80]	; (400c18 <Init_UART+0x84>)
  400bc8:	609a      	str	r2, [r3, #8]
	USART1 -> US_WPMR &= ~(US_WPMR_WPEN);
  400bca:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400bce:	f022 0201 	bic.w	r2, r2, #1
  400bd2:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	USART1 -> US_WPMR = US_WPMR_WPKEY_PASSWD;
  400bd6:	4a11      	ldr	r2, [pc, #68]	; (400c1c <Init_UART+0x88>)
  400bd8:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	USART1 -> US_BRGR	=	US_BRGR_CD(130);	//CLKDIV
  400bdc:	2282      	movs	r2, #130	; 0x82
  400bde:	621a      	str	r2, [r3, #32]
	USART1 -> US_MR	=	US_MR_USART_MODE_NORMAL
  400be0:	4a0f      	ldr	r2, [pc, #60]	; (400c20 <Init_UART+0x8c>)
  400be2:	605a      	str	r2, [r3, #4]
	USART1 -> US_CR	=	US_CR_RXEN	//enable receiver
  400be4:	2250      	movs	r2, #80	; 0x50
  400be6:	601a      	str	r2, [r3, #0]
	stdio_base = (void *)USART1;
  400be8:	4a0e      	ldr	r2, [pc, #56]	; (400c24 <Init_UART+0x90>)
  400bea:	6013      	str	r3, [r2, #0]
	ptr_put = (int (*)(void volatile*,char))&Ctrl_putchar;
  400bec:	4a0e      	ldr	r2, [pc, #56]	; (400c28 <Init_UART+0x94>)
  400bee:	4b0f      	ldr	r3, [pc, #60]	; (400c2c <Init_UART+0x98>)
  400bf0:	601a      	str	r2, [r3, #0]
	setbuf(stdout, NULL);	//dont buffer stdout
  400bf2:	4d0f      	ldr	r5, [pc, #60]	; (400c30 <Init_UART+0x9c>)
  400bf4:	682b      	ldr	r3, [r5, #0]
  400bf6:	2100      	movs	r1, #0
  400bf8:	6898      	ldr	r0, [r3, #8]
  400bfa:	4c0e      	ldr	r4, [pc, #56]	; (400c34 <Init_UART+0xa0>)
  400bfc:	47a0      	blx	r4
	setbuf(stdin, NULL);	//dont buffer stdin
  400bfe:	682b      	ldr	r3, [r5, #0]
  400c00:	2100      	movs	r1, #0
  400c02:	6858      	ldr	r0, [r3, #4]
  400c04:	47a0      	blx	r4
	printf("UART Initialized with printf\r\n");	
  400c06:	480c      	ldr	r0, [pc, #48]	; (400c38 <Init_UART+0xa4>)
  400c08:	4b0c      	ldr	r3, [pc, #48]	; (400c3c <Init_UART+0xa8>)
  400c0a:	4798      	blx	r3
  400c0c:	bd38      	pop	{r3, r4, r5, pc}
  400c0e:	bf00      	nop
  400c10:	400e1000 	.word	0x400e1000
  400c14:	e000e100 	.word	0xe000e100
  400c18:	40020200 	.word	0x40020200
  400c1c:	55534100 	.word	0x55534100
  400c20:	000808c0 	.word	0x000808c0
  400c24:	20002acc 	.word	0x20002acc
  400c28:	00400b4d 	.word	0x00400b4d
  400c2c:	20002ac8 	.word	0x20002ac8
  400c30:	20000038 	.word	0x20000038
  400c34:	00402189 	.word	0x00402189
  400c38:	00403f20 	.word	0x00403f20
  400c3c:	00402179 	.word	0x00402179

00400c40 <UART_Putchar>:
	USART1 -> US_THR = (c & 0xFF);
  400c40:	4b03      	ldr	r3, [pc, #12]	; (400c50 <UART_Putchar+0x10>)
  400c42:	61d8      	str	r0, [r3, #28]
	while (!(((USART1 -> US_CSR) & US_CSR_TXRDY_Msk) == US_CSR_TXRDY_Msk));	//wait for character to shift out
  400c44:	461a      	mov	r2, r3
  400c46:	6953      	ldr	r3, [r2, #20]
  400c48:	f013 0f02 	tst.w	r3, #2
  400c4c:	d0fb      	beq.n	400c46 <UART_Putchar+0x6>
}
  400c4e:	4770      	bx	lr
  400c50:	40020200 	.word	0x40020200

00400c54 <UART_Puts>:
{
  400c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c58:	4606      	mov	r6, r0
	for (uint8_t i = 0; i < strlen(str); i++) {
  400c5a:	2400      	movs	r4, #0
  400c5c:	4f06      	ldr	r7, [pc, #24]	; (400c78 <UART_Puts+0x24>)
		UART_Putchar(str[i]);
  400c5e:	f8df 801c 	ldr.w	r8, [pc, #28]	; 400c7c <UART_Puts+0x28>
	for (uint8_t i = 0; i < strlen(str); i++) {
  400c62:	e001      	b.n	400c68 <UART_Puts+0x14>
		UART_Putchar(str[i]);
  400c64:	5d70      	ldrb	r0, [r6, r5]
  400c66:	47c0      	blx	r8
  400c68:	b2e5      	uxtb	r5, r4
	for (uint8_t i = 0; i < strlen(str); i++) {
  400c6a:	4630      	mov	r0, r6
  400c6c:	47b8      	blx	r7
  400c6e:	3401      	adds	r4, #1
  400c70:	42a8      	cmp	r0, r5
  400c72:	d8f7      	bhi.n	400c64 <UART_Puts+0x10>
}
  400c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c78:	00402341 	.word	0x00402341
  400c7c:	00400c41 	.word	0x00400c41

00400c80 <UART_Printf>:
{
  400c80:	b40f      	push	{r0, r1, r2, r3}
  400c82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c86:	b082      	sub	sp, #8
  400c88:	ab08      	add	r3, sp, #32
  400c8a:	f853 4b04 	ldr.w	r4, [r3], #4
	va_start(arg, format);
  400c8e:	9301      	str	r3, [sp, #4]
	for (traverse = format; *traverse != '\0'; traverse++) {
  400c90:	7823      	ldrb	r3, [r4, #0]
  400c92:	b1bb      	cbz	r3, 400cc4 <UART_Printf+0x44>
			UART_Putchar(*traverse);
  400c94:	4d47      	ldr	r5, [pc, #284]	; (400db4 <UART_Printf+0x134>)
				char *CapitalHex = convert(i, 16);
  400c96:	f8df 8124 	ldr.w	r8, [pc, #292]	; 400dbc <UART_Printf+0x13c>
				UART_Puts(CapitalHex + 0x41);
  400c9a:	4f47      	ldr	r7, [pc, #284]	; (400db8 <UART_Printf+0x138>)
  400c9c:	e007      	b.n	400cae <UART_Printf+0x2e>
				i = va_arg(arg,int);
  400c9e:	9b01      	ldr	r3, [sp, #4]
  400ca0:	1d1a      	adds	r2, r3, #4
  400ca2:	9201      	str	r2, [sp, #4]
				UART_Putchar(i);
  400ca4:	7818      	ldrb	r0, [r3, #0]
  400ca6:	47a8      	blx	r5
	for (traverse = format; *traverse != '\0'; traverse++) {
  400ca8:	1cb4      	adds	r4, r6, #2
  400caa:	78b3      	ldrb	r3, [r6, #2]
  400cac:	b153      	cbz	r3, 400cc4 <UART_Printf+0x44>
		while (*traverse != '%' && *traverse != '\0') {
  400cae:	7820      	ldrb	r0, [r4, #0]
  400cb0:	2825      	cmp	r0, #37	; 0x25
  400cb2:	d07d      	beq.n	400db0 <UART_Printf+0x130>
  400cb4:	b130      	cbz	r0, 400cc4 <UART_Printf+0x44>
			UART_Putchar(*traverse);
  400cb6:	47a8      	blx	r5
		while (*traverse != '%' && *traverse != '\0') {
  400cb8:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  400cbc:	2825      	cmp	r0, #37	; 0x25
  400cbe:	d02d      	beq.n	400d1c <UART_Printf+0x9c>
  400cc0:	2800      	cmp	r0, #0
  400cc2:	d1f8      	bne.n	400cb6 <UART_Printf+0x36>
}
  400cc4:	b002      	add	sp, #8
  400cc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  400cca:	b004      	add	sp, #16
  400ccc:	4770      	bx	lr
				i = va_arg(arg,int);
  400cce:	9b01      	ldr	r3, [sp, #4]
  400cd0:	1d1a      	adds	r2, r3, #4
  400cd2:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 10));
  400cd4:	210a      	movs	r1, #10
  400cd6:	6818      	ldr	r0, [r3, #0]
  400cd8:	47c0      	blx	r8
  400cda:	47b8      	blx	r7
				break;
  400cdc:	e7e4      	b.n	400ca8 <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  400cde:	9b01      	ldr	r3, [sp, #4]
  400ce0:	1d1a      	adds	r2, r3, #4
  400ce2:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 8));
  400ce4:	2108      	movs	r1, #8
  400ce6:	6818      	ldr	r0, [r3, #0]
  400ce8:	47c0      	blx	r8
  400cea:	47b8      	blx	r7
				break;
  400cec:	e7dc      	b.n	400ca8 <UART_Printf+0x28>
			case 's': s = va_arg(arg, char*);
  400cee:	9b01      	ldr	r3, [sp, #4]
  400cf0:	1d1a      	adds	r2, r3, #4
  400cf2:	9201      	str	r2, [sp, #4]
				UART_Puts(s);
  400cf4:	6818      	ldr	r0, [r3, #0]
  400cf6:	47b8      	blx	r7
				break;
  400cf8:	e7d6      	b.n	400ca8 <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  400cfa:	9b01      	ldr	r3, [sp, #4]
  400cfc:	1d1a      	adds	r2, r3, #4
  400cfe:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 16));
  400d00:	2110      	movs	r1, #16
  400d02:	6818      	ldr	r0, [r3, #0]
  400d04:	47c0      	blx	r8
  400d06:	47b8      	blx	r7
				break;
  400d08:	e7ce      	b.n	400ca8 <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  400d0a:	9b01      	ldr	r3, [sp, #4]
  400d0c:	1d1a      	adds	r2, r3, #4
  400d0e:	9201      	str	r2, [sp, #4]
				char *CapitalHex = convert(i, 16);
  400d10:	2110      	movs	r1, #16
  400d12:	6818      	ldr	r0, [r3, #0]
  400d14:	47c0      	blx	r8
				UART_Puts(CapitalHex + 0x41);
  400d16:	3041      	adds	r0, #65	; 0x41
  400d18:	47b8      	blx	r7
				break;
  400d1a:	e7c5      	b.n	400ca8 <UART_Printf+0x28>
			traverse++;
  400d1c:	4626      	mov	r6, r4
		switch (*traverse) {
  400d1e:	7873      	ldrb	r3, [r6, #1]
  400d20:	3b58      	subs	r3, #88	; 0x58
  400d22:	2b20      	cmp	r3, #32
  400d24:	d8c0      	bhi.n	400ca8 <UART_Printf+0x28>
  400d26:	a201      	add	r2, pc, #4	; (adr r2, 400d2c <UART_Printf+0xac>)
  400d28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400d2c:	00400d0b 	.word	0x00400d0b
  400d30:	00400ca9 	.word	0x00400ca9
  400d34:	00400ca9 	.word	0x00400ca9
  400d38:	00400ca9 	.word	0x00400ca9
  400d3c:	00400ca9 	.word	0x00400ca9
  400d40:	00400ca9 	.word	0x00400ca9
  400d44:	00400ca9 	.word	0x00400ca9
  400d48:	00400ca9 	.word	0x00400ca9
  400d4c:	00400ca9 	.word	0x00400ca9
  400d50:	00400ca9 	.word	0x00400ca9
  400d54:	00400ca9 	.word	0x00400ca9
  400d58:	00400c9f 	.word	0x00400c9f
  400d5c:	00400ccf 	.word	0x00400ccf
  400d60:	00400ca9 	.word	0x00400ca9
  400d64:	00400ca9 	.word	0x00400ca9
  400d68:	00400ca9 	.word	0x00400ca9
  400d6c:	00400ca9 	.word	0x00400ca9
  400d70:	00400ca9 	.word	0x00400ca9
  400d74:	00400ca9 	.word	0x00400ca9
  400d78:	00400ca9 	.word	0x00400ca9
  400d7c:	00400ca9 	.word	0x00400ca9
  400d80:	00400ca9 	.word	0x00400ca9
  400d84:	00400ca9 	.word	0x00400ca9
  400d88:	00400cdf 	.word	0x00400cdf
  400d8c:	00400ca9 	.word	0x00400ca9
  400d90:	00400ca9 	.word	0x00400ca9
  400d94:	00400ca9 	.word	0x00400ca9
  400d98:	00400cef 	.word	0x00400cef
  400d9c:	00400ca9 	.word	0x00400ca9
  400da0:	00400ca9 	.word	0x00400ca9
  400da4:	00400ca9 	.word	0x00400ca9
  400da8:	00400ca9 	.word	0x00400ca9
  400dac:	00400cfb 	.word	0x00400cfb
		while (*traverse != '%' && *traverse != '\0') {
  400db0:	4626      	mov	r6, r4
  400db2:	e7b4      	b.n	400d1e <UART_Printf+0x9e>
  400db4:	00400c41 	.word	0x00400c41
  400db8:	00400c55 	.word	0x00400c55
  400dbc:	00400b65 	.word	0x00400b65

00400dc0 <arm_float_to_q31>:
  400dc0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400dc4:	ea5f 0992 	movs.w	r9, r2, lsr #2
  400dc8:	ed2d 8b04 	vpush	{d8-d9}
  400dcc:	4690      	mov	r8, r2
  400dce:	4683      	mov	fp, r0
  400dd0:	468a      	mov	sl, r1
  400dd2:	d07e      	beq.n	400ed2 <arm_float_to_q31+0x112>
  400dd4:	ed9f 9a7a 	vldr	s18, [pc, #488]	; 400fc0 <arm_float_to_q31+0x200>
  400dd8:	f100 0410 	add.w	r4, r0, #16
  400ddc:	f101 0510 	add.w	r5, r1, #16
  400de0:	464e      	mov	r6, r9
  400de2:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
  400de6:	eebe 8a00 	vmov.f32	s16, #224	; 0xbf000000 -0.5
  400dea:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
  400dee:	ed54 7a04 	vldr	s15, [r4, #-16]
  400df2:	ee67 7a89 	vmul.f32	s15, s15, s18
  400df6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400dfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400dfe:	bfd4      	ite	le
  400e00:	eeb0 7a48 	vmovle.f32	s14, s16
  400e04:	eeb0 7a68 	vmovgt.f32	s14, s17
  400e08:	ee77 7a27 	vadd.f32	s15, s14, s15
  400e0c:	ee17 0a90 	vmov	r0, s15
  400e10:	f000 fcc8 	bl	4017a4 <__aeabi_f2lz>
  400e14:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400e18:	bf18      	it	ne
  400e1a:	ea87 70e1 	eorne.w	r0, r7, r1, asr #31
  400e1e:	f845 0c10 	str.w	r0, [r5, #-16]
  400e22:	ed54 7a03 	vldr	s15, [r4, #-12]
  400e26:	ee67 7a89 	vmul.f32	s15, s15, s18
  400e2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400e2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400e32:	bfd4      	ite	le
  400e34:	eeb0 7a48 	vmovle.f32	s14, s16
  400e38:	eeb0 7a68 	vmovgt.f32	s14, s17
  400e3c:	ee77 7a27 	vadd.f32	s15, s14, s15
  400e40:	ee17 0a90 	vmov	r0, s15
  400e44:	f000 fcae 	bl	4017a4 <__aeabi_f2lz>
  400e48:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400e4c:	bf18      	it	ne
  400e4e:	ea87 70e1 	eorne.w	r0, r7, r1, asr #31
  400e52:	f845 0c0c 	str.w	r0, [r5, #-12]
  400e56:	ed54 7a02 	vldr	s15, [r4, #-8]
  400e5a:	ee67 7a89 	vmul.f32	s15, s15, s18
  400e5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400e62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400e66:	bfd4      	ite	le
  400e68:	eeb0 7a48 	vmovle.f32	s14, s16
  400e6c:	eeb0 7a68 	vmovgt.f32	s14, s17
  400e70:	ee77 7a27 	vadd.f32	s15, s14, s15
  400e74:	ee17 0a90 	vmov	r0, s15
  400e78:	f000 fc94 	bl	4017a4 <__aeabi_f2lz>
  400e7c:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400e80:	bf18      	it	ne
  400e82:	ea87 70e1 	eorne.w	r0, r7, r1, asr #31
  400e86:	f845 0c08 	str.w	r0, [r5, #-8]
  400e8a:	ed54 7a01 	vldr	s15, [r4, #-4]
  400e8e:	ee67 7a89 	vmul.f32	s15, s15, s18
  400e92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400e96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400e9a:	bfd4      	ite	le
  400e9c:	eeb0 7a48 	vmovle.f32	s14, s16
  400ea0:	eeb0 7a68 	vmovgt.f32	s14, s17
  400ea4:	ee77 7a87 	vadd.f32	s15, s15, s14
  400ea8:	ee17 0a90 	vmov	r0, s15
  400eac:	f000 fc7a 	bl	4017a4 <__aeabi_f2lz>
  400eb0:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400eb4:	ea87 73e1 	eor.w	r3, r7, r1, asr #31
  400eb8:	d078      	beq.n	400fac <arm_float_to_q31+0x1ec>
  400eba:	3e01      	subs	r6, #1
  400ebc:	f845 3c04 	str.w	r3, [r5, #-4]
  400ec0:	f104 0410 	add.w	r4, r4, #16
  400ec4:	f105 0510 	add.w	r5, r5, #16
  400ec8:	d191      	bne.n	400dee <arm_float_to_q31+0x2e>
  400eca:	ea4f 1909 	mov.w	r9, r9, lsl #4
  400ece:	44ca      	add	sl, r9
  400ed0:	44cb      	add	fp, r9
  400ed2:	f018 0803 	ands.w	r8, r8, #3
  400ed6:	d065      	beq.n	400fa4 <arm_float_to_q31+0x1e4>
  400ed8:	eddb 7a00 	vldr	s15, [fp]
  400edc:	ed9f 7a38 	vldr	s14, [pc, #224]	; 400fc0 <arm_float_to_q31+0x200>
  400ee0:	ee67 7a87 	vmul.f32	s15, s15, s14
  400ee4:	eefe 6a00 	vmov.f32	s13, #224	; 0xbf000000 -0.5
  400ee8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400ef0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
  400ef4:	bfd8      	it	le
  400ef6:	eeb0 7a66 	vmovle.f32	s14, s13
  400efa:	ee77 7a27 	vadd.f32	s15, s14, s15
  400efe:	ee17 0a90 	vmov	r0, s15
  400f02:	f000 fc4f 	bl	4017a4 <__aeabi_f2lz>
  400f06:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400f0a:	bf1c      	itt	ne
  400f0c:	f06f 4000 	mvnne.w	r0, #2147483648	; 0x80000000
  400f10:	ea80 70e1 	eorne.w	r0, r0, r1, asr #31
  400f14:	f1b8 0801 	subs.w	r8, r8, #1
  400f18:	f8ca 0000 	str.w	r0, [sl]
  400f1c:	d042      	beq.n	400fa4 <arm_float_to_q31+0x1e4>
  400f1e:	eddb 7a01 	vldr	s15, [fp, #4]
  400f22:	ed9f 7a27 	vldr	s14, [pc, #156]	; 400fc0 <arm_float_to_q31+0x200>
  400f26:	ee67 7a87 	vmul.f32	s15, s15, s14
  400f2a:	eefe 6a00 	vmov.f32	s13, #224	; 0xbf000000 -0.5
  400f2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400f36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
  400f3a:	bfd8      	it	le
  400f3c:	eeb0 7a66 	vmovle.f32	s14, s13
  400f40:	ee77 7a27 	vadd.f32	s15, s14, s15
  400f44:	ee17 0a90 	vmov	r0, s15
  400f48:	f000 fc2c 	bl	4017a4 <__aeabi_f2lz>
  400f4c:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400f50:	bf1c      	itt	ne
  400f52:	f06f 4000 	mvnne.w	r0, #2147483648	; 0x80000000
  400f56:	ea80 70e1 	eorne.w	r0, r0, r1, asr #31
  400f5a:	f1b8 0f01 	cmp.w	r8, #1
  400f5e:	f8ca 0004 	str.w	r0, [sl, #4]
  400f62:	d01f      	beq.n	400fa4 <arm_float_to_q31+0x1e4>
  400f64:	eddb 7a02 	vldr	s15, [fp, #8]
  400f68:	ed9f 7a15 	vldr	s14, [pc, #84]	; 400fc0 <arm_float_to_q31+0x200>
  400f6c:	ee67 7a87 	vmul.f32	s15, s15, s14
  400f70:	eefe 6a00 	vmov.f32	s13, #224	; 0xbf000000 -0.5
  400f74:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400f7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
  400f80:	bfd8      	it	le
  400f82:	eeb0 7a66 	vmovle.f32	s14, s13
  400f86:	ee77 7a27 	vadd.f32	s15, s14, s15
  400f8a:	ee17 0a90 	vmov	r0, s15
  400f8e:	f000 fc09 	bl	4017a4 <__aeabi_f2lz>
  400f92:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
  400f96:	bf1c      	itt	ne
  400f98:	f06f 4000 	mvnne.w	r0, #2147483648	; 0x80000000
  400f9c:	ea80 70e1 	eorne.w	r0, r0, r1, asr #31
  400fa0:	f8ca 0008 	str.w	r0, [sl, #8]
  400fa4:	ecbd 8b04 	vpop	{d8-d9}
  400fa8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400fac:	3e01      	subs	r6, #1
  400fae:	f845 0c04 	str.w	r0, [r5, #-4]
  400fb2:	f104 0410 	add.w	r4, r4, #16
  400fb6:	f105 0510 	add.w	r5, r5, #16
  400fba:	f47f af18 	bne.w	400dee <arm_float_to_q31+0x2e>
  400fbe:	e784      	b.n	400eca <arm_float_to_q31+0x10a>
  400fc0:	4f000000 	.word	0x4f000000

00400fc4 <arm_biquad_cas_df1_32x64_q31>:
  400fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400fc8:	b0af      	sub	sp, #188	; 0xbc
  400fca:	7b06      	ldrb	r6, [r0, #12]
  400fcc:	9228      	str	r2, [sp, #160]	; 0xa0
  400fce:	e9d0 4701 	ldrd	r4, r7, [r0, #4]
  400fd2:	7800      	ldrb	r0, [r0, #0]
  400fd4:	9027      	str	r0, [sp, #156]	; 0x9c
  400fd6:	0898      	lsrs	r0, r3, #2
  400fd8:	902a      	str	r0, [sp, #168]	; 0xa8
  400fda:	4694      	mov	ip, r2
  400fdc:	f003 0203 	and.w	r2, r3, #3
  400fe0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
  400fe2:	9122      	str	r1, [sp, #136]	; 0x88
  400fe4:	f1a6 011f 	sub.w	r1, r6, #31
  400fe8:	011b      	lsls	r3, r3, #4
  400fea:	911d      	str	r1, [sp, #116]	; 0x74
  400fec:	4661      	mov	r1, ip
  400fee:	1c75      	adds	r5, r6, #1
  400ff0:	932c      	str	r3, [sp, #176]	; 0xb0
  400ff2:	18cb      	adds	r3, r1, r3
  400ff4:	f1c5 0020 	rsb	r0, r5, #32
  400ff8:	932d      	str	r3, [sp, #180]	; 0xb4
  400ffa:	1e53      	subs	r3, r2, #1
  400ffc:	9329      	str	r3, [sp, #164]	; 0xa4
  400ffe:	e9cd 0020 	strd	r0, r0, [sp, #128]	; 0x80
  401002:	f107 0314 	add.w	r3, r7, #20
  401006:	9326      	str	r3, [sp, #152]	; 0x98
  401008:	f104 0320 	add.w	r3, r4, #32
  40100c:	901c      	str	r0, [sp, #112]	; 0x70
  40100e:	922b      	str	r2, [sp, #172]	; 0xac
  401010:	9016      	str	r0, [sp, #88]	; 0x58
  401012:	9325      	str	r3, [sp, #148]	; 0x94
  401014:	46a9      	mov	r9, r5
  401016:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401018:	f853 2c14 	ldr.w	r2, [r3, #-20]
  40101c:	9212      	str	r2, [sp, #72]	; 0x48
  40101e:	f853 2c10 	ldr.w	r2, [r3, #-16]
  401022:	f853 1c08 	ldr.w	r1, [r3, #-8]
  401026:	f853 0c04 	ldr.w	r0, [r3, #-4]
  40102a:	9213      	str	r2, [sp, #76]	; 0x4c
  40102c:	f853 2c0c 	ldr.w	r2, [r3, #-12]
  401030:	9b25      	ldr	r3, [sp, #148]	; 0x94
  401032:	9214      	str	r2, [sp, #80]	; 0x50
  401034:	f853 2c20 	ldr.w	r2, [r3, #-32]
  401038:	9215      	str	r2, [sp, #84]	; 0x54
  40103a:	f853 8c10 	ldr.w	r8, [r3, #-16]
  40103e:	f853 2c18 	ldr.w	r2, [r3, #-24]
  401042:	f853 ac04 	ldr.w	sl, [r3, #-4]
  401046:	9124      	str	r1, [sp, #144]	; 0x90
  401048:	e953 cb03 	ldrd	ip, fp, [r3, #-12]
  40104c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
  40104e:	9023      	str	r0, [sp, #140]	; 0x8c
  401050:	9208      	str	r2, [sp, #32]
  401052:	2b00      	cmp	r3, #0
  401054:	f000 838b 	beq.w	40176e <arm_biquad_cas_df1_32x64_q31+0x7aa>
  401058:	9a22      	ldr	r2, [sp, #136]	; 0x88
  40105a:	931e      	str	r3, [sp, #120]	; 0x78
  40105c:	4604      	mov	r4, r0
  40105e:	17c5      	asrs	r5, r0, #31
  401060:	3210      	adds	r2, #16
  401062:	e9cd 4500 	strd	r4, r5, [sp]
  401066:	920d      	str	r2, [sp, #52]	; 0x34
  401068:	460c      	mov	r4, r1
  40106a:	17cd      	asrs	r5, r1, #31
  40106c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40106e:	981d      	ldr	r0, [sp, #116]	; 0x74
  401070:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
  401074:	f8cd 9018 	str.w	r9, [sp, #24]
  401078:	e9cd 4502 	strd	r4, r5, [sp, #8]
  40107c:	3210      	adds	r2, #16
  40107e:	ea4f 73ea 	mov.w	r3, sl, asr #31
  401082:	920e      	str	r2, [sp, #56]	; 0x38
  401084:	931a      	str	r3, [sp, #104]	; 0x68
  401086:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
  40108a:	f8cd a010 	str.w	sl, [sp, #16]
  40108e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  401092:	9010      	str	r0, [sp, #64]	; 0x40
  401094:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  401098:	9817      	ldr	r0, [sp, #92]	; 0x5c
  40109a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
  40109c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  40109e:	fbac ab08 	umull	sl, fp, ip, r8
  4010a2:	ea4f 76ec 	mov.w	r6, ip, asr #31
  4010a6:	fb0c f309 	mul.w	r3, ip, r9
  4010aa:	fba0 0108 	umull	r0, r1, r0, r8
  4010ae:	fb06 3308 	mla	r3, r6, r8, r3
  4010b2:	465a      	mov	r2, fp
  4010b4:	441a      	add	r2, r3
  4010b6:	fb04 1309 	mla	r3, r4, r9, r1
  4010ba:	4619      	mov	r1, r3
  4010bc:	f855 7c10 	ldr.w	r7, [r5, #-16]
  4010c0:	971c      	str	r7, [sp, #112]	; 0x70
  4010c2:	17cc      	asrs	r4, r1, #31
  4010c4:	9912      	ldr	r1, [sp, #72]	; 0x48
  4010c6:	fb87 0101 	smull	r0, r1, r7, r1
  4010ca:	9f15      	ldr	r7, [sp, #84]	; 0x54
  4010cc:	46b8      	mov	r8, r7
  4010ce:	9f13      	ldr	r7, [sp, #76]	; 0x4c
  4010d0:	fbc7 0108 	smlal	r0, r1, r7, r8
  4010d4:	9f08      	ldr	r7, [sp, #32]
  4010d6:	46b8      	mov	r8, r7
  4010d8:	9f14      	ldr	r7, [sp, #80]	; 0x50
  4010da:	eb13 030a 	adds.w	r3, r3, sl
  4010de:	fbc7 0108 	smlal	r0, r1, r7, r8
  4010e2:	e9dd 8900 	ldrd	r8, r9, [sp]
  4010e6:	930d      	str	r3, [sp, #52]	; 0x34
  4010e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4010ea:	4693      	mov	fp, r2
  4010ec:	465f      	mov	r7, fp
  4010ee:	fba3 ab08 	umull	sl, fp, r3, r8
  4010f2:	fb03 bb09 	mla	fp, r3, r9, fp
  4010f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4010f8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
  4010fc:	eb44 0707 	adc.w	r7, r4, r7
  401100:	181b      	adds	r3, r3, r0
  401102:	eb47 0401 	adc.w	r4, r7, r1
  401106:	9f04      	ldr	r7, [sp, #16]
  401108:	981a      	ldr	r0, [sp, #104]	; 0x68
  40110a:	950d      	str	r5, [sp, #52]	; 0x34
  40110c:	464a      	mov	r2, r9
  40110e:	fb07 f702 	mul.w	r7, r7, r2
  401112:	9a04      	ldr	r2, [sp, #16]
  401114:	4641      	mov	r1, r8
  401116:	fb00 7701 	mla	r7, r0, r1, r7
  40111a:	fba2 0101 	umull	r0, r1, r2, r1
  40111e:	4439      	add	r1, r7
  401120:	465f      	mov	r7, fp
  401122:	17ff      	asrs	r7, r7, #31
  401124:	eb1b 0b00 	adds.w	fp, fp, r0
  401128:	eb41 0707 	adc.w	r7, r1, r7
  40112c:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40112e:	9906      	ldr	r1, [sp, #24]
  401130:	eb1b 0303 	adds.w	r3, fp, r3
  401134:	eb44 0707 	adc.w	r7, r4, r7
  401138:	fa03 f202 	lsl.w	r2, r3, r2
  40113c:	fa07 f001 	lsl.w	r0, r7, r1
  401140:	fa23 fe0e 	lsr.w	lr, r3, lr
  401144:	4607      	mov	r7, r0
  401146:	9c16      	ldr	r4, [sp, #88]	; 0x58
  401148:	4310      	orrs	r0, r2
  40114a:	ea40 020e 	orr.w	r2, r0, lr
  40114e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  401152:	fa23 f404 	lsr.w	r4, r3, r4
  401156:	9204      	str	r2, [sp, #16]
  401158:	408b      	lsls	r3, r1
  40115a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40115c:	9310      	str	r3, [sp, #64]	; 0x40
  40115e:	4327      	orrs	r7, r4
  401160:	9b04      	ldr	r3, [sp, #16]
  401162:	f842 7c10 	str.w	r7, [r2, #-16]
  401166:	f855 0c0c 	ldr.w	r0, [r5, #-12]
  40116a:	ea4f 7ee3 	mov.w	lr, r3, asr #31
  40116e:	fb03 f709 	mul.w	r7, r3, r9
  401172:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401174:	fba3 ab08 	umull	sl, fp, r3, r8
  401178:	4603      	mov	r3, r0
  40117a:	f855 0c08 	ldr.w	r0, [r5, #-8]
  40117e:	9008      	str	r0, [sp, #32]
  401180:	9a04      	ldr	r2, [sp, #16]
  401182:	9318      	str	r3, [sp, #96]	; 0x60
  401184:	4644      	mov	r4, r8
  401186:	fba2 0104 	umull	r0, r1, r2, r4
  40118a:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  40118e:	fb0e 7704 	mla	r7, lr, r4, r7
  401192:	4608      	mov	r0, r1
  401194:	9910      	ldr	r1, [sp, #64]	; 0x40
  401196:	9a01      	ldr	r2, [sp, #4]
  401198:	4438      	add	r0, r7
  40119a:	901b      	str	r0, [sp, #108]	; 0x6c
  40119c:	fb01 b709 	mla	r7, r1, r9, fp
  4011a0:	e9dd 9a00 	ldrd	r9, sl, [sp]
  4011a4:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
  4011a8:	981c      	ldr	r0, [sp, #112]	; 0x70
  4011aa:	9719      	str	r7, [sp, #100]	; 0x64
  4011ac:	fbac 4509 	umull	r4, r5, ip, r9
  4011b0:	fb0c f202 	mul.w	r2, ip, r2
  4011b4:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
  4011b8:	fb06 2209 	mla	r2, r6, r9, r2
  4011bc:	eb17 040a 	adds.w	r4, r7, sl
  4011c0:	ea4f 76e7 	mov.w	r6, r7, asr #31
  4011c4:	4680      	mov	r8, r0
  4011c6:	9f15      	ldr	r7, [sp, #84]	; 0x54
  4011c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
  4011ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
  4011cc:	fb88 0100 	smull	r0, r1, r8, r0
  4011d0:	46b8      	mov	r8, r7
  4011d2:	9f14      	ldr	r7, [sp, #80]	; 0x50
  4011d4:	fbc5 0103 	smlal	r0, r1, r5, r3
  4011d8:	fbc7 0108 	smlal	r0, r1, r7, r8
  4011dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4011de:	9f17      	ldr	r7, [sp, #92]	; 0x5c
  4011e0:	e9dd 8900 	ldrd	r8, r9, [sp]
  4011e4:	4413      	add	r3, r2
  4011e6:	930b      	str	r3, [sp, #44]	; 0x2c
  4011e8:	465a      	mov	r2, fp
  4011ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4011ec:	fba7 ab08 	umull	sl, fp, r7, r8
  4011f0:	fb07 b809 	mla	r8, r7, r9, fp
  4011f4:	eb46 0202 	adc.w	r2, r6, r2
  4011f8:	1824      	adds	r4, r4, r0
  4011fa:	eb42 0601 	adc.w	r6, r2, r1
  4011fe:	4642      	mov	r2, r8
  401200:	eb18 0803 	adds.w	r8, r8, r3
  401204:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401206:	ea4f 72e2 	mov.w	r2, r2, asr #31
  40120a:	eb42 0303 	adc.w	r3, r2, r3
  40120e:	461a      	mov	r2, r3
  401210:	eb18 0804 	adds.w	r8, r8, r4
  401214:	eb46 0202 	adc.w	r2, r6, r2
  401218:	9e06      	ldr	r6, [sp, #24]
  40121a:	f1a6 0020 	sub.w	r0, r6, #32
  40121e:	fa02 fc06 	lsl.w	ip, r2, r6
  401222:	fa08 f000 	lsl.w	r0, r8, r0
  401226:	f1c6 0120 	rsb	r1, r6, #32
  40122a:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  40122e:	fa28 f101 	lsr.w	r1, r8, r1
  401232:	ea4c 0c00 	orr.w	ip, ip, r0
  401236:	ea4c 0c01 	orr.w	ip, ip, r1
  40123a:	fa08 f106 	lsl.w	r1, r8, r6
  40123e:	9117      	str	r1, [sp, #92]	; 0x5c
  401240:	9908      	ldr	r1, [sp, #32]
  401242:	fb0c f704 	mul.w	r7, ip, r4
  401246:	9c17      	ldr	r4, [sp, #92]	; 0x5c
  401248:	ea4f 76ec 	mov.w	r6, ip, asr #31
  40124c:	4689      	mov	r9, r1
  40124e:	fb06 7703 	mla	r7, r6, r3, r7
  401252:	fb89 0105 	smull	r0, r1, r9, r5
  401256:	961f      	str	r6, [sp, #124]	; 0x7c
  401258:	fba4 4503 	umull	r4, r5, r4, r3
  40125c:	9e01      	ldr	r6, [sp, #4]
  40125e:	9b04      	ldr	r3, [sp, #16]
  401260:	fb03 fb06 	mul.w	fp, r3, r6
  401264:	9e18      	ldr	r6, [sp, #96]	; 0x60
  401266:	46b1      	mov	r9, r6
  401268:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  40126a:	fbc6 0109 	smlal	r0, r1, r6, r9
  40126e:	9e00      	ldr	r6, [sp, #0]
  401270:	fba3 9a06 	umull	r9, sl, r3, r6
  401274:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
  401278:	4682      	mov	sl, r0
  40127a:	981c      	ldr	r0, [sp, #112]	; 0x70
  40127c:	4681      	mov	r9, r0
  40127e:	9814      	ldr	r0, [sp, #80]	; 0x50
  401280:	fb0e be06 	mla	lr, lr, r6, fp
  401284:	468b      	mov	fp, r1
  401286:	fbc0 ab09 	smlal	sl, fp, r0, r9
  40128a:	9802      	ldr	r0, [sp, #8]
  40128c:	fbac 0100 	umull	r0, r1, ip, r0
  401290:	460b      	mov	r3, r1
  401292:	443b      	add	r3, r7
  401294:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  401296:	4477      	add	r7, lr
  401298:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40129c:	970b      	str	r7, [sp, #44]	; 0x2c
  40129e:	9917      	ldr	r1, [sp, #92]	; 0x5c
  4012a0:	9f03      	ldr	r7, [sp, #12]
  4012a2:	9305      	str	r3, [sp, #20]
  4012a4:	fb01 5707 	mla	r7, r1, r7, r5
  4012a8:	9b04      	ldr	r3, [sp, #16]
  4012aa:	9901      	ldr	r1, [sp, #4]
  4012ac:	463d      	mov	r5, r7
  4012ae:	17e8      	asrs	r0, r5, #31
  4012b0:	18ff      	adds	r7, r7, r3
  4012b2:	9d05      	ldr	r5, [sp, #20]
  4012b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4012b6:	eb45 0000 	adc.w	r0, r5, r0
  4012ba:	fba3 4506 	umull	r4, r5, r3, r6
  4012be:	fb03 5301 	mla	r3, r3, r1, r5
  4012c2:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
  4012c6:	eb17 070a 	adds.w	r7, r7, sl
  4012ca:	eb40 000b 	adc.w	r0, r0, fp
  4012ce:	ea4f 7ae3 	mov.w	sl, r3, asr #31
  4012d2:	195b      	adds	r3, r3, r5
  4012d4:	eb4a 0a06 	adc.w	sl, sl, r6
  4012d8:	19df      	adds	r7, r3, r7
  4012da:	9e06      	ldr	r6, [sp, #24]
  4012dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
  4012de:	eb4a 0000 	adc.w	r0, sl, r0
  4012e2:	fa00 f106 	lsl.w	r1, r0, r6
  4012e6:	fa27 f403 	lsr.w	r4, r7, r3
  4012ea:	9104      	str	r1, [sp, #16]
  4012ec:	fa28 f803 	lsr.w	r8, r8, r3
  4012f0:	4321      	orrs	r1, r4
  4012f2:	40b2      	lsls	r2, r6
  4012f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4012f6:	ea42 0208 	orr.w	r2, r2, r8
  4012fa:	f844 2c0c 	str.w	r2, [r4, #-12]
  4012fe:	f1a6 0320 	sub.w	r3, r6, #32
  401302:	9a04      	ldr	r2, [sp, #16]
  401304:	f844 1c08 	str.w	r1, [r4, #-8]
  401308:	fa07 f303 	lsl.w	r3, r7, r3
  40130c:	431a      	orrs	r2, r3
  40130e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401310:	9204      	str	r2, [sp, #16]
  401312:	f1c6 0020 	rsb	r0, r6, #32
  401316:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40131a:	9b04      	ldr	r3, [sp, #16]
  40131c:	9215      	str	r2, [sp, #84]	; 0x54
  40131e:	fa27 f000 	lsr.w	r0, r7, r0
  401322:	4303      	orrs	r3, r0
  401324:	9304      	str	r3, [sp, #16]
  401326:	fa07 f306 	lsl.w	r3, r7, r6
  40132a:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  40132e:	930a      	str	r3, [sp, #40]	; 0x28
  401330:	9b04      	ldr	r3, [sp, #16]
  401332:	17df      	asrs	r7, r3, #31
  401334:	4638      	mov	r0, r7
  401336:	971a      	str	r7, [sp, #104]	; 0x68
  401338:	462f      	mov	r7, r5
  40133a:	fb03 f707 	mul.w	r7, r3, r7
  40133e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401340:	9912      	ldr	r1, [sp, #72]	; 0x48
  401342:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  401344:	fba3 ab04 	umull	sl, fp, r3, r4
  401348:	fb82 4501 	smull	r4, r5, r2, r1
  40134c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401350:	9904      	ldr	r1, [sp, #16]
  401352:	fba1 8902 	umull	r8, r9, r1, r2
  401356:	fb00 7702 	mla	r7, r0, r2, r7
  40135a:	4648      	mov	r0, r9
  40135c:	4438      	add	r0, r7
  40135e:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
  401362:	9908      	ldr	r1, [sp, #32]
  401364:	9011      	str	r0, [sp, #68]	; 0x44
  401366:	4618      	mov	r0, r3
  401368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40136a:	9a14      	ldr	r2, [sp, #80]	; 0x50
  40136c:	fbc6 4501 	smlal	r4, r5, r6, r1
  401370:	fb03 b800 	mla	r8, r3, r0, fp
  401374:	9e18      	ldr	r6, [sp, #96]	; 0x60
  401376:	9917      	ldr	r1, [sp, #92]	; 0x5c
  401378:	4640      	mov	r0, r8
  40137a:	46a9      	mov	r9, r5
  40137c:	46a0      	mov	r8, r4
  40137e:	fbc2 8906 	smlal	r8, r9, r2, r6
  401382:	e9dd 2300 	ldrd	r2, r3, [sp]
  401386:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
  401388:	fb0c fe03 	mul.w	lr, ip, r3
  40138c:	fbac 4502 	umull	r4, r5, ip, r2
  401390:	fb06 ee02 	mla	lr, r6, r2, lr
  401394:	9a10      	ldr	r2, [sp, #64]	; 0x40
  401396:	ea4f 7ce0 	mov.w	ip, r0, asr #31
  40139a:	1882      	adds	r2, r0, r2
  40139c:	9800      	ldr	r0, [sp, #0]
  40139e:	4647      	mov	r7, r8
  4013a0:	46c8      	mov	r8, r9
  4013a2:	fba1 9a00 	umull	r9, sl, r1, r0
  4013a6:	9801      	ldr	r0, [sp, #4]
  4013a8:	fb01 a600 	mla	r6, r1, r0, sl
  4013ac:	9911      	ldr	r1, [sp, #68]	; 0x44
  4013ae:	eb4c 0c01 	adc.w	ip, ip, r1
  4013b2:	19d0      	adds	r0, r2, r7
  4013b4:	4475      	add	r5, lr
  4013b6:	eb4c 0c08 	adc.w	ip, ip, r8
  4013ba:	17f3      	asrs	r3, r6, #31
  4013bc:	1936      	adds	r6, r6, r4
  4013be:	eb45 0303 	adc.w	r3, r5, r3
  4013c2:	1832      	adds	r2, r6, r0
  4013c4:	9e06      	ldr	r6, [sp, #24]
  4013c6:	9f15      	ldr	r7, [sp, #84]	; 0x54
  4013c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  4013ca:	eb43 0c0c 	adc.w	ip, r3, ip
  4013ce:	fa0c f006 	lsl.w	r0, ip, r6
  4013d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
  4013d4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
  4013d6:	fa22 f303 	lsr.w	r3, r2, r3
  4013da:	fa02 f106 	lsl.w	r1, r2, r6
  4013de:	4303      	orrs	r3, r0
  4013e0:	ea40 0c01 	orr.w	ip, r0, r1
  4013e4:	9820      	ldr	r0, [sp, #128]	; 0x80
  4013e6:	9e06      	ldr	r6, [sp, #24]
  4013e8:	fa22 f400 	lsr.w	r4, r2, r0
  4013ec:	17f9      	asrs	r1, r7, #31
  4013ee:	4638      	mov	r0, r7
  4013f0:	f105 0710 	add.w	r7, r5, #16
  4013f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4013f6:	970d      	str	r7, [sp, #52]	; 0x34
  4013f8:	f845 3c04 	str.w	r3, [r5, #-4]
  4013fc:	f105 0310 	add.w	r3, r5, #16
  401400:	930e      	str	r3, [sp, #56]	; 0x38
  401402:	fa02 f306 	lsl.w	r3, r2, r6
  401406:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  401408:	9e08      	ldr	r6, [sp, #32]
  40140a:	9317      	str	r3, [sp, #92]	; 0x5c
  40140c:	9210      	str	r2, [sp, #64]	; 0x40
  40140e:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
  401412:	9f1e      	ldr	r7, [sp, #120]	; 0x78
  401414:	ea4f 78e6 	mov.w	r8, r6, asr #31
  401418:	3f01      	subs	r7, #1
  40141a:	ea4c 0c04 	orr.w	ip, ip, r4
  40141e:	4635      	mov	r5, r6
  401420:	4603      	mov	r3, r0
  401422:	460c      	mov	r4, r1
  401424:	4646      	mov	r6, r8
  401426:	971e      	str	r7, [sp, #120]	; 0x78
  401428:	f47f ae34 	bne.w	401094 <arm_biquad_cas_df1_32x64_q31+0xd0>
  40142c:	e9cd 3402 	strd	r3, r4, [sp, #8]
  401430:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
  401432:	9b22      	ldr	r3, [sp, #136]	; 0x88
  401434:	f8dd 9018 	ldr.w	r9, [sp, #24]
  401438:	f8dd a010 	ldr.w	sl, [sp, #16]
  40143c:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
  401440:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  401444:	f8cd e070 	str.w	lr, [sp, #112]	; 0x70
  401448:	4413      	add	r3, r2
  40144a:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  40144e:	9322      	str	r3, [sp, #136]	; 0x88
  401450:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
  401452:	930a      	str	r3, [sp, #40]	; 0x28
  401454:	9b2b      	ldr	r3, [sp, #172]	; 0xac
  401456:	2b00      	cmp	r3, #0
  401458:	f000 815b 	beq.w	401712 <arm_biquad_cas_df1_32x64_q31+0x74e>
  40145c:	9b22      	ldr	r3, [sp, #136]	; 0x88
  40145e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  401460:	681b      	ldr	r3, [r3, #0]
  401462:	17d5      	asrs	r5, r2, #31
  401464:	461f      	mov	r7, r3
  401466:	4614      	mov	r4, r2
  401468:	ea4f 71ec 	mov.w	r1, ip, asr #31
  40146c:	fb0c f305 	mul.w	r3, ip, r5
  401470:	e9cd 4504 	strd	r4, r5, [sp, #16]
  401474:	fb02 3301 	mla	r3, r2, r1, r3
  401478:	fba8 4502 	umull	r4, r5, r8, r2
  40147c:	9110      	str	r1, [sp, #64]	; 0x40
  40147e:	fbac 1202 	umull	r1, r2, ip, r2
  401482:	e9cd 1202 	strd	r1, r2, [sp, #8]
  401486:	9a03      	ldr	r2, [sp, #12]
  401488:	9805      	ldr	r0, [sp, #20]
  40148a:	9c23      	ldr	r4, [sp, #140]	; 0x8c
  40148c:	970d      	str	r7, [sp, #52]	; 0x34
  40148e:	441a      	add	r2, r3
  401490:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401492:	9203      	str	r2, [sp, #12]
  401494:	fb08 5100 	mla	r1, r8, r0, r5
  401498:	4638      	mov	r0, r7
  40149a:	fb80 2303 	smull	r2, r3, r0, r3
  40149e:	9815      	ldr	r0, [sp, #84]	; 0x54
  4014a0:	4607      	mov	r7, r0
  4014a2:	9813      	ldr	r0, [sp, #76]	; 0x4c
  4014a4:	4625      	mov	r5, r4
  4014a6:	fbc0 2307 	smlal	r2, r3, r0, r7
  4014aa:	17e6      	asrs	r6, r4, #31
  4014ac:	e9cd 2306 	strd	r2, r3, [sp, #24]
  4014b0:	e9cd 5600 	strd	r5, r6, [sp]
  4014b4:	9d08      	ldr	r5, [sp, #32]
  4014b6:	9b02      	ldr	r3, [sp, #8]
  4014b8:	9a03      	ldr	r2, [sp, #12]
  4014ba:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
  4014be:	46ae      	mov	lr, r5
  4014c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4014c2:	fbc5 670e 	smlal	r6, r7, r5, lr
  4014c6:	e9dd 4500 	ldrd	r4, r5, [sp]
  4014ca:	e9cd 6706 	strd	r6, r7, [sp, #24]
  4014ce:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  4014d0:	9c06      	ldr	r4, [sp, #24]
  4014d2:	18cb      	adds	r3, r1, r3
  4014d4:	ea4f 71e1 	mov.w	r1, r1, asr #31
  4014d8:	eb42 0101 	adc.w	r1, r2, r1
  4014dc:	ea4f 70ea 	mov.w	r0, sl, asr #31
  4014e0:	fb0a f205 	mul.w	r2, sl, r5
  4014e4:	4637      	mov	r7, r6
  4014e6:	fb06 2200 	mla	r2, r6, r0, r2
  4014ea:	4630      	mov	r0, r6
  4014ec:	fbab 6707 	umull	r6, r7, fp, r7
  4014f0:	191b      	adds	r3, r3, r4
  4014f2:	fb0b 7e05 	mla	lr, fp, r5, r7
  4014f6:	9c07      	ldr	r4, [sp, #28]
  4014f8:	9e16      	ldr	r6, [sp, #88]	; 0x58
  4014fa:	9d1c      	ldr	r5, [sp, #112]	; 0x70
  4014fc:	fbaa ab00 	umull	sl, fp, sl, r0
  401500:	4677      	mov	r7, lr
  401502:	eb44 0101 	adc.w	r1, r4, r1
  401506:	4493      	add	fp, r2
  401508:	eb1e 0e0a 	adds.w	lr, lr, sl
  40150c:	ea4f 72e7 	mov.w	r2, r7, asr #31
  401510:	eb42 020b 	adc.w	r2, r2, fp
  401514:	9c1d      	ldr	r4, [sp, #116]	; 0x74
  401516:	eb1e 0e03 	adds.w	lr, lr, r3
  40151a:	eb42 0101 	adc.w	r1, r2, r1
  40151e:	fa0e f304 	lsl.w	r3, lr, r4
  401522:	fa01 f009 	lsl.w	r0, r1, r9
  401526:	fa2e f206 	lsr.w	r2, lr, r6
  40152a:	4601      	mov	r1, r0
  40152c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40152e:	4318      	orrs	r0, r3
  401530:	fa2e f305 	lsr.w	r3, lr, r5
  401534:	4311      	orrs	r1, r2
  401536:	4318      	orrs	r0, r3
  401538:	e9dd 560e 	ldrd	r5, r6, [sp, #56]	; 0x38
  40153c:	9006      	str	r0, [sp, #24]
  40153e:	6021      	str	r1, [r4, #0]
  401540:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  401542:	9929      	ldr	r1, [sp, #164]	; 0xa4
  401544:	46a2      	mov	sl, r4
  401546:	ea4f 7be4 	mov.w	fp, r4, asr #31
  40154a:	fa0e fe09 	lsl.w	lr, lr, r9
  40154e:	e9cd ab02 	strd	sl, fp, [sp, #8]
  401552:	2900      	cmp	r1, #0
  401554:	f000 80f9 	beq.w	40174a <arm_biquad_cas_df1_32x64_q31+0x786>
  401558:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
  40155c:	9d22      	ldr	r5, [sp, #136]	; 0x88
  40155e:	fb00 f10b 	mul.w	r1, r0, fp
  401562:	686e      	ldr	r6, [r5, #4]
  401564:	960e      	str	r6, [sp, #56]	; 0x38
  401566:	17c5      	asrs	r5, r0, #31
  401568:	9824      	ldr	r0, [sp, #144]	; 0x90
  40156a:	9517      	str	r5, [sp, #92]	; 0x5c
  40156c:	fbae 2300 	umull	r2, r3, lr, r0
  401570:	fb00 1105 	mla	r1, r0, r5, r1
  401574:	4604      	mov	r4, r0
  401576:	9806      	ldr	r0, [sp, #24]
  401578:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40157a:	fba0 4504 	umull	r4, r5, r0, r4
  40157e:	440d      	add	r5, r1
  401580:	fb0e 310b 	mla	r1, lr, fp, r3
  401584:	460b      	mov	r3, r1
  401586:	17d8      	asrs	r0, r3, #31
  401588:	fb86 2302 	smull	r2, r3, r6, r2
  40158c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
  40158e:	46b3      	mov	fp, r6
  401590:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  401592:	fbc6 230b 	smlal	r2, r3, r6, fp
  401596:	469b      	mov	fp, r3
  401598:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40159a:	461f      	mov	r7, r3
  40159c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40159e:	4692      	mov	sl, r2
  4015a0:	fbc3 ab07 	smlal	sl, fp, r3, r7
  4015a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4015a6:	1909      	adds	r1, r1, r4
  4015a8:	eb45 0000 	adc.w	r0, r5, r0
  4015ac:	461f      	mov	r7, r3
  4015ae:	e9dd 4500 	ldrd	r4, r5, [sp]
  4015b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4015b4:	e9cd ab08 	strd	sl, fp, [sp, #32]
  4015b8:	9a08      	ldr	r2, [sp, #32]
  4015ba:	fba8 ab03 	umull	sl, fp, r8, r3
  4015be:	fb08 b405 	mla	r4, r8, r5, fp
  4015c2:	1889      	adds	r1, r1, r2
  4015c4:	46a3      	mov	fp, r4
  4015c6:	4622      	mov	r2, r4
  4015c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4015ca:	fb0c f605 	mul.w	r6, ip, r5
  4015ce:	eb40 0404 	adc.w	r4, r0, r4
  4015d2:	fb03 6607 	mla	r6, r3, r7, r6
  4015d6:	4620      	mov	r0, r4
  4015d8:	fbac 4503 	umull	r4, r5, ip, r3
  4015dc:	4435      	add	r5, r6
  4015de:	17d3      	asrs	r3, r2, #31
  4015e0:	eb1b 0204 	adds.w	r2, fp, r4
  4015e4:	eb45 0303 	adc.w	r3, r5, r3
  4015e8:	1851      	adds	r1, r2, r1
  4015ea:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  4015ec:	9e1c      	ldr	r6, [sp, #112]	; 0x70
  4015ee:	9c16      	ldr	r4, [sp, #88]	; 0x58
  4015f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4015f2:	eb43 0000 	adc.w	r0, r3, r0
  4015f6:	fa00 fa09 	lsl.w	sl, r0, r9
  4015fa:	fa01 f302 	lsl.w	r3, r1, r2
  4015fe:	4650      	mov	r0, sl
  401600:	fa21 f204 	lsr.w	r2, r1, r4
  401604:	ea4a 0a03 	orr.w	sl, sl, r3
  401608:	fa01 fb09 	lsl.w	fp, r1, r9
  40160c:	fa21 f306 	lsr.w	r3, r1, r6
  401610:	990e      	ldr	r1, [sp, #56]	; 0x38
  401612:	4310      	orrs	r0, r2
  401614:	ea4f 78e1 	mov.w	r8, r1, asr #31
  401618:	6068      	str	r0, [r5, #4]
  40161a:	460d      	mov	r5, r1
  40161c:	9929      	ldr	r1, [sp, #164]	; 0xa4
  40161e:	2901      	cmp	r1, #1
  401620:	ea4a 0a03 	orr.w	sl, sl, r3
  401624:	4646      	mov	r6, r8
  401626:	f000 8096 	beq.w	401756 <arm_biquad_cas_df1_32x64_q31+0x792>
  40162a:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40162c:	9922      	ldr	r1, [sp, #136]	; 0x88
  40162e:	9c12      	ldr	r4, [sp, #72]	; 0x48
  401630:	6889      	ldr	r1, [r1, #8]
  401632:	9110      	str	r1, [sp, #64]	; 0x40
  401634:	fbab 7802 	umull	r7, r8, fp, r2
  401638:	e9cd 7802 	strd	r7, r8, [sp, #8]
  40163c:	e9dd 7804 	ldrd	r7, r8, [sp, #16]
  401640:	9903      	ldr	r1, [sp, #12]
  401642:	fb0a f308 	mul.w	r3, sl, r8
  401646:	ea4f 70ea 	mov.w	r0, sl, asr #31
  40164a:	fb0b 1108 	mla	r1, fp, r8, r1
  40164e:	fb02 3000 	mla	r0, r2, r0, r3
  401652:	fbaa 7802 	umull	r7, r8, sl, r2
  401656:	4440      	add	r0, r8
  401658:	e9cd 7804 	strd	r7, r8, [sp, #16]
  40165c:	9005      	str	r0, [sp, #20]
  40165e:	980e      	ldr	r0, [sp, #56]	; 0x38
  401660:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401662:	4607      	mov	r7, r0
  401664:	9813      	ldr	r0, [sp, #76]	; 0x4c
  401666:	fb83 2304 	smull	r2, r3, r3, r4
  40166a:	fbc0 2307 	smlal	r2, r3, r0, r7
  40166e:	9823      	ldr	r0, [sp, #140]	; 0x8c
  401670:	9c06      	ldr	r4, [sp, #24]
  401672:	fbae 7800 	umull	r7, r8, lr, r0
  401676:	e9cd 7808 	strd	r7, r8, [sp, #32]
  40167a:	9801      	ldr	r0, [sp, #4]
  40167c:	9f04      	ldr	r7, [sp, #16]
  40167e:	fb04 f400 	mul.w	r4, r4, r0
  401682:	4698      	mov	r8, r3
  401684:	17c8      	asrs	r0, r1, #31
  401686:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401688:	19c9      	adds	r1, r1, r7
  40168a:	4617      	mov	r7, r2
  40168c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40168e:	fbc3 7802 	smlal	r7, r8, r3, r2
  401692:	e9cd 7802 	strd	r7, r8, [sp, #8]
  401696:	9f01      	ldr	r7, [sp, #4]
  401698:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  40169a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40169c:	46bc      	mov	ip, r7
  40169e:	9f09      	ldr	r7, [sp, #36]	; 0x24
  4016a0:	fb0e 7e0c 	mla	lr, lr, ip, r7
  4016a4:	9f05      	ldr	r7, [sp, #20]
  4016a6:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
  4016aa:	eb47 0000 	adc.w	r0, r7, r0
  4016ae:	9f02      	ldr	r7, [sp, #8]
  4016b0:	4694      	mov	ip, r2
  4016b2:	19c9      	adds	r1, r1, r7
  4016b4:	fb03 440c 	mla	r4, r3, ip, r4
  4016b8:	9f03      	ldr	r7, [sp, #12]
  4016ba:	461a      	mov	r2, r3
  4016bc:	9b06      	ldr	r3, [sp, #24]
  4016be:	eb47 0000 	adc.w	r0, r7, r0
  4016c2:	fba3 2302 	umull	r2, r3, r3, r2
  4016c6:	4677      	mov	r7, lr
  4016c8:	4423      	add	r3, r4
  4016ca:	eb1e 0e02 	adds.w	lr, lr, r2
  4016ce:	ea4f 74e7 	mov.w	r4, r7, asr #31
  4016d2:	eb43 0404 	adc.w	r4, r3, r4
  4016d6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  4016d8:	eb1e 0e01 	adds.w	lr, lr, r1
  4016dc:	eb44 0000 	adc.w	r0, r4, r0
  4016e0:	fa0e f302 	lsl.w	r3, lr, r2
  4016e4:	fa00 fc09 	lsl.w	ip, r0, r9
  4016e8:	9c16      	ldr	r4, [sp, #88]	; 0x58
  4016ea:	4660      	mov	r0, ip
  4016ec:	ea4c 0c03 	orr.w	ip, ip, r3
  4016f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4016f2:	fa2e f303 	lsr.w	r3, lr, r3
  4016f6:	fa2e f204 	lsr.w	r2, lr, r4
  4016fa:	ea4c 0c03 	orr.w	ip, ip, r3
  4016fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  401700:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401702:	4310      	orrs	r0, r2
  401704:	60a0      	str	r0, [r4, #8]
  401706:	17d9      	asrs	r1, r3, #31
  401708:	4618      	mov	r0, r3
  40170a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40170e:	fa0e f809 	lsl.w	r8, lr, r9
  401712:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
  401716:	9b25      	ldr	r3, [sp, #148]	; 0x94
  401718:	e943 1208 	strd	r1, r2, [r3, #-32]
  40171c:	e943 5606 	strd	r5, r6, [r3, #-24]
  401720:	f843 8c10 	str.w	r8, [r3, #-16]
  401724:	f843 ac04 	str.w	sl, [r3, #-4]
  401728:	e943 cb03 	strd	ip, fp, [r3, #-12]
  40172c:	3320      	adds	r3, #32
  40172e:	9325      	str	r3, [sp, #148]	; 0x94
  401730:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  401732:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401734:	9322      	str	r3, [sp, #136]	; 0x88
  401736:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401738:	3214      	adds	r2, #20
  40173a:	3b01      	subs	r3, #1
  40173c:	9226      	str	r2, [sp, #152]	; 0x98
  40173e:	9327      	str	r3, [sp, #156]	; 0x9c
  401740:	f47f ac69 	bne.w	401016 <arm_biquad_cas_df1_32x64_q31+0x52>
  401744:	b02f      	add	sp, #188	; 0xbc
  401746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40174a:	46c3      	mov	fp, r8
  40174c:	46e2      	mov	sl, ip
  40174e:	46f0      	mov	r8, lr
  401750:	f8dd c018 	ldr.w	ip, [sp, #24]
  401754:	e7dd      	b.n	401712 <arm_biquad_cas_df1_32x64_q31+0x74e>
  401756:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
  40175a:	46d8      	mov	r8, fp
  40175c:	e9cd 5602 	strd	r5, r6, [sp, #8]
  401760:	46d4      	mov	ip, sl
  401762:	460d      	mov	r5, r1
  401764:	46f3      	mov	fp, lr
  401766:	f8dd a018 	ldr.w	sl, [sp, #24]
  40176a:	4616      	mov	r6, r2
  40176c:	e7d1      	b.n	401712 <arm_biquad_cas_df1_32x64_q31+0x74e>
  40176e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401770:	4619      	mov	r1, r3
  401772:	17da      	asrs	r2, r3, #31
  401774:	9b08      	ldr	r3, [sp, #32]
  401776:	461d      	mov	r5, r3
  401778:	17de      	asrs	r6, r3, #31
  40177a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40177c:	930a      	str	r3, [sp, #40]	; 0x28
  40177e:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
  401782:	e9cd 1202 	strd	r1, r2, [sp, #8]
  401786:	e665      	b.n	401454 <arm_biquad_cas_df1_32x64_q31+0x490>

00401788 <arm_biquad_cas_df1_32x64_init_q31>:
  401788:	b510      	push	{r4, lr}
  40178a:	4604      	mov	r4, r0
  40178c:	f89d 0008 	ldrb.w	r0, [sp, #8]
  401790:	60a2      	str	r2, [r4, #8]
  401792:	7021      	strb	r1, [r4, #0]
  401794:	014a      	lsls	r2, r1, #5
  401796:	7320      	strb	r0, [r4, #12]
  401798:	2100      	movs	r1, #0
  40179a:	4618      	mov	r0, r3
  40179c:	f000 fc50 	bl	402040 <memset>
  4017a0:	6060      	str	r0, [r4, #4]
  4017a2:	bd10      	pop	{r4, pc}

004017a4 <__aeabi_f2lz>:
  4017a4:	ee07 0a90 	vmov	s15, r0
  4017a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  4017ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4017b0:	d401      	bmi.n	4017b6 <__aeabi_f2lz+0x12>
  4017b2:	f000 b809 	b.w	4017c8 <__aeabi_f2ulz>
  4017b6:	b508      	push	{r3, lr}
  4017b8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4017bc:	f000 f804 	bl	4017c8 <__aeabi_f2ulz>
  4017c0:	4240      	negs	r0, r0
  4017c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4017c6:	bd08      	pop	{r3, pc}

004017c8 <__aeabi_f2ulz>:
  4017c8:	b5d0      	push	{r4, r6, r7, lr}
  4017ca:	f000 f987 	bl	401adc <__aeabi_f2d>
  4017ce:	2200      	movs	r2, #0
  4017d0:	4b0e      	ldr	r3, [pc, #56]	; (40180c <__aeabi_f2ulz+0x44>)
  4017d2:	4606      	mov	r6, r0
  4017d4:	460f      	mov	r7, r1
  4017d6:	f000 f9d5 	bl	401b84 <__aeabi_dmul>
  4017da:	f000 fbe5 	bl	401fa8 <__aeabi_d2uiz>
  4017de:	4604      	mov	r4, r0
  4017e0:	f000 f95a 	bl	401a98 <__aeabi_ui2d>
  4017e4:	2200      	movs	r2, #0
  4017e6:	4b0a      	ldr	r3, [pc, #40]	; (401810 <__aeabi_f2ulz+0x48>)
  4017e8:	f000 f9cc 	bl	401b84 <__aeabi_dmul>
  4017ec:	4602      	mov	r2, r0
  4017ee:	460b      	mov	r3, r1
  4017f0:	4630      	mov	r0, r6
  4017f2:	4639      	mov	r1, r7
  4017f4:	f000 f812 	bl	40181c <__aeabi_dsub>
  4017f8:	f000 fbd6 	bl	401fa8 <__aeabi_d2uiz>
  4017fc:	4623      	mov	r3, r4
  4017fe:	2200      	movs	r2, #0
  401800:	ea42 0200 	orr.w	r2, r2, r0
  401804:	4610      	mov	r0, r2
  401806:	4619      	mov	r1, r3
  401808:	bdd0      	pop	{r4, r6, r7, pc}
  40180a:	bf00      	nop
  40180c:	3df00000 	.word	0x3df00000
  401810:	41f00000 	.word	0x41f00000

00401814 <__aeabi_drsub>:
  401814:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401818:	e002      	b.n	401820 <__adddf3>
  40181a:	bf00      	nop

0040181c <__aeabi_dsub>:
  40181c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401820 <__adddf3>:
  401820:	b530      	push	{r4, r5, lr}
  401822:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401826:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40182a:	ea94 0f05 	teq	r4, r5
  40182e:	bf08      	it	eq
  401830:	ea90 0f02 	teqeq	r0, r2
  401834:	bf1f      	itttt	ne
  401836:	ea54 0c00 	orrsne.w	ip, r4, r0
  40183a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40183e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401842:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401846:	f000 80e2 	beq.w	401a0e <__adddf3+0x1ee>
  40184a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40184e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401852:	bfb8      	it	lt
  401854:	426d      	neglt	r5, r5
  401856:	dd0c      	ble.n	401872 <__adddf3+0x52>
  401858:	442c      	add	r4, r5
  40185a:	ea80 0202 	eor.w	r2, r0, r2
  40185e:	ea81 0303 	eor.w	r3, r1, r3
  401862:	ea82 0000 	eor.w	r0, r2, r0
  401866:	ea83 0101 	eor.w	r1, r3, r1
  40186a:	ea80 0202 	eor.w	r2, r0, r2
  40186e:	ea81 0303 	eor.w	r3, r1, r3
  401872:	2d36      	cmp	r5, #54	; 0x36
  401874:	bf88      	it	hi
  401876:	bd30      	pophi	{r4, r5, pc}
  401878:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40187c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401880:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401884:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401888:	d002      	beq.n	401890 <__adddf3+0x70>
  40188a:	4240      	negs	r0, r0
  40188c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401890:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401894:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401898:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40189c:	d002      	beq.n	4018a4 <__adddf3+0x84>
  40189e:	4252      	negs	r2, r2
  4018a0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4018a4:	ea94 0f05 	teq	r4, r5
  4018a8:	f000 80a7 	beq.w	4019fa <__adddf3+0x1da>
  4018ac:	f1a4 0401 	sub.w	r4, r4, #1
  4018b0:	f1d5 0e20 	rsbs	lr, r5, #32
  4018b4:	db0d      	blt.n	4018d2 <__adddf3+0xb2>
  4018b6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4018ba:	fa22 f205 	lsr.w	r2, r2, r5
  4018be:	1880      	adds	r0, r0, r2
  4018c0:	f141 0100 	adc.w	r1, r1, #0
  4018c4:	fa03 f20e 	lsl.w	r2, r3, lr
  4018c8:	1880      	adds	r0, r0, r2
  4018ca:	fa43 f305 	asr.w	r3, r3, r5
  4018ce:	4159      	adcs	r1, r3
  4018d0:	e00e      	b.n	4018f0 <__adddf3+0xd0>
  4018d2:	f1a5 0520 	sub.w	r5, r5, #32
  4018d6:	f10e 0e20 	add.w	lr, lr, #32
  4018da:	2a01      	cmp	r2, #1
  4018dc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4018e0:	bf28      	it	cs
  4018e2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4018e6:	fa43 f305 	asr.w	r3, r3, r5
  4018ea:	18c0      	adds	r0, r0, r3
  4018ec:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4018f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4018f4:	d507      	bpl.n	401906 <__adddf3+0xe6>
  4018f6:	f04f 0e00 	mov.w	lr, #0
  4018fa:	f1dc 0c00 	rsbs	ip, ip, #0
  4018fe:	eb7e 0000 	sbcs.w	r0, lr, r0
  401902:	eb6e 0101 	sbc.w	r1, lr, r1
  401906:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40190a:	d31b      	bcc.n	401944 <__adddf3+0x124>
  40190c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401910:	d30c      	bcc.n	40192c <__adddf3+0x10c>
  401912:	0849      	lsrs	r1, r1, #1
  401914:	ea5f 0030 	movs.w	r0, r0, rrx
  401918:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40191c:	f104 0401 	add.w	r4, r4, #1
  401920:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401924:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401928:	f080 809a 	bcs.w	401a60 <__adddf3+0x240>
  40192c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401930:	bf08      	it	eq
  401932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401936:	f150 0000 	adcs.w	r0, r0, #0
  40193a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40193e:	ea41 0105 	orr.w	r1, r1, r5
  401942:	bd30      	pop	{r4, r5, pc}
  401944:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401948:	4140      	adcs	r0, r0
  40194a:	eb41 0101 	adc.w	r1, r1, r1
  40194e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401952:	f1a4 0401 	sub.w	r4, r4, #1
  401956:	d1e9      	bne.n	40192c <__adddf3+0x10c>
  401958:	f091 0f00 	teq	r1, #0
  40195c:	bf04      	itt	eq
  40195e:	4601      	moveq	r1, r0
  401960:	2000      	moveq	r0, #0
  401962:	fab1 f381 	clz	r3, r1
  401966:	bf08      	it	eq
  401968:	3320      	addeq	r3, #32
  40196a:	f1a3 030b 	sub.w	r3, r3, #11
  40196e:	f1b3 0220 	subs.w	r2, r3, #32
  401972:	da0c      	bge.n	40198e <__adddf3+0x16e>
  401974:	320c      	adds	r2, #12
  401976:	dd08      	ble.n	40198a <__adddf3+0x16a>
  401978:	f102 0c14 	add.w	ip, r2, #20
  40197c:	f1c2 020c 	rsb	r2, r2, #12
  401980:	fa01 f00c 	lsl.w	r0, r1, ip
  401984:	fa21 f102 	lsr.w	r1, r1, r2
  401988:	e00c      	b.n	4019a4 <__adddf3+0x184>
  40198a:	f102 0214 	add.w	r2, r2, #20
  40198e:	bfd8      	it	le
  401990:	f1c2 0c20 	rsble	ip, r2, #32
  401994:	fa01 f102 	lsl.w	r1, r1, r2
  401998:	fa20 fc0c 	lsr.w	ip, r0, ip
  40199c:	bfdc      	itt	le
  40199e:	ea41 010c 	orrle.w	r1, r1, ip
  4019a2:	4090      	lslle	r0, r2
  4019a4:	1ae4      	subs	r4, r4, r3
  4019a6:	bfa2      	ittt	ge
  4019a8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4019ac:	4329      	orrge	r1, r5
  4019ae:	bd30      	popge	{r4, r5, pc}
  4019b0:	ea6f 0404 	mvn.w	r4, r4
  4019b4:	3c1f      	subs	r4, #31
  4019b6:	da1c      	bge.n	4019f2 <__adddf3+0x1d2>
  4019b8:	340c      	adds	r4, #12
  4019ba:	dc0e      	bgt.n	4019da <__adddf3+0x1ba>
  4019bc:	f104 0414 	add.w	r4, r4, #20
  4019c0:	f1c4 0220 	rsb	r2, r4, #32
  4019c4:	fa20 f004 	lsr.w	r0, r0, r4
  4019c8:	fa01 f302 	lsl.w	r3, r1, r2
  4019cc:	ea40 0003 	orr.w	r0, r0, r3
  4019d0:	fa21 f304 	lsr.w	r3, r1, r4
  4019d4:	ea45 0103 	orr.w	r1, r5, r3
  4019d8:	bd30      	pop	{r4, r5, pc}
  4019da:	f1c4 040c 	rsb	r4, r4, #12
  4019de:	f1c4 0220 	rsb	r2, r4, #32
  4019e2:	fa20 f002 	lsr.w	r0, r0, r2
  4019e6:	fa01 f304 	lsl.w	r3, r1, r4
  4019ea:	ea40 0003 	orr.w	r0, r0, r3
  4019ee:	4629      	mov	r1, r5
  4019f0:	bd30      	pop	{r4, r5, pc}
  4019f2:	fa21 f004 	lsr.w	r0, r1, r4
  4019f6:	4629      	mov	r1, r5
  4019f8:	bd30      	pop	{r4, r5, pc}
  4019fa:	f094 0f00 	teq	r4, #0
  4019fe:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401a02:	bf06      	itte	eq
  401a04:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401a08:	3401      	addeq	r4, #1
  401a0a:	3d01      	subne	r5, #1
  401a0c:	e74e      	b.n	4018ac <__adddf3+0x8c>
  401a0e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401a12:	bf18      	it	ne
  401a14:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401a18:	d029      	beq.n	401a6e <__adddf3+0x24e>
  401a1a:	ea94 0f05 	teq	r4, r5
  401a1e:	bf08      	it	eq
  401a20:	ea90 0f02 	teqeq	r0, r2
  401a24:	d005      	beq.n	401a32 <__adddf3+0x212>
  401a26:	ea54 0c00 	orrs.w	ip, r4, r0
  401a2a:	bf04      	itt	eq
  401a2c:	4619      	moveq	r1, r3
  401a2e:	4610      	moveq	r0, r2
  401a30:	bd30      	pop	{r4, r5, pc}
  401a32:	ea91 0f03 	teq	r1, r3
  401a36:	bf1e      	ittt	ne
  401a38:	2100      	movne	r1, #0
  401a3a:	2000      	movne	r0, #0
  401a3c:	bd30      	popne	{r4, r5, pc}
  401a3e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401a42:	d105      	bne.n	401a50 <__adddf3+0x230>
  401a44:	0040      	lsls	r0, r0, #1
  401a46:	4149      	adcs	r1, r1
  401a48:	bf28      	it	cs
  401a4a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401a4e:	bd30      	pop	{r4, r5, pc}
  401a50:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401a54:	bf3c      	itt	cc
  401a56:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401a5a:	bd30      	popcc	{r4, r5, pc}
  401a5c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a60:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401a64:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401a68:	f04f 0000 	mov.w	r0, #0
  401a6c:	bd30      	pop	{r4, r5, pc}
  401a6e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401a72:	bf1a      	itte	ne
  401a74:	4619      	movne	r1, r3
  401a76:	4610      	movne	r0, r2
  401a78:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401a7c:	bf1c      	itt	ne
  401a7e:	460b      	movne	r3, r1
  401a80:	4602      	movne	r2, r0
  401a82:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401a86:	bf06      	itte	eq
  401a88:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401a8c:	ea91 0f03 	teqeq	r1, r3
  401a90:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401a94:	bd30      	pop	{r4, r5, pc}
  401a96:	bf00      	nop

00401a98 <__aeabi_ui2d>:
  401a98:	f090 0f00 	teq	r0, #0
  401a9c:	bf04      	itt	eq
  401a9e:	2100      	moveq	r1, #0
  401aa0:	4770      	bxeq	lr
  401aa2:	b530      	push	{r4, r5, lr}
  401aa4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401aa8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401aac:	f04f 0500 	mov.w	r5, #0
  401ab0:	f04f 0100 	mov.w	r1, #0
  401ab4:	e750      	b.n	401958 <__adddf3+0x138>
  401ab6:	bf00      	nop

00401ab8 <__aeabi_i2d>:
  401ab8:	f090 0f00 	teq	r0, #0
  401abc:	bf04      	itt	eq
  401abe:	2100      	moveq	r1, #0
  401ac0:	4770      	bxeq	lr
  401ac2:	b530      	push	{r4, r5, lr}
  401ac4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401ac8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401acc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401ad0:	bf48      	it	mi
  401ad2:	4240      	negmi	r0, r0
  401ad4:	f04f 0100 	mov.w	r1, #0
  401ad8:	e73e      	b.n	401958 <__adddf3+0x138>
  401ada:	bf00      	nop

00401adc <__aeabi_f2d>:
  401adc:	0042      	lsls	r2, r0, #1
  401ade:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401ae2:	ea4f 0131 	mov.w	r1, r1, rrx
  401ae6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401aea:	bf1f      	itttt	ne
  401aec:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401af0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401af4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401af8:	4770      	bxne	lr
  401afa:	f092 0f00 	teq	r2, #0
  401afe:	bf14      	ite	ne
  401b00:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401b04:	4770      	bxeq	lr
  401b06:	b530      	push	{r4, r5, lr}
  401b08:	f44f 7460 	mov.w	r4, #896	; 0x380
  401b0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401b10:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401b14:	e720      	b.n	401958 <__adddf3+0x138>
  401b16:	bf00      	nop

00401b18 <__aeabi_ul2d>:
  401b18:	ea50 0201 	orrs.w	r2, r0, r1
  401b1c:	bf08      	it	eq
  401b1e:	4770      	bxeq	lr
  401b20:	b530      	push	{r4, r5, lr}
  401b22:	f04f 0500 	mov.w	r5, #0
  401b26:	e00a      	b.n	401b3e <__aeabi_l2d+0x16>

00401b28 <__aeabi_l2d>:
  401b28:	ea50 0201 	orrs.w	r2, r0, r1
  401b2c:	bf08      	it	eq
  401b2e:	4770      	bxeq	lr
  401b30:	b530      	push	{r4, r5, lr}
  401b32:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401b36:	d502      	bpl.n	401b3e <__aeabi_l2d+0x16>
  401b38:	4240      	negs	r0, r0
  401b3a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b3e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401b42:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401b46:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401b4a:	f43f aedc 	beq.w	401906 <__adddf3+0xe6>
  401b4e:	f04f 0203 	mov.w	r2, #3
  401b52:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b56:	bf18      	it	ne
  401b58:	3203      	addne	r2, #3
  401b5a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b5e:	bf18      	it	ne
  401b60:	3203      	addne	r2, #3
  401b62:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401b66:	f1c2 0320 	rsb	r3, r2, #32
  401b6a:	fa00 fc03 	lsl.w	ip, r0, r3
  401b6e:	fa20 f002 	lsr.w	r0, r0, r2
  401b72:	fa01 fe03 	lsl.w	lr, r1, r3
  401b76:	ea40 000e 	orr.w	r0, r0, lr
  401b7a:	fa21 f102 	lsr.w	r1, r1, r2
  401b7e:	4414      	add	r4, r2
  401b80:	e6c1      	b.n	401906 <__adddf3+0xe6>
  401b82:	bf00      	nop

00401b84 <__aeabi_dmul>:
  401b84:	b570      	push	{r4, r5, r6, lr}
  401b86:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401b8a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401b8e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401b92:	bf1d      	ittte	ne
  401b94:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401b98:	ea94 0f0c 	teqne	r4, ip
  401b9c:	ea95 0f0c 	teqne	r5, ip
  401ba0:	f000 f8de 	bleq	401d60 <__aeabi_dmul+0x1dc>
  401ba4:	442c      	add	r4, r5
  401ba6:	ea81 0603 	eor.w	r6, r1, r3
  401baa:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401bae:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401bb2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401bb6:	bf18      	it	ne
  401bb8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401bbc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401bc0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401bc4:	d038      	beq.n	401c38 <__aeabi_dmul+0xb4>
  401bc6:	fba0 ce02 	umull	ip, lr, r0, r2
  401bca:	f04f 0500 	mov.w	r5, #0
  401bce:	fbe1 e502 	umlal	lr, r5, r1, r2
  401bd2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401bd6:	fbe0 e503 	umlal	lr, r5, r0, r3
  401bda:	f04f 0600 	mov.w	r6, #0
  401bde:	fbe1 5603 	umlal	r5, r6, r1, r3
  401be2:	f09c 0f00 	teq	ip, #0
  401be6:	bf18      	it	ne
  401be8:	f04e 0e01 	orrne.w	lr, lr, #1
  401bec:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401bf0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401bf4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401bf8:	d204      	bcs.n	401c04 <__aeabi_dmul+0x80>
  401bfa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401bfe:	416d      	adcs	r5, r5
  401c00:	eb46 0606 	adc.w	r6, r6, r6
  401c04:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401c08:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401c0c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401c10:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401c14:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401c18:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401c1c:	bf88      	it	hi
  401c1e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401c22:	d81e      	bhi.n	401c62 <__aeabi_dmul+0xde>
  401c24:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401c28:	bf08      	it	eq
  401c2a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401c2e:	f150 0000 	adcs.w	r0, r0, #0
  401c32:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401c36:	bd70      	pop	{r4, r5, r6, pc}
  401c38:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401c3c:	ea46 0101 	orr.w	r1, r6, r1
  401c40:	ea40 0002 	orr.w	r0, r0, r2
  401c44:	ea81 0103 	eor.w	r1, r1, r3
  401c48:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401c4c:	bfc2      	ittt	gt
  401c4e:	ebd4 050c 	rsbsgt	r5, r4, ip
  401c52:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401c56:	bd70      	popgt	{r4, r5, r6, pc}
  401c58:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401c5c:	f04f 0e00 	mov.w	lr, #0
  401c60:	3c01      	subs	r4, #1
  401c62:	f300 80ab 	bgt.w	401dbc <__aeabi_dmul+0x238>
  401c66:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401c6a:	bfde      	ittt	le
  401c6c:	2000      	movle	r0, #0
  401c6e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401c72:	bd70      	pople	{r4, r5, r6, pc}
  401c74:	f1c4 0400 	rsb	r4, r4, #0
  401c78:	3c20      	subs	r4, #32
  401c7a:	da35      	bge.n	401ce8 <__aeabi_dmul+0x164>
  401c7c:	340c      	adds	r4, #12
  401c7e:	dc1b      	bgt.n	401cb8 <__aeabi_dmul+0x134>
  401c80:	f104 0414 	add.w	r4, r4, #20
  401c84:	f1c4 0520 	rsb	r5, r4, #32
  401c88:	fa00 f305 	lsl.w	r3, r0, r5
  401c8c:	fa20 f004 	lsr.w	r0, r0, r4
  401c90:	fa01 f205 	lsl.w	r2, r1, r5
  401c94:	ea40 0002 	orr.w	r0, r0, r2
  401c98:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401c9c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ca0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401ca4:	fa21 f604 	lsr.w	r6, r1, r4
  401ca8:	eb42 0106 	adc.w	r1, r2, r6
  401cac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401cb0:	bf08      	it	eq
  401cb2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401cb6:	bd70      	pop	{r4, r5, r6, pc}
  401cb8:	f1c4 040c 	rsb	r4, r4, #12
  401cbc:	f1c4 0520 	rsb	r5, r4, #32
  401cc0:	fa00 f304 	lsl.w	r3, r0, r4
  401cc4:	fa20 f005 	lsr.w	r0, r0, r5
  401cc8:	fa01 f204 	lsl.w	r2, r1, r4
  401ccc:	ea40 0002 	orr.w	r0, r0, r2
  401cd0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401cd4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401cd8:	f141 0100 	adc.w	r1, r1, #0
  401cdc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ce0:	bf08      	it	eq
  401ce2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401ce6:	bd70      	pop	{r4, r5, r6, pc}
  401ce8:	f1c4 0520 	rsb	r5, r4, #32
  401cec:	fa00 f205 	lsl.w	r2, r0, r5
  401cf0:	ea4e 0e02 	orr.w	lr, lr, r2
  401cf4:	fa20 f304 	lsr.w	r3, r0, r4
  401cf8:	fa01 f205 	lsl.w	r2, r1, r5
  401cfc:	ea43 0302 	orr.w	r3, r3, r2
  401d00:	fa21 f004 	lsr.w	r0, r1, r4
  401d04:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d08:	fa21 f204 	lsr.w	r2, r1, r4
  401d0c:	ea20 0002 	bic.w	r0, r0, r2
  401d10:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401d14:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401d18:	bf08      	it	eq
  401d1a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401d1e:	bd70      	pop	{r4, r5, r6, pc}
  401d20:	f094 0f00 	teq	r4, #0
  401d24:	d10f      	bne.n	401d46 <__aeabi_dmul+0x1c2>
  401d26:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401d2a:	0040      	lsls	r0, r0, #1
  401d2c:	eb41 0101 	adc.w	r1, r1, r1
  401d30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401d34:	bf08      	it	eq
  401d36:	3c01      	subeq	r4, #1
  401d38:	d0f7      	beq.n	401d2a <__aeabi_dmul+0x1a6>
  401d3a:	ea41 0106 	orr.w	r1, r1, r6
  401d3e:	f095 0f00 	teq	r5, #0
  401d42:	bf18      	it	ne
  401d44:	4770      	bxne	lr
  401d46:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401d4a:	0052      	lsls	r2, r2, #1
  401d4c:	eb43 0303 	adc.w	r3, r3, r3
  401d50:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401d54:	bf08      	it	eq
  401d56:	3d01      	subeq	r5, #1
  401d58:	d0f7      	beq.n	401d4a <__aeabi_dmul+0x1c6>
  401d5a:	ea43 0306 	orr.w	r3, r3, r6
  401d5e:	4770      	bx	lr
  401d60:	ea94 0f0c 	teq	r4, ip
  401d64:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401d68:	bf18      	it	ne
  401d6a:	ea95 0f0c 	teqne	r5, ip
  401d6e:	d00c      	beq.n	401d8a <__aeabi_dmul+0x206>
  401d70:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d74:	bf18      	it	ne
  401d76:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d7a:	d1d1      	bne.n	401d20 <__aeabi_dmul+0x19c>
  401d7c:	ea81 0103 	eor.w	r1, r1, r3
  401d80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d84:	f04f 0000 	mov.w	r0, #0
  401d88:	bd70      	pop	{r4, r5, r6, pc}
  401d8a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d8e:	bf06      	itte	eq
  401d90:	4610      	moveq	r0, r2
  401d92:	4619      	moveq	r1, r3
  401d94:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d98:	d019      	beq.n	401dce <__aeabi_dmul+0x24a>
  401d9a:	ea94 0f0c 	teq	r4, ip
  401d9e:	d102      	bne.n	401da6 <__aeabi_dmul+0x222>
  401da0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401da4:	d113      	bne.n	401dce <__aeabi_dmul+0x24a>
  401da6:	ea95 0f0c 	teq	r5, ip
  401daa:	d105      	bne.n	401db8 <__aeabi_dmul+0x234>
  401dac:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401db0:	bf1c      	itt	ne
  401db2:	4610      	movne	r0, r2
  401db4:	4619      	movne	r1, r3
  401db6:	d10a      	bne.n	401dce <__aeabi_dmul+0x24a>
  401db8:	ea81 0103 	eor.w	r1, r1, r3
  401dbc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401dc0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401dc4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401dc8:	f04f 0000 	mov.w	r0, #0
  401dcc:	bd70      	pop	{r4, r5, r6, pc}
  401dce:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401dd2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401dd6:	bd70      	pop	{r4, r5, r6, pc}

00401dd8 <__aeabi_ddiv>:
  401dd8:	b570      	push	{r4, r5, r6, lr}
  401dda:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401dde:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401de2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401de6:	bf1d      	ittte	ne
  401de8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401dec:	ea94 0f0c 	teqne	r4, ip
  401df0:	ea95 0f0c 	teqne	r5, ip
  401df4:	f000 f8a7 	bleq	401f46 <__aeabi_ddiv+0x16e>
  401df8:	eba4 0405 	sub.w	r4, r4, r5
  401dfc:	ea81 0e03 	eor.w	lr, r1, r3
  401e00:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401e04:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401e08:	f000 8088 	beq.w	401f1c <__aeabi_ddiv+0x144>
  401e0c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401e10:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401e14:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401e18:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401e1c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401e20:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401e24:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401e28:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401e2c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401e30:	429d      	cmp	r5, r3
  401e32:	bf08      	it	eq
  401e34:	4296      	cmpeq	r6, r2
  401e36:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401e3a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401e3e:	d202      	bcs.n	401e46 <__aeabi_ddiv+0x6e>
  401e40:	085b      	lsrs	r3, r3, #1
  401e42:	ea4f 0232 	mov.w	r2, r2, rrx
  401e46:	1ab6      	subs	r6, r6, r2
  401e48:	eb65 0503 	sbc.w	r5, r5, r3
  401e4c:	085b      	lsrs	r3, r3, #1
  401e4e:	ea4f 0232 	mov.w	r2, r2, rrx
  401e52:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401e56:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401e5a:	ebb6 0e02 	subs.w	lr, r6, r2
  401e5e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e62:	bf22      	ittt	cs
  401e64:	1ab6      	subcs	r6, r6, r2
  401e66:	4675      	movcs	r5, lr
  401e68:	ea40 000c 	orrcs.w	r0, r0, ip
  401e6c:	085b      	lsrs	r3, r3, #1
  401e6e:	ea4f 0232 	mov.w	r2, r2, rrx
  401e72:	ebb6 0e02 	subs.w	lr, r6, r2
  401e76:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e7a:	bf22      	ittt	cs
  401e7c:	1ab6      	subcs	r6, r6, r2
  401e7e:	4675      	movcs	r5, lr
  401e80:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401e84:	085b      	lsrs	r3, r3, #1
  401e86:	ea4f 0232 	mov.w	r2, r2, rrx
  401e8a:	ebb6 0e02 	subs.w	lr, r6, r2
  401e8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e92:	bf22      	ittt	cs
  401e94:	1ab6      	subcs	r6, r6, r2
  401e96:	4675      	movcs	r5, lr
  401e98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401e9c:	085b      	lsrs	r3, r3, #1
  401e9e:	ea4f 0232 	mov.w	r2, r2, rrx
  401ea2:	ebb6 0e02 	subs.w	lr, r6, r2
  401ea6:	eb75 0e03 	sbcs.w	lr, r5, r3
  401eaa:	bf22      	ittt	cs
  401eac:	1ab6      	subcs	r6, r6, r2
  401eae:	4675      	movcs	r5, lr
  401eb0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401eb4:	ea55 0e06 	orrs.w	lr, r5, r6
  401eb8:	d018      	beq.n	401eec <__aeabi_ddiv+0x114>
  401eba:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401ebe:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401ec2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401ec6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401eca:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401ece:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401ed2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401ed6:	d1c0      	bne.n	401e5a <__aeabi_ddiv+0x82>
  401ed8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401edc:	d10b      	bne.n	401ef6 <__aeabi_ddiv+0x11e>
  401ede:	ea41 0100 	orr.w	r1, r1, r0
  401ee2:	f04f 0000 	mov.w	r0, #0
  401ee6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401eea:	e7b6      	b.n	401e5a <__aeabi_ddiv+0x82>
  401eec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ef0:	bf04      	itt	eq
  401ef2:	4301      	orreq	r1, r0
  401ef4:	2000      	moveq	r0, #0
  401ef6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401efa:	bf88      	it	hi
  401efc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401f00:	f63f aeaf 	bhi.w	401c62 <__aeabi_dmul+0xde>
  401f04:	ebb5 0c03 	subs.w	ip, r5, r3
  401f08:	bf04      	itt	eq
  401f0a:	ebb6 0c02 	subseq.w	ip, r6, r2
  401f0e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401f12:	f150 0000 	adcs.w	r0, r0, #0
  401f16:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401f1a:	bd70      	pop	{r4, r5, r6, pc}
  401f1c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401f20:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401f24:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401f28:	bfc2      	ittt	gt
  401f2a:	ebd4 050c 	rsbsgt	r5, r4, ip
  401f2e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401f32:	bd70      	popgt	{r4, r5, r6, pc}
  401f34:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401f38:	f04f 0e00 	mov.w	lr, #0
  401f3c:	3c01      	subs	r4, #1
  401f3e:	e690      	b.n	401c62 <__aeabi_dmul+0xde>
  401f40:	ea45 0e06 	orr.w	lr, r5, r6
  401f44:	e68d      	b.n	401c62 <__aeabi_dmul+0xde>
  401f46:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401f4a:	ea94 0f0c 	teq	r4, ip
  401f4e:	bf08      	it	eq
  401f50:	ea95 0f0c 	teqeq	r5, ip
  401f54:	f43f af3b 	beq.w	401dce <__aeabi_dmul+0x24a>
  401f58:	ea94 0f0c 	teq	r4, ip
  401f5c:	d10a      	bne.n	401f74 <__aeabi_ddiv+0x19c>
  401f5e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401f62:	f47f af34 	bne.w	401dce <__aeabi_dmul+0x24a>
  401f66:	ea95 0f0c 	teq	r5, ip
  401f6a:	f47f af25 	bne.w	401db8 <__aeabi_dmul+0x234>
  401f6e:	4610      	mov	r0, r2
  401f70:	4619      	mov	r1, r3
  401f72:	e72c      	b.n	401dce <__aeabi_dmul+0x24a>
  401f74:	ea95 0f0c 	teq	r5, ip
  401f78:	d106      	bne.n	401f88 <__aeabi_ddiv+0x1b0>
  401f7a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f7e:	f43f aefd 	beq.w	401d7c <__aeabi_dmul+0x1f8>
  401f82:	4610      	mov	r0, r2
  401f84:	4619      	mov	r1, r3
  401f86:	e722      	b.n	401dce <__aeabi_dmul+0x24a>
  401f88:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f8c:	bf18      	it	ne
  401f8e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f92:	f47f aec5 	bne.w	401d20 <__aeabi_dmul+0x19c>
  401f96:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401f9a:	f47f af0d 	bne.w	401db8 <__aeabi_dmul+0x234>
  401f9e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401fa2:	f47f aeeb 	bne.w	401d7c <__aeabi_dmul+0x1f8>
  401fa6:	e712      	b.n	401dce <__aeabi_dmul+0x24a>

00401fa8 <__aeabi_d2uiz>:
  401fa8:	004a      	lsls	r2, r1, #1
  401faa:	d211      	bcs.n	401fd0 <__aeabi_d2uiz+0x28>
  401fac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  401fb0:	d211      	bcs.n	401fd6 <__aeabi_d2uiz+0x2e>
  401fb2:	d50d      	bpl.n	401fd0 <__aeabi_d2uiz+0x28>
  401fb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  401fb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  401fbc:	d40e      	bmi.n	401fdc <__aeabi_d2uiz+0x34>
  401fbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  401fc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  401fc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  401fca:	fa23 f002 	lsr.w	r0, r3, r2
  401fce:	4770      	bx	lr
  401fd0:	f04f 0000 	mov.w	r0, #0
  401fd4:	4770      	bx	lr
  401fd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  401fda:	d102      	bne.n	401fe2 <__aeabi_d2uiz+0x3a>
  401fdc:	f04f 30ff 	mov.w	r0, #4294967295
  401fe0:	4770      	bx	lr
  401fe2:	f04f 0000 	mov.w	r0, #0
  401fe6:	4770      	bx	lr

00401fe8 <atoi>:
  401fe8:	220a      	movs	r2, #10
  401fea:	2100      	movs	r1, #0
  401fec:	f000 baaa 	b.w	402544 <strtol>

00401ff0 <__libc_init_array>:
  401ff0:	b570      	push	{r4, r5, r6, lr}
  401ff2:	4e0f      	ldr	r6, [pc, #60]	; (402030 <__libc_init_array+0x40>)
  401ff4:	4d0f      	ldr	r5, [pc, #60]	; (402034 <__libc_init_array+0x44>)
  401ff6:	1b76      	subs	r6, r6, r5
  401ff8:	10b6      	asrs	r6, r6, #2
  401ffa:	bf18      	it	ne
  401ffc:	2400      	movne	r4, #0
  401ffe:	d005      	beq.n	40200c <__libc_init_array+0x1c>
  402000:	3401      	adds	r4, #1
  402002:	f855 3b04 	ldr.w	r3, [r5], #4
  402006:	4798      	blx	r3
  402008:	42a6      	cmp	r6, r4
  40200a:	d1f9      	bne.n	402000 <__libc_init_array+0x10>
  40200c:	4e0a      	ldr	r6, [pc, #40]	; (402038 <__libc_init_array+0x48>)
  40200e:	4d0b      	ldr	r5, [pc, #44]	; (40203c <__libc_init_array+0x4c>)
  402010:	1b76      	subs	r6, r6, r5
  402012:	f002 f823 	bl	40405c <_init>
  402016:	10b6      	asrs	r6, r6, #2
  402018:	bf18      	it	ne
  40201a:	2400      	movne	r4, #0
  40201c:	d006      	beq.n	40202c <__libc_init_array+0x3c>
  40201e:	3401      	adds	r4, #1
  402020:	f855 3b04 	ldr.w	r3, [r5], #4
  402024:	4798      	blx	r3
  402026:	42a6      	cmp	r6, r4
  402028:	d1f9      	bne.n	40201e <__libc_init_array+0x2e>
  40202a:	bd70      	pop	{r4, r5, r6, pc}
  40202c:	bd70      	pop	{r4, r5, r6, pc}
  40202e:	bf00      	nop
  402030:	00404068 	.word	0x00404068
  402034:	00404068 	.word	0x00404068
  402038:	00404070 	.word	0x00404070
  40203c:	00404068 	.word	0x00404068

00402040 <memset>:
  402040:	b470      	push	{r4, r5, r6}
  402042:	0786      	lsls	r6, r0, #30
  402044:	d046      	beq.n	4020d4 <memset+0x94>
  402046:	1e54      	subs	r4, r2, #1
  402048:	2a00      	cmp	r2, #0
  40204a:	d041      	beq.n	4020d0 <memset+0x90>
  40204c:	b2ca      	uxtb	r2, r1
  40204e:	4603      	mov	r3, r0
  402050:	e002      	b.n	402058 <memset+0x18>
  402052:	f114 34ff 	adds.w	r4, r4, #4294967295
  402056:	d33b      	bcc.n	4020d0 <memset+0x90>
  402058:	f803 2b01 	strb.w	r2, [r3], #1
  40205c:	079d      	lsls	r5, r3, #30
  40205e:	d1f8      	bne.n	402052 <memset+0x12>
  402060:	2c03      	cmp	r4, #3
  402062:	d92e      	bls.n	4020c2 <memset+0x82>
  402064:	b2cd      	uxtb	r5, r1
  402066:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40206a:	2c0f      	cmp	r4, #15
  40206c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402070:	d919      	bls.n	4020a6 <memset+0x66>
  402072:	f103 0210 	add.w	r2, r3, #16
  402076:	4626      	mov	r6, r4
  402078:	3e10      	subs	r6, #16
  40207a:	2e0f      	cmp	r6, #15
  40207c:	f842 5c10 	str.w	r5, [r2, #-16]
  402080:	f842 5c0c 	str.w	r5, [r2, #-12]
  402084:	f842 5c08 	str.w	r5, [r2, #-8]
  402088:	f842 5c04 	str.w	r5, [r2, #-4]
  40208c:	f102 0210 	add.w	r2, r2, #16
  402090:	d8f2      	bhi.n	402078 <memset+0x38>
  402092:	f1a4 0210 	sub.w	r2, r4, #16
  402096:	f022 020f 	bic.w	r2, r2, #15
  40209a:	f004 040f 	and.w	r4, r4, #15
  40209e:	3210      	adds	r2, #16
  4020a0:	2c03      	cmp	r4, #3
  4020a2:	4413      	add	r3, r2
  4020a4:	d90d      	bls.n	4020c2 <memset+0x82>
  4020a6:	461e      	mov	r6, r3
  4020a8:	4622      	mov	r2, r4
  4020aa:	3a04      	subs	r2, #4
  4020ac:	2a03      	cmp	r2, #3
  4020ae:	f846 5b04 	str.w	r5, [r6], #4
  4020b2:	d8fa      	bhi.n	4020aa <memset+0x6a>
  4020b4:	1f22      	subs	r2, r4, #4
  4020b6:	f022 0203 	bic.w	r2, r2, #3
  4020ba:	3204      	adds	r2, #4
  4020bc:	4413      	add	r3, r2
  4020be:	f004 0403 	and.w	r4, r4, #3
  4020c2:	b12c      	cbz	r4, 4020d0 <memset+0x90>
  4020c4:	b2c9      	uxtb	r1, r1
  4020c6:	441c      	add	r4, r3
  4020c8:	f803 1b01 	strb.w	r1, [r3], #1
  4020cc:	429c      	cmp	r4, r3
  4020ce:	d1fb      	bne.n	4020c8 <memset+0x88>
  4020d0:	bc70      	pop	{r4, r5, r6}
  4020d2:	4770      	bx	lr
  4020d4:	4614      	mov	r4, r2
  4020d6:	4603      	mov	r3, r0
  4020d8:	e7c2      	b.n	402060 <memset+0x20>
  4020da:	bf00      	nop

004020dc <_puts_r>:
  4020dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4020de:	4605      	mov	r5, r0
  4020e0:	b089      	sub	sp, #36	; 0x24
  4020e2:	4608      	mov	r0, r1
  4020e4:	460c      	mov	r4, r1
  4020e6:	f000 f92b 	bl	402340 <strlen>
  4020ea:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4020ec:	4f21      	ldr	r7, [pc, #132]	; (402174 <_puts_r+0x98>)
  4020ee:	9404      	str	r4, [sp, #16]
  4020f0:	2601      	movs	r6, #1
  4020f2:	1c44      	adds	r4, r0, #1
  4020f4:	a904      	add	r1, sp, #16
  4020f6:	2202      	movs	r2, #2
  4020f8:	9403      	str	r4, [sp, #12]
  4020fa:	9005      	str	r0, [sp, #20]
  4020fc:	68ac      	ldr	r4, [r5, #8]
  4020fe:	9706      	str	r7, [sp, #24]
  402100:	9607      	str	r6, [sp, #28]
  402102:	9101      	str	r1, [sp, #4]
  402104:	9202      	str	r2, [sp, #8]
  402106:	b353      	cbz	r3, 40215e <_puts_r+0x82>
  402108:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40210a:	f013 0f01 	tst.w	r3, #1
  40210e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402112:	b29a      	uxth	r2, r3
  402114:	d101      	bne.n	40211a <_puts_r+0x3e>
  402116:	0590      	lsls	r0, r2, #22
  402118:	d525      	bpl.n	402166 <_puts_r+0x8a>
  40211a:	0491      	lsls	r1, r2, #18
  40211c:	d406      	bmi.n	40212c <_puts_r+0x50>
  40211e:	6e62      	ldr	r2, [r4, #100]	; 0x64
  402120:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402124:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  402128:	81a3      	strh	r3, [r4, #12]
  40212a:	6662      	str	r2, [r4, #100]	; 0x64
  40212c:	4628      	mov	r0, r5
  40212e:	aa01      	add	r2, sp, #4
  402130:	4621      	mov	r1, r4
  402132:	f000 fcad 	bl	402a90 <__sfvwrite_r>
  402136:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402138:	2800      	cmp	r0, #0
  40213a:	bf0c      	ite	eq
  40213c:	250a      	moveq	r5, #10
  40213e:	f04f 35ff 	movne.w	r5, #4294967295
  402142:	07da      	lsls	r2, r3, #31
  402144:	d402      	bmi.n	40214c <_puts_r+0x70>
  402146:	89a3      	ldrh	r3, [r4, #12]
  402148:	059b      	lsls	r3, r3, #22
  40214a:	d502      	bpl.n	402152 <_puts_r+0x76>
  40214c:	4628      	mov	r0, r5
  40214e:	b009      	add	sp, #36	; 0x24
  402150:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402152:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402154:	f000 fe48 	bl	402de8 <__retarget_lock_release_recursive>
  402158:	4628      	mov	r0, r5
  40215a:	b009      	add	sp, #36	; 0x24
  40215c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40215e:	4628      	mov	r0, r5
  402160:	f000 fb0e 	bl	402780 <__sinit>
  402164:	e7d0      	b.n	402108 <_puts_r+0x2c>
  402166:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402168:	f000 fe3c 	bl	402de4 <__retarget_lock_acquire_recursive>
  40216c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402170:	b29a      	uxth	r2, r3
  402172:	e7d2      	b.n	40211a <_puts_r+0x3e>
  402174:	00403ec4 	.word	0x00403ec4

00402178 <puts>:
  402178:	4b02      	ldr	r3, [pc, #8]	; (402184 <puts+0xc>)
  40217a:	4601      	mov	r1, r0
  40217c:	6818      	ldr	r0, [r3, #0]
  40217e:	f7ff bfad 	b.w	4020dc <_puts_r>
  402182:	bf00      	nop
  402184:	20000038 	.word	0x20000038

00402188 <setbuf>:
  402188:	2900      	cmp	r1, #0
  40218a:	bf0c      	ite	eq
  40218c:	2202      	moveq	r2, #2
  40218e:	2200      	movne	r2, #0
  402190:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402194:	f000 b800 	b.w	402198 <setvbuf>

00402198 <setvbuf>:
  402198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40219c:	4c61      	ldr	r4, [pc, #388]	; (402324 <setvbuf+0x18c>)
  40219e:	6825      	ldr	r5, [r4, #0]
  4021a0:	b083      	sub	sp, #12
  4021a2:	4604      	mov	r4, r0
  4021a4:	460f      	mov	r7, r1
  4021a6:	4690      	mov	r8, r2
  4021a8:	461e      	mov	r6, r3
  4021aa:	b115      	cbz	r5, 4021b2 <setvbuf+0x1a>
  4021ac:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4021ae:	2b00      	cmp	r3, #0
  4021b0:	d064      	beq.n	40227c <setvbuf+0xe4>
  4021b2:	f1b8 0f02 	cmp.w	r8, #2
  4021b6:	d006      	beq.n	4021c6 <setvbuf+0x2e>
  4021b8:	f1b8 0f01 	cmp.w	r8, #1
  4021bc:	f200 809f 	bhi.w	4022fe <setvbuf+0x166>
  4021c0:	2e00      	cmp	r6, #0
  4021c2:	f2c0 809c 	blt.w	4022fe <setvbuf+0x166>
  4021c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4021c8:	07d8      	lsls	r0, r3, #31
  4021ca:	d534      	bpl.n	402236 <setvbuf+0x9e>
  4021cc:	4621      	mov	r1, r4
  4021ce:	4628      	mov	r0, r5
  4021d0:	f000 fa7e 	bl	4026d0 <_fflush_r>
  4021d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4021d6:	b141      	cbz	r1, 4021ea <setvbuf+0x52>
  4021d8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4021dc:	4299      	cmp	r1, r3
  4021de:	d002      	beq.n	4021e6 <setvbuf+0x4e>
  4021e0:	4628      	mov	r0, r5
  4021e2:	f000 fb6f 	bl	4028c4 <_free_r>
  4021e6:	2300      	movs	r3, #0
  4021e8:	6323      	str	r3, [r4, #48]	; 0x30
  4021ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4021ee:	2200      	movs	r2, #0
  4021f0:	61a2      	str	r2, [r4, #24]
  4021f2:	6062      	str	r2, [r4, #4]
  4021f4:	061a      	lsls	r2, r3, #24
  4021f6:	d43a      	bmi.n	40226e <setvbuf+0xd6>
  4021f8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4021fc:	f023 0303 	bic.w	r3, r3, #3
  402200:	f1b8 0f02 	cmp.w	r8, #2
  402204:	81a3      	strh	r3, [r4, #12]
  402206:	d01d      	beq.n	402244 <setvbuf+0xac>
  402208:	ab01      	add	r3, sp, #4
  40220a:	466a      	mov	r2, sp
  40220c:	4621      	mov	r1, r4
  40220e:	4628      	mov	r0, r5
  402210:	f000 fdec 	bl	402dec <__swhatbuf_r>
  402214:	89a3      	ldrh	r3, [r4, #12]
  402216:	4318      	orrs	r0, r3
  402218:	81a0      	strh	r0, [r4, #12]
  40221a:	2e00      	cmp	r6, #0
  40221c:	d132      	bne.n	402284 <setvbuf+0xec>
  40221e:	9e00      	ldr	r6, [sp, #0]
  402220:	4630      	mov	r0, r6
  402222:	f000 fe5b 	bl	402edc <malloc>
  402226:	4607      	mov	r7, r0
  402228:	2800      	cmp	r0, #0
  40222a:	d06b      	beq.n	402304 <setvbuf+0x16c>
  40222c:	89a3      	ldrh	r3, [r4, #12]
  40222e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402232:	81a3      	strh	r3, [r4, #12]
  402234:	e028      	b.n	402288 <setvbuf+0xf0>
  402236:	89a3      	ldrh	r3, [r4, #12]
  402238:	0599      	lsls	r1, r3, #22
  40223a:	d4c7      	bmi.n	4021cc <setvbuf+0x34>
  40223c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40223e:	f000 fdd1 	bl	402de4 <__retarget_lock_acquire_recursive>
  402242:	e7c3      	b.n	4021cc <setvbuf+0x34>
  402244:	2500      	movs	r5, #0
  402246:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402248:	2600      	movs	r6, #0
  40224a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40224e:	f043 0302 	orr.w	r3, r3, #2
  402252:	2001      	movs	r0, #1
  402254:	60a6      	str	r6, [r4, #8]
  402256:	07ce      	lsls	r6, r1, #31
  402258:	81a3      	strh	r3, [r4, #12]
  40225a:	6022      	str	r2, [r4, #0]
  40225c:	6122      	str	r2, [r4, #16]
  40225e:	6160      	str	r0, [r4, #20]
  402260:	d401      	bmi.n	402266 <setvbuf+0xce>
  402262:	0598      	lsls	r0, r3, #22
  402264:	d53e      	bpl.n	4022e4 <setvbuf+0x14c>
  402266:	4628      	mov	r0, r5
  402268:	b003      	add	sp, #12
  40226a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40226e:	6921      	ldr	r1, [r4, #16]
  402270:	4628      	mov	r0, r5
  402272:	f000 fb27 	bl	4028c4 <_free_r>
  402276:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40227a:	e7bd      	b.n	4021f8 <setvbuf+0x60>
  40227c:	4628      	mov	r0, r5
  40227e:	f000 fa7f 	bl	402780 <__sinit>
  402282:	e796      	b.n	4021b2 <setvbuf+0x1a>
  402284:	2f00      	cmp	r7, #0
  402286:	d0cb      	beq.n	402220 <setvbuf+0x88>
  402288:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40228a:	2b00      	cmp	r3, #0
  40228c:	d033      	beq.n	4022f6 <setvbuf+0x15e>
  40228e:	9b00      	ldr	r3, [sp, #0]
  402290:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402294:	6027      	str	r7, [r4, #0]
  402296:	429e      	cmp	r6, r3
  402298:	bf1c      	itt	ne
  40229a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40229e:	81a2      	strhne	r2, [r4, #12]
  4022a0:	f1b8 0f01 	cmp.w	r8, #1
  4022a4:	bf04      	itt	eq
  4022a6:	f042 0201 	orreq.w	r2, r2, #1
  4022aa:	81a2      	strheq	r2, [r4, #12]
  4022ac:	b292      	uxth	r2, r2
  4022ae:	f012 0308 	ands.w	r3, r2, #8
  4022b2:	6127      	str	r7, [r4, #16]
  4022b4:	6166      	str	r6, [r4, #20]
  4022b6:	d00e      	beq.n	4022d6 <setvbuf+0x13e>
  4022b8:	07d1      	lsls	r1, r2, #31
  4022ba:	d51a      	bpl.n	4022f2 <setvbuf+0x15a>
  4022bc:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4022be:	4276      	negs	r6, r6
  4022c0:	2300      	movs	r3, #0
  4022c2:	f015 0501 	ands.w	r5, r5, #1
  4022c6:	61a6      	str	r6, [r4, #24]
  4022c8:	60a3      	str	r3, [r4, #8]
  4022ca:	d009      	beq.n	4022e0 <setvbuf+0x148>
  4022cc:	2500      	movs	r5, #0
  4022ce:	4628      	mov	r0, r5
  4022d0:	b003      	add	sp, #12
  4022d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4022d6:	60a3      	str	r3, [r4, #8]
  4022d8:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4022da:	f015 0501 	ands.w	r5, r5, #1
  4022de:	d1f5      	bne.n	4022cc <setvbuf+0x134>
  4022e0:	0593      	lsls	r3, r2, #22
  4022e2:	d4c0      	bmi.n	402266 <setvbuf+0xce>
  4022e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4022e6:	f000 fd7f 	bl	402de8 <__retarget_lock_release_recursive>
  4022ea:	4628      	mov	r0, r5
  4022ec:	b003      	add	sp, #12
  4022ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4022f2:	60a6      	str	r6, [r4, #8]
  4022f4:	e7f0      	b.n	4022d8 <setvbuf+0x140>
  4022f6:	4628      	mov	r0, r5
  4022f8:	f000 fa42 	bl	402780 <__sinit>
  4022fc:	e7c7      	b.n	40228e <setvbuf+0xf6>
  4022fe:	f04f 35ff 	mov.w	r5, #4294967295
  402302:	e7b0      	b.n	402266 <setvbuf+0xce>
  402304:	f8dd 9000 	ldr.w	r9, [sp]
  402308:	45b1      	cmp	r9, r6
  40230a:	d004      	beq.n	402316 <setvbuf+0x17e>
  40230c:	4648      	mov	r0, r9
  40230e:	f000 fde5 	bl	402edc <malloc>
  402312:	4607      	mov	r7, r0
  402314:	b920      	cbnz	r0, 402320 <setvbuf+0x188>
  402316:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40231a:	f04f 35ff 	mov.w	r5, #4294967295
  40231e:	e792      	b.n	402246 <setvbuf+0xae>
  402320:	464e      	mov	r6, r9
  402322:	e783      	b.n	40222c <setvbuf+0x94>
  402324:	20000038 	.word	0x20000038
	...

00402340 <strlen>:
  402340:	f890 f000 	pld	[r0]
  402344:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402348:	f020 0107 	bic.w	r1, r0, #7
  40234c:	f06f 0c00 	mvn.w	ip, #0
  402350:	f010 0407 	ands.w	r4, r0, #7
  402354:	f891 f020 	pld	[r1, #32]
  402358:	f040 8049 	bne.w	4023ee <strlen+0xae>
  40235c:	f04f 0400 	mov.w	r4, #0
  402360:	f06f 0007 	mvn.w	r0, #7
  402364:	e9d1 2300 	ldrd	r2, r3, [r1]
  402368:	f891 f040 	pld	[r1, #64]	; 0x40
  40236c:	f100 0008 	add.w	r0, r0, #8
  402370:	fa82 f24c 	uadd8	r2, r2, ip
  402374:	faa4 f28c 	sel	r2, r4, ip
  402378:	fa83 f34c 	uadd8	r3, r3, ip
  40237c:	faa2 f38c 	sel	r3, r2, ip
  402380:	bb4b      	cbnz	r3, 4023d6 <strlen+0x96>
  402382:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402386:	fa82 f24c 	uadd8	r2, r2, ip
  40238a:	f100 0008 	add.w	r0, r0, #8
  40238e:	faa4 f28c 	sel	r2, r4, ip
  402392:	fa83 f34c 	uadd8	r3, r3, ip
  402396:	faa2 f38c 	sel	r3, r2, ip
  40239a:	b9e3      	cbnz	r3, 4023d6 <strlen+0x96>
  40239c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4023a0:	fa82 f24c 	uadd8	r2, r2, ip
  4023a4:	f100 0008 	add.w	r0, r0, #8
  4023a8:	faa4 f28c 	sel	r2, r4, ip
  4023ac:	fa83 f34c 	uadd8	r3, r3, ip
  4023b0:	faa2 f38c 	sel	r3, r2, ip
  4023b4:	b97b      	cbnz	r3, 4023d6 <strlen+0x96>
  4023b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4023ba:	f101 0120 	add.w	r1, r1, #32
  4023be:	fa82 f24c 	uadd8	r2, r2, ip
  4023c2:	f100 0008 	add.w	r0, r0, #8
  4023c6:	faa4 f28c 	sel	r2, r4, ip
  4023ca:	fa83 f34c 	uadd8	r3, r3, ip
  4023ce:	faa2 f38c 	sel	r3, r2, ip
  4023d2:	2b00      	cmp	r3, #0
  4023d4:	d0c6      	beq.n	402364 <strlen+0x24>
  4023d6:	2a00      	cmp	r2, #0
  4023d8:	bf04      	itt	eq
  4023da:	3004      	addeq	r0, #4
  4023dc:	461a      	moveq	r2, r3
  4023de:	ba12      	rev	r2, r2
  4023e0:	fab2 f282 	clz	r2, r2
  4023e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4023e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4023ec:	4770      	bx	lr
  4023ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4023f2:	f004 0503 	and.w	r5, r4, #3
  4023f6:	f1c4 0000 	rsb	r0, r4, #0
  4023fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4023fe:	f014 0f04 	tst.w	r4, #4
  402402:	f891 f040 	pld	[r1, #64]	; 0x40
  402406:	fa0c f505 	lsl.w	r5, ip, r5
  40240a:	ea62 0205 	orn	r2, r2, r5
  40240e:	bf1c      	itt	ne
  402410:	ea63 0305 	ornne	r3, r3, r5
  402414:	4662      	movne	r2, ip
  402416:	f04f 0400 	mov.w	r4, #0
  40241a:	e7a9      	b.n	402370 <strlen+0x30>

0040241c <_strtol_l.isra.0>:
  40241c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402420:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  402424:	460f      	mov	r7, r1
  402426:	4680      	mov	r8, r0
  402428:	4616      	mov	r6, r2
  40242a:	461d      	mov	r5, r3
  40242c:	468a      	mov	sl, r1
  40242e:	e000      	b.n	402432 <_strtol_l.isra.0+0x16>
  402430:	46a2      	mov	sl, r4
  402432:	4654      	mov	r4, sl
  402434:	4648      	mov	r0, r9
  402436:	f814 bb01 	ldrb.w	fp, [r4], #1
  40243a:	f000 fccb 	bl	402dd4 <__locale_ctype_ptr_l>
  40243e:	4458      	add	r0, fp
  402440:	7842      	ldrb	r2, [r0, #1]
  402442:	f012 0208 	ands.w	r2, r2, #8
  402446:	d1f3      	bne.n	402430 <_strtol_l.isra.0+0x14>
  402448:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
  40244c:	d04f      	beq.n	4024ee <_strtol_l.isra.0+0xd2>
  40244e:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
  402452:	bf04      	itt	eq
  402454:	f894 b000 	ldrbeq.w	fp, [r4]
  402458:	f10a 0402 	addeq.w	r4, sl, #2
  40245c:	b11d      	cbz	r5, 402466 <_strtol_l.isra.0+0x4a>
  40245e:	2d10      	cmp	r5, #16
  402460:	d056      	beq.n	402510 <_strtol_l.isra.0+0xf4>
  402462:	46ac      	mov	ip, r5
  402464:	e004      	b.n	402470 <_strtol_l.isra.0+0x54>
  402466:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  40246a:	d060      	beq.n	40252e <_strtol_l.isra.0+0x112>
  40246c:	250a      	movs	r5, #10
  40246e:	46ac      	mov	ip, r5
  402470:	2a00      	cmp	r2, #0
  402472:	bf0c      	ite	eq
  402474:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
  402478:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
  40247c:	2100      	movs	r1, #0
  40247e:	fbb9 fefc 	udiv	lr, r9, ip
  402482:	4608      	mov	r0, r1
  402484:	fb0c 9a1e 	mls	sl, ip, lr, r9
  402488:	e005      	b.n	402496 <_strtol_l.isra.0+0x7a>
  40248a:	d029      	beq.n	4024e0 <_strtol_l.isra.0+0xc4>
  40248c:	fb0c 3000 	mla	r0, ip, r0, r3
  402490:	2101      	movs	r1, #1
  402492:	f814 bb01 	ldrb.w	fp, [r4], #1
  402496:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
  40249a:	2b09      	cmp	r3, #9
  40249c:	d905      	bls.n	4024aa <_strtol_l.isra.0+0x8e>
  40249e:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
  4024a2:	2b19      	cmp	r3, #25
  4024a4:	d80b      	bhi.n	4024be <_strtol_l.isra.0+0xa2>
  4024a6:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
  4024aa:	429d      	cmp	r5, r3
  4024ac:	dd0f      	ble.n	4024ce <_strtol_l.isra.0+0xb2>
  4024ae:	f1b1 3fff 	cmp.w	r1, #4294967295
  4024b2:	d0ee      	beq.n	402492 <_strtol_l.isra.0+0x76>
  4024b4:	4586      	cmp	lr, r0
  4024b6:	d2e8      	bcs.n	40248a <_strtol_l.isra.0+0x6e>
  4024b8:	f04f 31ff 	mov.w	r1, #4294967295
  4024bc:	e7e9      	b.n	402492 <_strtol_l.isra.0+0x76>
  4024be:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
  4024c2:	2b19      	cmp	r3, #25
  4024c4:	d803      	bhi.n	4024ce <_strtol_l.isra.0+0xb2>
  4024c6:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
  4024ca:	429d      	cmp	r5, r3
  4024cc:	dcef      	bgt.n	4024ae <_strtol_l.isra.0+0x92>
  4024ce:	1c4b      	adds	r3, r1, #1
  4024d0:	d013      	beq.n	4024fa <_strtol_l.isra.0+0xde>
  4024d2:	b102      	cbz	r2, 4024d6 <_strtol_l.isra.0+0xba>
  4024d4:	4240      	negs	r0, r0
  4024d6:	b146      	cbz	r6, 4024ea <_strtol_l.isra.0+0xce>
  4024d8:	b9c1      	cbnz	r1, 40250c <_strtol_l.isra.0+0xf0>
  4024da:	6037      	str	r7, [r6, #0]
  4024dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4024e0:	459a      	cmp	sl, r3
  4024e2:	dad3      	bge.n	40248c <_strtol_l.isra.0+0x70>
  4024e4:	f04f 31ff 	mov.w	r1, #4294967295
  4024e8:	e7d3      	b.n	402492 <_strtol_l.isra.0+0x76>
  4024ea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4024ee:	f894 b000 	ldrb.w	fp, [r4]
  4024f2:	2201      	movs	r2, #1
  4024f4:	f10a 0402 	add.w	r4, sl, #2
  4024f8:	e7b0      	b.n	40245c <_strtol_l.isra.0+0x40>
  4024fa:	2322      	movs	r3, #34	; 0x22
  4024fc:	f8c8 3000 	str.w	r3, [r8]
  402500:	b1ee      	cbz	r6, 40253e <_strtol_l.isra.0+0x122>
  402502:	1e67      	subs	r7, r4, #1
  402504:	4648      	mov	r0, r9
  402506:	6037      	str	r7, [r6, #0]
  402508:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40250c:	4681      	mov	r9, r0
  40250e:	e7f8      	b.n	402502 <_strtol_l.isra.0+0xe6>
  402510:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  402514:	d1a5      	bne.n	402462 <_strtol_l.isra.0+0x46>
  402516:	7823      	ldrb	r3, [r4, #0]
  402518:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40251c:	2b58      	cmp	r3, #88	; 0x58
  40251e:	d1a0      	bne.n	402462 <_strtol_l.isra.0+0x46>
  402520:	f04f 0c10 	mov.w	ip, #16
  402524:	f894 b001 	ldrb.w	fp, [r4, #1]
  402528:	4665      	mov	r5, ip
  40252a:	3402      	adds	r4, #2
  40252c:	e7a0      	b.n	402470 <_strtol_l.isra.0+0x54>
  40252e:	7823      	ldrb	r3, [r4, #0]
  402530:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  402534:	2b58      	cmp	r3, #88	; 0x58
  402536:	d0f3      	beq.n	402520 <_strtol_l.isra.0+0x104>
  402538:	2508      	movs	r5, #8
  40253a:	46ac      	mov	ip, r5
  40253c:	e798      	b.n	402470 <_strtol_l.isra.0+0x54>
  40253e:	4648      	mov	r0, r9
  402540:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00402544 <strtol>:
  402544:	b530      	push	{r4, r5, lr}
  402546:	4c08      	ldr	r4, [pc, #32]	; (402568 <strtol+0x24>)
  402548:	4b08      	ldr	r3, [pc, #32]	; (40256c <strtol+0x28>)
  40254a:	6825      	ldr	r5, [r4, #0]
  40254c:	6b6c      	ldr	r4, [r5, #52]	; 0x34
  40254e:	b083      	sub	sp, #12
  402550:	2c00      	cmp	r4, #0
  402552:	bf08      	it	eq
  402554:	461c      	moveq	r4, r3
  402556:	9400      	str	r4, [sp, #0]
  402558:	4613      	mov	r3, r2
  40255a:	460a      	mov	r2, r1
  40255c:	4601      	mov	r1, r0
  40255e:	4628      	mov	r0, r5
  402560:	f7ff ff5c 	bl	40241c <_strtol_l.isra.0>
  402564:	b003      	add	sp, #12
  402566:	bd30      	pop	{r4, r5, pc}
  402568:	20000038 	.word	0x20000038
  40256c:	2000046c 	.word	0x2000046c

00402570 <register_fini>:
  402570:	4b02      	ldr	r3, [pc, #8]	; (40257c <register_fini+0xc>)
  402572:	b113      	cbz	r3, 40257a <register_fini+0xa>
  402574:	4802      	ldr	r0, [pc, #8]	; (402580 <register_fini+0x10>)
  402576:	f000 b805 	b.w	402584 <atexit>
  40257a:	4770      	bx	lr
  40257c:	00000000 	.word	0x00000000
  402580:	004027f1 	.word	0x004027f1

00402584 <atexit>:
  402584:	2300      	movs	r3, #0
  402586:	4601      	mov	r1, r0
  402588:	461a      	mov	r2, r3
  40258a:	4618      	mov	r0, r3
  40258c:	f001 bb56 	b.w	403c3c <__register_exitproc>

00402590 <__sflush_r>:
  402590:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402594:	b29a      	uxth	r2, r3
  402596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40259a:	460d      	mov	r5, r1
  40259c:	0711      	lsls	r1, r2, #28
  40259e:	4680      	mov	r8, r0
  4025a0:	d43a      	bmi.n	402618 <__sflush_r+0x88>
  4025a2:	686a      	ldr	r2, [r5, #4]
  4025a4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4025a8:	2a00      	cmp	r2, #0
  4025aa:	81ab      	strh	r3, [r5, #12]
  4025ac:	dd6f      	ble.n	40268e <__sflush_r+0xfe>
  4025ae:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4025b0:	2c00      	cmp	r4, #0
  4025b2:	d049      	beq.n	402648 <__sflush_r+0xb8>
  4025b4:	2200      	movs	r2, #0
  4025b6:	b29b      	uxth	r3, r3
  4025b8:	f8d8 6000 	ldr.w	r6, [r8]
  4025bc:	f8c8 2000 	str.w	r2, [r8]
  4025c0:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4025c4:	d067      	beq.n	402696 <__sflush_r+0x106>
  4025c6:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4025c8:	075f      	lsls	r7, r3, #29
  4025ca:	d505      	bpl.n	4025d8 <__sflush_r+0x48>
  4025cc:	6869      	ldr	r1, [r5, #4]
  4025ce:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4025d0:	1a52      	subs	r2, r2, r1
  4025d2:	b10b      	cbz	r3, 4025d8 <__sflush_r+0x48>
  4025d4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4025d6:	1ad2      	subs	r2, r2, r3
  4025d8:	2300      	movs	r3, #0
  4025da:	69e9      	ldr	r1, [r5, #28]
  4025dc:	4640      	mov	r0, r8
  4025de:	47a0      	blx	r4
  4025e0:	1c44      	adds	r4, r0, #1
  4025e2:	d03c      	beq.n	40265e <__sflush_r+0xce>
  4025e4:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4025e8:	692a      	ldr	r2, [r5, #16]
  4025ea:	602a      	str	r2, [r5, #0]
  4025ec:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4025f0:	2200      	movs	r2, #0
  4025f2:	81ab      	strh	r3, [r5, #12]
  4025f4:	04db      	lsls	r3, r3, #19
  4025f6:	606a      	str	r2, [r5, #4]
  4025f8:	d447      	bmi.n	40268a <__sflush_r+0xfa>
  4025fa:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4025fc:	f8c8 6000 	str.w	r6, [r8]
  402600:	b311      	cbz	r1, 402648 <__sflush_r+0xb8>
  402602:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402606:	4299      	cmp	r1, r3
  402608:	d002      	beq.n	402610 <__sflush_r+0x80>
  40260a:	4640      	mov	r0, r8
  40260c:	f000 f95a 	bl	4028c4 <_free_r>
  402610:	2000      	movs	r0, #0
  402612:	6328      	str	r0, [r5, #48]	; 0x30
  402614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402618:	692e      	ldr	r6, [r5, #16]
  40261a:	b1ae      	cbz	r6, 402648 <__sflush_r+0xb8>
  40261c:	682c      	ldr	r4, [r5, #0]
  40261e:	602e      	str	r6, [r5, #0]
  402620:	0791      	lsls	r1, r2, #30
  402622:	bf0c      	ite	eq
  402624:	696b      	ldreq	r3, [r5, #20]
  402626:	2300      	movne	r3, #0
  402628:	1ba4      	subs	r4, r4, r6
  40262a:	60ab      	str	r3, [r5, #8]
  40262c:	e00a      	b.n	402644 <__sflush_r+0xb4>
  40262e:	4623      	mov	r3, r4
  402630:	4632      	mov	r2, r6
  402632:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402634:	69e9      	ldr	r1, [r5, #28]
  402636:	4640      	mov	r0, r8
  402638:	47b8      	blx	r7
  40263a:	2800      	cmp	r0, #0
  40263c:	eba4 0400 	sub.w	r4, r4, r0
  402640:	4406      	add	r6, r0
  402642:	dd04      	ble.n	40264e <__sflush_r+0xbe>
  402644:	2c00      	cmp	r4, #0
  402646:	dcf2      	bgt.n	40262e <__sflush_r+0x9e>
  402648:	2000      	movs	r0, #0
  40264a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40264e:	89ab      	ldrh	r3, [r5, #12]
  402650:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402654:	81ab      	strh	r3, [r5, #12]
  402656:	f04f 30ff 	mov.w	r0, #4294967295
  40265a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40265e:	f8d8 4000 	ldr.w	r4, [r8]
  402662:	2c1d      	cmp	r4, #29
  402664:	d8f3      	bhi.n	40264e <__sflush_r+0xbe>
  402666:	4b19      	ldr	r3, [pc, #100]	; (4026cc <__sflush_r+0x13c>)
  402668:	40e3      	lsrs	r3, r4
  40266a:	43db      	mvns	r3, r3
  40266c:	f013 0301 	ands.w	r3, r3, #1
  402670:	d1ed      	bne.n	40264e <__sflush_r+0xbe>
  402672:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  402676:	606b      	str	r3, [r5, #4]
  402678:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  40267c:	6929      	ldr	r1, [r5, #16]
  40267e:	81ab      	strh	r3, [r5, #12]
  402680:	04da      	lsls	r2, r3, #19
  402682:	6029      	str	r1, [r5, #0]
  402684:	d5b9      	bpl.n	4025fa <__sflush_r+0x6a>
  402686:	2c00      	cmp	r4, #0
  402688:	d1b7      	bne.n	4025fa <__sflush_r+0x6a>
  40268a:	6528      	str	r0, [r5, #80]	; 0x50
  40268c:	e7b5      	b.n	4025fa <__sflush_r+0x6a>
  40268e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402690:	2a00      	cmp	r2, #0
  402692:	dc8c      	bgt.n	4025ae <__sflush_r+0x1e>
  402694:	e7d8      	b.n	402648 <__sflush_r+0xb8>
  402696:	2301      	movs	r3, #1
  402698:	69e9      	ldr	r1, [r5, #28]
  40269a:	4640      	mov	r0, r8
  40269c:	47a0      	blx	r4
  40269e:	1c43      	adds	r3, r0, #1
  4026a0:	4602      	mov	r2, r0
  4026a2:	d002      	beq.n	4026aa <__sflush_r+0x11a>
  4026a4:	89ab      	ldrh	r3, [r5, #12]
  4026a6:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4026a8:	e78e      	b.n	4025c8 <__sflush_r+0x38>
  4026aa:	f8d8 3000 	ldr.w	r3, [r8]
  4026ae:	2b00      	cmp	r3, #0
  4026b0:	d0f8      	beq.n	4026a4 <__sflush_r+0x114>
  4026b2:	2b1d      	cmp	r3, #29
  4026b4:	d001      	beq.n	4026ba <__sflush_r+0x12a>
  4026b6:	2b16      	cmp	r3, #22
  4026b8:	d102      	bne.n	4026c0 <__sflush_r+0x130>
  4026ba:	f8c8 6000 	str.w	r6, [r8]
  4026be:	e7c3      	b.n	402648 <__sflush_r+0xb8>
  4026c0:	89ab      	ldrh	r3, [r5, #12]
  4026c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4026c6:	81ab      	strh	r3, [r5, #12]
  4026c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4026cc:	20400001 	.word	0x20400001

004026d0 <_fflush_r>:
  4026d0:	b538      	push	{r3, r4, r5, lr}
  4026d2:	460d      	mov	r5, r1
  4026d4:	4604      	mov	r4, r0
  4026d6:	b108      	cbz	r0, 4026dc <_fflush_r+0xc>
  4026d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4026da:	b1bb      	cbz	r3, 40270c <_fflush_r+0x3c>
  4026dc:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4026e0:	b188      	cbz	r0, 402706 <_fflush_r+0x36>
  4026e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4026e4:	07db      	lsls	r3, r3, #31
  4026e6:	d401      	bmi.n	4026ec <_fflush_r+0x1c>
  4026e8:	0581      	lsls	r1, r0, #22
  4026ea:	d517      	bpl.n	40271c <_fflush_r+0x4c>
  4026ec:	4620      	mov	r0, r4
  4026ee:	4629      	mov	r1, r5
  4026f0:	f7ff ff4e 	bl	402590 <__sflush_r>
  4026f4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4026f6:	07da      	lsls	r2, r3, #31
  4026f8:	4604      	mov	r4, r0
  4026fa:	d402      	bmi.n	402702 <_fflush_r+0x32>
  4026fc:	89ab      	ldrh	r3, [r5, #12]
  4026fe:	059b      	lsls	r3, r3, #22
  402700:	d507      	bpl.n	402712 <_fflush_r+0x42>
  402702:	4620      	mov	r0, r4
  402704:	bd38      	pop	{r3, r4, r5, pc}
  402706:	4604      	mov	r4, r0
  402708:	4620      	mov	r0, r4
  40270a:	bd38      	pop	{r3, r4, r5, pc}
  40270c:	f000 f838 	bl	402780 <__sinit>
  402710:	e7e4      	b.n	4026dc <_fflush_r+0xc>
  402712:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402714:	f000 fb68 	bl	402de8 <__retarget_lock_release_recursive>
  402718:	4620      	mov	r0, r4
  40271a:	bd38      	pop	{r3, r4, r5, pc}
  40271c:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40271e:	f000 fb61 	bl	402de4 <__retarget_lock_acquire_recursive>
  402722:	e7e3      	b.n	4026ec <_fflush_r+0x1c>

00402724 <_cleanup_r>:
  402724:	4901      	ldr	r1, [pc, #4]	; (40272c <_cleanup_r+0x8>)
  402726:	f000 bb2b 	b.w	402d80 <_fwalk_reent>
  40272a:	bf00      	nop
  40272c:	00403d25 	.word	0x00403d25

00402730 <std.isra.0>:
  402730:	b510      	push	{r4, lr}
  402732:	2300      	movs	r3, #0
  402734:	4604      	mov	r4, r0
  402736:	8181      	strh	r1, [r0, #12]
  402738:	81c2      	strh	r2, [r0, #14]
  40273a:	6003      	str	r3, [r0, #0]
  40273c:	6043      	str	r3, [r0, #4]
  40273e:	6083      	str	r3, [r0, #8]
  402740:	6643      	str	r3, [r0, #100]	; 0x64
  402742:	6103      	str	r3, [r0, #16]
  402744:	6143      	str	r3, [r0, #20]
  402746:	6183      	str	r3, [r0, #24]
  402748:	4619      	mov	r1, r3
  40274a:	2208      	movs	r2, #8
  40274c:	305c      	adds	r0, #92	; 0x5c
  40274e:	f7ff fc77 	bl	402040 <memset>
  402752:	4807      	ldr	r0, [pc, #28]	; (402770 <std.isra.0+0x40>)
  402754:	4907      	ldr	r1, [pc, #28]	; (402774 <std.isra.0+0x44>)
  402756:	4a08      	ldr	r2, [pc, #32]	; (402778 <std.isra.0+0x48>)
  402758:	4b08      	ldr	r3, [pc, #32]	; (40277c <std.isra.0+0x4c>)
  40275a:	6220      	str	r0, [r4, #32]
  40275c:	61e4      	str	r4, [r4, #28]
  40275e:	6261      	str	r1, [r4, #36]	; 0x24
  402760:	62a2      	str	r2, [r4, #40]	; 0x28
  402762:	62e3      	str	r3, [r4, #44]	; 0x2c
  402764:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402768:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40276c:	f000 bb36 	b.w	402ddc <__retarget_lock_init_recursive>
  402770:	00403aa5 	.word	0x00403aa5
  402774:	00403ac9 	.word	0x00403ac9
  402778:	00403b05 	.word	0x00403b05
  40277c:	00403b25 	.word	0x00403b25

00402780 <__sinit>:
  402780:	b510      	push	{r4, lr}
  402782:	4604      	mov	r4, r0
  402784:	4812      	ldr	r0, [pc, #72]	; (4027d0 <__sinit+0x50>)
  402786:	f000 fb2d 	bl	402de4 <__retarget_lock_acquire_recursive>
  40278a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40278c:	b9d2      	cbnz	r2, 4027c4 <__sinit+0x44>
  40278e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  402792:	4810      	ldr	r0, [pc, #64]	; (4027d4 <__sinit+0x54>)
  402794:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  402798:	2103      	movs	r1, #3
  40279a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40279e:	63e0      	str	r0, [r4, #60]	; 0x3c
  4027a0:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4027a4:	6860      	ldr	r0, [r4, #4]
  4027a6:	2104      	movs	r1, #4
  4027a8:	f7ff ffc2 	bl	402730 <std.isra.0>
  4027ac:	2201      	movs	r2, #1
  4027ae:	2109      	movs	r1, #9
  4027b0:	68a0      	ldr	r0, [r4, #8]
  4027b2:	f7ff ffbd 	bl	402730 <std.isra.0>
  4027b6:	2202      	movs	r2, #2
  4027b8:	2112      	movs	r1, #18
  4027ba:	68e0      	ldr	r0, [r4, #12]
  4027bc:	f7ff ffb8 	bl	402730 <std.isra.0>
  4027c0:	2301      	movs	r3, #1
  4027c2:	63a3      	str	r3, [r4, #56]	; 0x38
  4027c4:	4802      	ldr	r0, [pc, #8]	; (4027d0 <__sinit+0x50>)
  4027c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4027ca:	f000 bb0d 	b.w	402de8 <__retarget_lock_release_recursive>
  4027ce:	bf00      	nop
  4027d0:	20002adc 	.word	0x20002adc
  4027d4:	00402725 	.word	0x00402725

004027d8 <__sfp_lock_acquire>:
  4027d8:	4801      	ldr	r0, [pc, #4]	; (4027e0 <__sfp_lock_acquire+0x8>)
  4027da:	f000 bb03 	b.w	402de4 <__retarget_lock_acquire_recursive>
  4027de:	bf00      	nop
  4027e0:	20002af0 	.word	0x20002af0

004027e4 <__sfp_lock_release>:
  4027e4:	4801      	ldr	r0, [pc, #4]	; (4027ec <__sfp_lock_release+0x8>)
  4027e6:	f000 baff 	b.w	402de8 <__retarget_lock_release_recursive>
  4027ea:	bf00      	nop
  4027ec:	20002af0 	.word	0x20002af0

004027f0 <__libc_fini_array>:
  4027f0:	b538      	push	{r3, r4, r5, lr}
  4027f2:	4c0a      	ldr	r4, [pc, #40]	; (40281c <__libc_fini_array+0x2c>)
  4027f4:	4d0a      	ldr	r5, [pc, #40]	; (402820 <__libc_fini_array+0x30>)
  4027f6:	1b64      	subs	r4, r4, r5
  4027f8:	10a4      	asrs	r4, r4, #2
  4027fa:	d00a      	beq.n	402812 <__libc_fini_array+0x22>
  4027fc:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402800:	3b01      	subs	r3, #1
  402802:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402806:	3c01      	subs	r4, #1
  402808:	f855 3904 	ldr.w	r3, [r5], #-4
  40280c:	4798      	blx	r3
  40280e:	2c00      	cmp	r4, #0
  402810:	d1f9      	bne.n	402806 <__libc_fini_array+0x16>
  402812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402816:	f001 bc2b 	b.w	404070 <_fini>
  40281a:	bf00      	nop
  40281c:	00404080 	.word	0x00404080
  402820:	0040407c 	.word	0x0040407c

00402824 <_malloc_trim_r>:
  402824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402826:	4f24      	ldr	r7, [pc, #144]	; (4028b8 <_malloc_trim_r+0x94>)
  402828:	460c      	mov	r4, r1
  40282a:	4606      	mov	r6, r0
  40282c:	f000 ff76 	bl	40371c <__malloc_lock>
  402830:	68bb      	ldr	r3, [r7, #8]
  402832:	685d      	ldr	r5, [r3, #4]
  402834:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402838:	310f      	adds	r1, #15
  40283a:	f025 0503 	bic.w	r5, r5, #3
  40283e:	4429      	add	r1, r5
  402840:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402844:	f021 010f 	bic.w	r1, r1, #15
  402848:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40284c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402850:	db07      	blt.n	402862 <_malloc_trim_r+0x3e>
  402852:	2100      	movs	r1, #0
  402854:	4630      	mov	r0, r6
  402856:	f001 f913 	bl	403a80 <_sbrk_r>
  40285a:	68bb      	ldr	r3, [r7, #8]
  40285c:	442b      	add	r3, r5
  40285e:	4298      	cmp	r0, r3
  402860:	d004      	beq.n	40286c <_malloc_trim_r+0x48>
  402862:	4630      	mov	r0, r6
  402864:	f000 ff60 	bl	403728 <__malloc_unlock>
  402868:	2000      	movs	r0, #0
  40286a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40286c:	4261      	negs	r1, r4
  40286e:	4630      	mov	r0, r6
  402870:	f001 f906 	bl	403a80 <_sbrk_r>
  402874:	3001      	adds	r0, #1
  402876:	d00d      	beq.n	402894 <_malloc_trim_r+0x70>
  402878:	4b10      	ldr	r3, [pc, #64]	; (4028bc <_malloc_trim_r+0x98>)
  40287a:	68ba      	ldr	r2, [r7, #8]
  40287c:	6819      	ldr	r1, [r3, #0]
  40287e:	1b2d      	subs	r5, r5, r4
  402880:	f045 0501 	orr.w	r5, r5, #1
  402884:	4630      	mov	r0, r6
  402886:	1b09      	subs	r1, r1, r4
  402888:	6055      	str	r5, [r2, #4]
  40288a:	6019      	str	r1, [r3, #0]
  40288c:	f000 ff4c 	bl	403728 <__malloc_unlock>
  402890:	2001      	movs	r0, #1
  402892:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402894:	2100      	movs	r1, #0
  402896:	4630      	mov	r0, r6
  402898:	f001 f8f2 	bl	403a80 <_sbrk_r>
  40289c:	68ba      	ldr	r2, [r7, #8]
  40289e:	1a83      	subs	r3, r0, r2
  4028a0:	2b0f      	cmp	r3, #15
  4028a2:	ddde      	ble.n	402862 <_malloc_trim_r+0x3e>
  4028a4:	4c06      	ldr	r4, [pc, #24]	; (4028c0 <_malloc_trim_r+0x9c>)
  4028a6:	4905      	ldr	r1, [pc, #20]	; (4028bc <_malloc_trim_r+0x98>)
  4028a8:	6824      	ldr	r4, [r4, #0]
  4028aa:	f043 0301 	orr.w	r3, r3, #1
  4028ae:	1b00      	subs	r0, r0, r4
  4028b0:	6053      	str	r3, [r2, #4]
  4028b2:	6008      	str	r0, [r1, #0]
  4028b4:	e7d5      	b.n	402862 <_malloc_trim_r+0x3e>
  4028b6:	bf00      	nop
  4028b8:	200005d8 	.word	0x200005d8
  4028bc:	20000a84 	.word	0x20000a84
  4028c0:	200009e0 	.word	0x200009e0

004028c4 <_free_r>:
  4028c4:	2900      	cmp	r1, #0
  4028c6:	d044      	beq.n	402952 <_free_r+0x8e>
  4028c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4028cc:	460d      	mov	r5, r1
  4028ce:	4680      	mov	r8, r0
  4028d0:	f000 ff24 	bl	40371c <__malloc_lock>
  4028d4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4028d8:	4969      	ldr	r1, [pc, #420]	; (402a80 <_free_r+0x1bc>)
  4028da:	f027 0301 	bic.w	r3, r7, #1
  4028de:	f1a5 0408 	sub.w	r4, r5, #8
  4028e2:	18e2      	adds	r2, r4, r3
  4028e4:	688e      	ldr	r6, [r1, #8]
  4028e6:	6850      	ldr	r0, [r2, #4]
  4028e8:	42b2      	cmp	r2, r6
  4028ea:	f020 0003 	bic.w	r0, r0, #3
  4028ee:	d05e      	beq.n	4029ae <_free_r+0xea>
  4028f0:	07fe      	lsls	r6, r7, #31
  4028f2:	6050      	str	r0, [r2, #4]
  4028f4:	d40b      	bmi.n	40290e <_free_r+0x4a>
  4028f6:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4028fa:	1be4      	subs	r4, r4, r7
  4028fc:	f101 0e08 	add.w	lr, r1, #8
  402900:	68a5      	ldr	r5, [r4, #8]
  402902:	4575      	cmp	r5, lr
  402904:	443b      	add	r3, r7
  402906:	d06d      	beq.n	4029e4 <_free_r+0x120>
  402908:	68e7      	ldr	r7, [r4, #12]
  40290a:	60ef      	str	r7, [r5, #12]
  40290c:	60bd      	str	r5, [r7, #8]
  40290e:	1815      	adds	r5, r2, r0
  402910:	686d      	ldr	r5, [r5, #4]
  402912:	07ed      	lsls	r5, r5, #31
  402914:	d53e      	bpl.n	402994 <_free_r+0xd0>
  402916:	f043 0201 	orr.w	r2, r3, #1
  40291a:	6062      	str	r2, [r4, #4]
  40291c:	50e3      	str	r3, [r4, r3]
  40291e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402922:	d217      	bcs.n	402954 <_free_r+0x90>
  402924:	08db      	lsrs	r3, r3, #3
  402926:	1c58      	adds	r0, r3, #1
  402928:	109a      	asrs	r2, r3, #2
  40292a:	684d      	ldr	r5, [r1, #4]
  40292c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  402930:	60a7      	str	r7, [r4, #8]
  402932:	2301      	movs	r3, #1
  402934:	4093      	lsls	r3, r2
  402936:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40293a:	432b      	orrs	r3, r5
  40293c:	3a08      	subs	r2, #8
  40293e:	60e2      	str	r2, [r4, #12]
  402940:	604b      	str	r3, [r1, #4]
  402942:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  402946:	60fc      	str	r4, [r7, #12]
  402948:	4640      	mov	r0, r8
  40294a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40294e:	f000 beeb 	b.w	403728 <__malloc_unlock>
  402952:	4770      	bx	lr
  402954:	0a5a      	lsrs	r2, r3, #9
  402956:	2a04      	cmp	r2, #4
  402958:	d852      	bhi.n	402a00 <_free_r+0x13c>
  40295a:	099a      	lsrs	r2, r3, #6
  40295c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402960:	00ff      	lsls	r7, r7, #3
  402962:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402966:	19c8      	adds	r0, r1, r7
  402968:	59ca      	ldr	r2, [r1, r7]
  40296a:	3808      	subs	r0, #8
  40296c:	4290      	cmp	r0, r2
  40296e:	d04f      	beq.n	402a10 <_free_r+0x14c>
  402970:	6851      	ldr	r1, [r2, #4]
  402972:	f021 0103 	bic.w	r1, r1, #3
  402976:	428b      	cmp	r3, r1
  402978:	d232      	bcs.n	4029e0 <_free_r+0x11c>
  40297a:	6892      	ldr	r2, [r2, #8]
  40297c:	4290      	cmp	r0, r2
  40297e:	d1f7      	bne.n	402970 <_free_r+0xac>
  402980:	68c3      	ldr	r3, [r0, #12]
  402982:	60a0      	str	r0, [r4, #8]
  402984:	60e3      	str	r3, [r4, #12]
  402986:	609c      	str	r4, [r3, #8]
  402988:	60c4      	str	r4, [r0, #12]
  40298a:	4640      	mov	r0, r8
  40298c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402990:	f000 beca 	b.w	403728 <__malloc_unlock>
  402994:	6895      	ldr	r5, [r2, #8]
  402996:	4f3b      	ldr	r7, [pc, #236]	; (402a84 <_free_r+0x1c0>)
  402998:	42bd      	cmp	r5, r7
  40299a:	4403      	add	r3, r0
  40299c:	d040      	beq.n	402a20 <_free_r+0x15c>
  40299e:	68d0      	ldr	r0, [r2, #12]
  4029a0:	60e8      	str	r0, [r5, #12]
  4029a2:	f043 0201 	orr.w	r2, r3, #1
  4029a6:	6085      	str	r5, [r0, #8]
  4029a8:	6062      	str	r2, [r4, #4]
  4029aa:	50e3      	str	r3, [r4, r3]
  4029ac:	e7b7      	b.n	40291e <_free_r+0x5a>
  4029ae:	07ff      	lsls	r7, r7, #31
  4029b0:	4403      	add	r3, r0
  4029b2:	d407      	bmi.n	4029c4 <_free_r+0x100>
  4029b4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4029b8:	1aa4      	subs	r4, r4, r2
  4029ba:	4413      	add	r3, r2
  4029bc:	68a0      	ldr	r0, [r4, #8]
  4029be:	68e2      	ldr	r2, [r4, #12]
  4029c0:	60c2      	str	r2, [r0, #12]
  4029c2:	6090      	str	r0, [r2, #8]
  4029c4:	4a30      	ldr	r2, [pc, #192]	; (402a88 <_free_r+0x1c4>)
  4029c6:	6812      	ldr	r2, [r2, #0]
  4029c8:	f043 0001 	orr.w	r0, r3, #1
  4029cc:	4293      	cmp	r3, r2
  4029ce:	6060      	str	r0, [r4, #4]
  4029d0:	608c      	str	r4, [r1, #8]
  4029d2:	d3b9      	bcc.n	402948 <_free_r+0x84>
  4029d4:	4b2d      	ldr	r3, [pc, #180]	; (402a8c <_free_r+0x1c8>)
  4029d6:	4640      	mov	r0, r8
  4029d8:	6819      	ldr	r1, [r3, #0]
  4029da:	f7ff ff23 	bl	402824 <_malloc_trim_r>
  4029de:	e7b3      	b.n	402948 <_free_r+0x84>
  4029e0:	4610      	mov	r0, r2
  4029e2:	e7cd      	b.n	402980 <_free_r+0xbc>
  4029e4:	1811      	adds	r1, r2, r0
  4029e6:	6849      	ldr	r1, [r1, #4]
  4029e8:	07c9      	lsls	r1, r1, #31
  4029ea:	d444      	bmi.n	402a76 <_free_r+0x1b2>
  4029ec:	6891      	ldr	r1, [r2, #8]
  4029ee:	68d2      	ldr	r2, [r2, #12]
  4029f0:	60ca      	str	r2, [r1, #12]
  4029f2:	4403      	add	r3, r0
  4029f4:	f043 0001 	orr.w	r0, r3, #1
  4029f8:	6091      	str	r1, [r2, #8]
  4029fa:	6060      	str	r0, [r4, #4]
  4029fc:	50e3      	str	r3, [r4, r3]
  4029fe:	e7a3      	b.n	402948 <_free_r+0x84>
  402a00:	2a14      	cmp	r2, #20
  402a02:	d816      	bhi.n	402a32 <_free_r+0x16e>
  402a04:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  402a08:	00ff      	lsls	r7, r7, #3
  402a0a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402a0e:	e7aa      	b.n	402966 <_free_r+0xa2>
  402a10:	10aa      	asrs	r2, r5, #2
  402a12:	2301      	movs	r3, #1
  402a14:	684d      	ldr	r5, [r1, #4]
  402a16:	4093      	lsls	r3, r2
  402a18:	432b      	orrs	r3, r5
  402a1a:	604b      	str	r3, [r1, #4]
  402a1c:	4603      	mov	r3, r0
  402a1e:	e7b0      	b.n	402982 <_free_r+0xbe>
  402a20:	f043 0201 	orr.w	r2, r3, #1
  402a24:	614c      	str	r4, [r1, #20]
  402a26:	610c      	str	r4, [r1, #16]
  402a28:	60e5      	str	r5, [r4, #12]
  402a2a:	60a5      	str	r5, [r4, #8]
  402a2c:	6062      	str	r2, [r4, #4]
  402a2e:	50e3      	str	r3, [r4, r3]
  402a30:	e78a      	b.n	402948 <_free_r+0x84>
  402a32:	2a54      	cmp	r2, #84	; 0x54
  402a34:	d806      	bhi.n	402a44 <_free_r+0x180>
  402a36:	0b1a      	lsrs	r2, r3, #12
  402a38:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402a3c:	00ff      	lsls	r7, r7, #3
  402a3e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402a42:	e790      	b.n	402966 <_free_r+0xa2>
  402a44:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402a48:	d806      	bhi.n	402a58 <_free_r+0x194>
  402a4a:	0bda      	lsrs	r2, r3, #15
  402a4c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402a50:	00ff      	lsls	r7, r7, #3
  402a52:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402a56:	e786      	b.n	402966 <_free_r+0xa2>
  402a58:	f240 5054 	movw	r0, #1364	; 0x554
  402a5c:	4282      	cmp	r2, r0
  402a5e:	d806      	bhi.n	402a6e <_free_r+0x1aa>
  402a60:	0c9a      	lsrs	r2, r3, #18
  402a62:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402a66:	00ff      	lsls	r7, r7, #3
  402a68:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402a6c:	e77b      	b.n	402966 <_free_r+0xa2>
  402a6e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402a72:	257e      	movs	r5, #126	; 0x7e
  402a74:	e777      	b.n	402966 <_free_r+0xa2>
  402a76:	f043 0101 	orr.w	r1, r3, #1
  402a7a:	6061      	str	r1, [r4, #4]
  402a7c:	6013      	str	r3, [r2, #0]
  402a7e:	e763      	b.n	402948 <_free_r+0x84>
  402a80:	200005d8 	.word	0x200005d8
  402a84:	200005e0 	.word	0x200005e0
  402a88:	200009e4 	.word	0x200009e4
  402a8c:	20000ab4 	.word	0x20000ab4

00402a90 <__sfvwrite_r>:
  402a90:	6893      	ldr	r3, [r2, #8]
  402a92:	2b00      	cmp	r3, #0
  402a94:	d073      	beq.n	402b7e <__sfvwrite_r+0xee>
  402a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402a9a:	898b      	ldrh	r3, [r1, #12]
  402a9c:	b083      	sub	sp, #12
  402a9e:	460c      	mov	r4, r1
  402aa0:	0719      	lsls	r1, r3, #28
  402aa2:	9000      	str	r0, [sp, #0]
  402aa4:	4616      	mov	r6, r2
  402aa6:	d526      	bpl.n	402af6 <__sfvwrite_r+0x66>
  402aa8:	6922      	ldr	r2, [r4, #16]
  402aaa:	b322      	cbz	r2, 402af6 <__sfvwrite_r+0x66>
  402aac:	f013 0002 	ands.w	r0, r3, #2
  402ab0:	6835      	ldr	r5, [r6, #0]
  402ab2:	d02c      	beq.n	402b0e <__sfvwrite_r+0x7e>
  402ab4:	f04f 0900 	mov.w	r9, #0
  402ab8:	4fb0      	ldr	r7, [pc, #704]	; (402d7c <__sfvwrite_r+0x2ec>)
  402aba:	46c8      	mov	r8, r9
  402abc:	46b2      	mov	sl, r6
  402abe:	45b8      	cmp	r8, r7
  402ac0:	4643      	mov	r3, r8
  402ac2:	464a      	mov	r2, r9
  402ac4:	bf28      	it	cs
  402ac6:	463b      	movcs	r3, r7
  402ac8:	9800      	ldr	r0, [sp, #0]
  402aca:	f1b8 0f00 	cmp.w	r8, #0
  402ace:	d050      	beq.n	402b72 <__sfvwrite_r+0xe2>
  402ad0:	69e1      	ldr	r1, [r4, #28]
  402ad2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402ad4:	47b0      	blx	r6
  402ad6:	2800      	cmp	r0, #0
  402ad8:	dd58      	ble.n	402b8c <__sfvwrite_r+0xfc>
  402ada:	f8da 3008 	ldr.w	r3, [sl, #8]
  402ade:	1a1b      	subs	r3, r3, r0
  402ae0:	4481      	add	r9, r0
  402ae2:	eba8 0800 	sub.w	r8, r8, r0
  402ae6:	f8ca 3008 	str.w	r3, [sl, #8]
  402aea:	2b00      	cmp	r3, #0
  402aec:	d1e7      	bne.n	402abe <__sfvwrite_r+0x2e>
  402aee:	2000      	movs	r0, #0
  402af0:	b003      	add	sp, #12
  402af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402af6:	4621      	mov	r1, r4
  402af8:	9800      	ldr	r0, [sp, #0]
  402afa:	f001 f83b 	bl	403b74 <__swsetup_r>
  402afe:	2800      	cmp	r0, #0
  402b00:	f040 8133 	bne.w	402d6a <__sfvwrite_r+0x2da>
  402b04:	89a3      	ldrh	r3, [r4, #12]
  402b06:	6835      	ldr	r5, [r6, #0]
  402b08:	f013 0002 	ands.w	r0, r3, #2
  402b0c:	d1d2      	bne.n	402ab4 <__sfvwrite_r+0x24>
  402b0e:	f013 0901 	ands.w	r9, r3, #1
  402b12:	d145      	bne.n	402ba0 <__sfvwrite_r+0x110>
  402b14:	464f      	mov	r7, r9
  402b16:	9601      	str	r6, [sp, #4]
  402b18:	b337      	cbz	r7, 402b68 <__sfvwrite_r+0xd8>
  402b1a:	059a      	lsls	r2, r3, #22
  402b1c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402b20:	f140 8083 	bpl.w	402c2a <__sfvwrite_r+0x19a>
  402b24:	4547      	cmp	r7, r8
  402b26:	46c3      	mov	fp, r8
  402b28:	f0c0 80ab 	bcc.w	402c82 <__sfvwrite_r+0x1f2>
  402b2c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402b30:	f040 80ac 	bne.w	402c8c <__sfvwrite_r+0x1fc>
  402b34:	6820      	ldr	r0, [r4, #0]
  402b36:	46ba      	mov	sl, r7
  402b38:	465a      	mov	r2, fp
  402b3a:	4649      	mov	r1, r9
  402b3c:	f000 fd8a 	bl	403654 <memmove>
  402b40:	68a2      	ldr	r2, [r4, #8]
  402b42:	6823      	ldr	r3, [r4, #0]
  402b44:	eba2 0208 	sub.w	r2, r2, r8
  402b48:	445b      	add	r3, fp
  402b4a:	60a2      	str	r2, [r4, #8]
  402b4c:	6023      	str	r3, [r4, #0]
  402b4e:	9a01      	ldr	r2, [sp, #4]
  402b50:	6893      	ldr	r3, [r2, #8]
  402b52:	eba3 030a 	sub.w	r3, r3, sl
  402b56:	44d1      	add	r9, sl
  402b58:	eba7 070a 	sub.w	r7, r7, sl
  402b5c:	6093      	str	r3, [r2, #8]
  402b5e:	2b00      	cmp	r3, #0
  402b60:	d0c5      	beq.n	402aee <__sfvwrite_r+0x5e>
  402b62:	89a3      	ldrh	r3, [r4, #12]
  402b64:	2f00      	cmp	r7, #0
  402b66:	d1d8      	bne.n	402b1a <__sfvwrite_r+0x8a>
  402b68:	f8d5 9000 	ldr.w	r9, [r5]
  402b6c:	686f      	ldr	r7, [r5, #4]
  402b6e:	3508      	adds	r5, #8
  402b70:	e7d2      	b.n	402b18 <__sfvwrite_r+0x88>
  402b72:	f8d5 9000 	ldr.w	r9, [r5]
  402b76:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402b7a:	3508      	adds	r5, #8
  402b7c:	e79f      	b.n	402abe <__sfvwrite_r+0x2e>
  402b7e:	2000      	movs	r0, #0
  402b80:	4770      	bx	lr
  402b82:	4621      	mov	r1, r4
  402b84:	9800      	ldr	r0, [sp, #0]
  402b86:	f7ff fda3 	bl	4026d0 <_fflush_r>
  402b8a:	b370      	cbz	r0, 402bea <__sfvwrite_r+0x15a>
  402b8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402b94:	f04f 30ff 	mov.w	r0, #4294967295
  402b98:	81a3      	strh	r3, [r4, #12]
  402b9a:	b003      	add	sp, #12
  402b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ba0:	4681      	mov	r9, r0
  402ba2:	4633      	mov	r3, r6
  402ba4:	464e      	mov	r6, r9
  402ba6:	46a8      	mov	r8, r5
  402ba8:	469a      	mov	sl, r3
  402baa:	464d      	mov	r5, r9
  402bac:	b34e      	cbz	r6, 402c02 <__sfvwrite_r+0x172>
  402bae:	b380      	cbz	r0, 402c12 <__sfvwrite_r+0x182>
  402bb0:	6820      	ldr	r0, [r4, #0]
  402bb2:	6923      	ldr	r3, [r4, #16]
  402bb4:	6962      	ldr	r2, [r4, #20]
  402bb6:	45b1      	cmp	r9, r6
  402bb8:	46cb      	mov	fp, r9
  402bba:	bf28      	it	cs
  402bbc:	46b3      	movcs	fp, r6
  402bbe:	4298      	cmp	r0, r3
  402bc0:	465f      	mov	r7, fp
  402bc2:	d904      	bls.n	402bce <__sfvwrite_r+0x13e>
  402bc4:	68a3      	ldr	r3, [r4, #8]
  402bc6:	4413      	add	r3, r2
  402bc8:	459b      	cmp	fp, r3
  402bca:	f300 80a6 	bgt.w	402d1a <__sfvwrite_r+0x28a>
  402bce:	4593      	cmp	fp, r2
  402bd0:	db4b      	blt.n	402c6a <__sfvwrite_r+0x1da>
  402bd2:	4613      	mov	r3, r2
  402bd4:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402bd6:	69e1      	ldr	r1, [r4, #28]
  402bd8:	9800      	ldr	r0, [sp, #0]
  402bda:	462a      	mov	r2, r5
  402bdc:	47b8      	blx	r7
  402bde:	1e07      	subs	r7, r0, #0
  402be0:	ddd4      	ble.n	402b8c <__sfvwrite_r+0xfc>
  402be2:	ebb9 0907 	subs.w	r9, r9, r7
  402be6:	d0cc      	beq.n	402b82 <__sfvwrite_r+0xf2>
  402be8:	2001      	movs	r0, #1
  402bea:	f8da 3008 	ldr.w	r3, [sl, #8]
  402bee:	1bdb      	subs	r3, r3, r7
  402bf0:	443d      	add	r5, r7
  402bf2:	1bf6      	subs	r6, r6, r7
  402bf4:	f8ca 3008 	str.w	r3, [sl, #8]
  402bf8:	2b00      	cmp	r3, #0
  402bfa:	f43f af78 	beq.w	402aee <__sfvwrite_r+0x5e>
  402bfe:	2e00      	cmp	r6, #0
  402c00:	d1d5      	bne.n	402bae <__sfvwrite_r+0x11e>
  402c02:	f108 0308 	add.w	r3, r8, #8
  402c06:	e913 0060 	ldmdb	r3, {r5, r6}
  402c0a:	4698      	mov	r8, r3
  402c0c:	3308      	adds	r3, #8
  402c0e:	2e00      	cmp	r6, #0
  402c10:	d0f9      	beq.n	402c06 <__sfvwrite_r+0x176>
  402c12:	4632      	mov	r2, r6
  402c14:	210a      	movs	r1, #10
  402c16:	4628      	mov	r0, r5
  402c18:	f000 fc32 	bl	403480 <memchr>
  402c1c:	2800      	cmp	r0, #0
  402c1e:	f000 80a1 	beq.w	402d64 <__sfvwrite_r+0x2d4>
  402c22:	3001      	adds	r0, #1
  402c24:	eba0 0905 	sub.w	r9, r0, r5
  402c28:	e7c2      	b.n	402bb0 <__sfvwrite_r+0x120>
  402c2a:	6820      	ldr	r0, [r4, #0]
  402c2c:	6923      	ldr	r3, [r4, #16]
  402c2e:	4298      	cmp	r0, r3
  402c30:	d802      	bhi.n	402c38 <__sfvwrite_r+0x1a8>
  402c32:	6963      	ldr	r3, [r4, #20]
  402c34:	429f      	cmp	r7, r3
  402c36:	d25d      	bcs.n	402cf4 <__sfvwrite_r+0x264>
  402c38:	45b8      	cmp	r8, r7
  402c3a:	bf28      	it	cs
  402c3c:	46b8      	movcs	r8, r7
  402c3e:	4642      	mov	r2, r8
  402c40:	4649      	mov	r1, r9
  402c42:	f000 fd07 	bl	403654 <memmove>
  402c46:	68a3      	ldr	r3, [r4, #8]
  402c48:	6822      	ldr	r2, [r4, #0]
  402c4a:	eba3 0308 	sub.w	r3, r3, r8
  402c4e:	4442      	add	r2, r8
  402c50:	60a3      	str	r3, [r4, #8]
  402c52:	6022      	str	r2, [r4, #0]
  402c54:	b10b      	cbz	r3, 402c5a <__sfvwrite_r+0x1ca>
  402c56:	46c2      	mov	sl, r8
  402c58:	e779      	b.n	402b4e <__sfvwrite_r+0xbe>
  402c5a:	4621      	mov	r1, r4
  402c5c:	9800      	ldr	r0, [sp, #0]
  402c5e:	f7ff fd37 	bl	4026d0 <_fflush_r>
  402c62:	2800      	cmp	r0, #0
  402c64:	d192      	bne.n	402b8c <__sfvwrite_r+0xfc>
  402c66:	46c2      	mov	sl, r8
  402c68:	e771      	b.n	402b4e <__sfvwrite_r+0xbe>
  402c6a:	465a      	mov	r2, fp
  402c6c:	4629      	mov	r1, r5
  402c6e:	f000 fcf1 	bl	403654 <memmove>
  402c72:	68a2      	ldr	r2, [r4, #8]
  402c74:	6823      	ldr	r3, [r4, #0]
  402c76:	eba2 020b 	sub.w	r2, r2, fp
  402c7a:	445b      	add	r3, fp
  402c7c:	60a2      	str	r2, [r4, #8]
  402c7e:	6023      	str	r3, [r4, #0]
  402c80:	e7af      	b.n	402be2 <__sfvwrite_r+0x152>
  402c82:	6820      	ldr	r0, [r4, #0]
  402c84:	46b8      	mov	r8, r7
  402c86:	46ba      	mov	sl, r7
  402c88:	46bb      	mov	fp, r7
  402c8a:	e755      	b.n	402b38 <__sfvwrite_r+0xa8>
  402c8c:	6962      	ldr	r2, [r4, #20]
  402c8e:	6820      	ldr	r0, [r4, #0]
  402c90:	6921      	ldr	r1, [r4, #16]
  402c92:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  402c96:	eba0 0a01 	sub.w	sl, r0, r1
  402c9a:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  402c9e:	f10a 0001 	add.w	r0, sl, #1
  402ca2:	ea4f 0868 	mov.w	r8, r8, asr #1
  402ca6:	4438      	add	r0, r7
  402ca8:	4540      	cmp	r0, r8
  402caa:	4642      	mov	r2, r8
  402cac:	bf84      	itt	hi
  402cae:	4680      	movhi	r8, r0
  402cb0:	4642      	movhi	r2, r8
  402cb2:	055b      	lsls	r3, r3, #21
  402cb4:	d544      	bpl.n	402d40 <__sfvwrite_r+0x2b0>
  402cb6:	4611      	mov	r1, r2
  402cb8:	9800      	ldr	r0, [sp, #0]
  402cba:	f000 f917 	bl	402eec <_malloc_r>
  402cbe:	4683      	mov	fp, r0
  402cc0:	2800      	cmp	r0, #0
  402cc2:	d055      	beq.n	402d70 <__sfvwrite_r+0x2e0>
  402cc4:	4652      	mov	r2, sl
  402cc6:	6921      	ldr	r1, [r4, #16]
  402cc8:	f000 fc2a 	bl	403520 <memcpy>
  402ccc:	89a3      	ldrh	r3, [r4, #12]
  402cce:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  402cd2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402cd6:	81a3      	strh	r3, [r4, #12]
  402cd8:	eb0b 000a 	add.w	r0, fp, sl
  402cdc:	eba8 030a 	sub.w	r3, r8, sl
  402ce0:	f8c4 b010 	str.w	fp, [r4, #16]
  402ce4:	f8c4 8014 	str.w	r8, [r4, #20]
  402ce8:	6020      	str	r0, [r4, #0]
  402cea:	60a3      	str	r3, [r4, #8]
  402cec:	46b8      	mov	r8, r7
  402cee:	46ba      	mov	sl, r7
  402cf0:	46bb      	mov	fp, r7
  402cf2:	e721      	b.n	402b38 <__sfvwrite_r+0xa8>
  402cf4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  402cf8:	42b9      	cmp	r1, r7
  402cfa:	bf28      	it	cs
  402cfc:	4639      	movcs	r1, r7
  402cfe:	464a      	mov	r2, r9
  402d00:	fb91 f1f3 	sdiv	r1, r1, r3
  402d04:	9800      	ldr	r0, [sp, #0]
  402d06:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402d08:	fb03 f301 	mul.w	r3, r3, r1
  402d0c:	69e1      	ldr	r1, [r4, #28]
  402d0e:	47b0      	blx	r6
  402d10:	f1b0 0a00 	subs.w	sl, r0, #0
  402d14:	f73f af1b 	bgt.w	402b4e <__sfvwrite_r+0xbe>
  402d18:	e738      	b.n	402b8c <__sfvwrite_r+0xfc>
  402d1a:	461a      	mov	r2, r3
  402d1c:	4629      	mov	r1, r5
  402d1e:	9301      	str	r3, [sp, #4]
  402d20:	f000 fc98 	bl	403654 <memmove>
  402d24:	6822      	ldr	r2, [r4, #0]
  402d26:	9b01      	ldr	r3, [sp, #4]
  402d28:	9800      	ldr	r0, [sp, #0]
  402d2a:	441a      	add	r2, r3
  402d2c:	6022      	str	r2, [r4, #0]
  402d2e:	4621      	mov	r1, r4
  402d30:	f7ff fcce 	bl	4026d0 <_fflush_r>
  402d34:	9b01      	ldr	r3, [sp, #4]
  402d36:	2800      	cmp	r0, #0
  402d38:	f47f af28 	bne.w	402b8c <__sfvwrite_r+0xfc>
  402d3c:	461f      	mov	r7, r3
  402d3e:	e750      	b.n	402be2 <__sfvwrite_r+0x152>
  402d40:	9800      	ldr	r0, [sp, #0]
  402d42:	f000 fcf7 	bl	403734 <_realloc_r>
  402d46:	4683      	mov	fp, r0
  402d48:	2800      	cmp	r0, #0
  402d4a:	d1c5      	bne.n	402cd8 <__sfvwrite_r+0x248>
  402d4c:	9d00      	ldr	r5, [sp, #0]
  402d4e:	6921      	ldr	r1, [r4, #16]
  402d50:	4628      	mov	r0, r5
  402d52:	f7ff fdb7 	bl	4028c4 <_free_r>
  402d56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402d5a:	220c      	movs	r2, #12
  402d5c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402d60:	602a      	str	r2, [r5, #0]
  402d62:	e715      	b.n	402b90 <__sfvwrite_r+0x100>
  402d64:	f106 0901 	add.w	r9, r6, #1
  402d68:	e722      	b.n	402bb0 <__sfvwrite_r+0x120>
  402d6a:	f04f 30ff 	mov.w	r0, #4294967295
  402d6e:	e6bf      	b.n	402af0 <__sfvwrite_r+0x60>
  402d70:	9a00      	ldr	r2, [sp, #0]
  402d72:	230c      	movs	r3, #12
  402d74:	6013      	str	r3, [r2, #0]
  402d76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402d7a:	e709      	b.n	402b90 <__sfvwrite_r+0x100>
  402d7c:	7ffffc00 	.word	0x7ffffc00

00402d80 <_fwalk_reent>:
  402d80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402d84:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402d88:	d01f      	beq.n	402dca <_fwalk_reent+0x4a>
  402d8a:	4688      	mov	r8, r1
  402d8c:	4606      	mov	r6, r0
  402d8e:	f04f 0900 	mov.w	r9, #0
  402d92:	687d      	ldr	r5, [r7, #4]
  402d94:	68bc      	ldr	r4, [r7, #8]
  402d96:	3d01      	subs	r5, #1
  402d98:	d411      	bmi.n	402dbe <_fwalk_reent+0x3e>
  402d9a:	89a3      	ldrh	r3, [r4, #12]
  402d9c:	2b01      	cmp	r3, #1
  402d9e:	f105 35ff 	add.w	r5, r5, #4294967295
  402da2:	d908      	bls.n	402db6 <_fwalk_reent+0x36>
  402da4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402da8:	3301      	adds	r3, #1
  402daa:	4621      	mov	r1, r4
  402dac:	4630      	mov	r0, r6
  402dae:	d002      	beq.n	402db6 <_fwalk_reent+0x36>
  402db0:	47c0      	blx	r8
  402db2:	ea49 0900 	orr.w	r9, r9, r0
  402db6:	1c6b      	adds	r3, r5, #1
  402db8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  402dbc:	d1ed      	bne.n	402d9a <_fwalk_reent+0x1a>
  402dbe:	683f      	ldr	r7, [r7, #0]
  402dc0:	2f00      	cmp	r7, #0
  402dc2:	d1e6      	bne.n	402d92 <_fwalk_reent+0x12>
  402dc4:	4648      	mov	r0, r9
  402dc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402dca:	46b9      	mov	r9, r7
  402dcc:	4648      	mov	r0, r9
  402dce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402dd2:	bf00      	nop

00402dd4 <__locale_ctype_ptr_l>:
  402dd4:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
  402dd8:	4770      	bx	lr
  402dda:	bf00      	nop

00402ddc <__retarget_lock_init_recursive>:
  402ddc:	4770      	bx	lr
  402dde:	bf00      	nop

00402de0 <__retarget_lock_close_recursive>:
  402de0:	4770      	bx	lr
  402de2:	bf00      	nop

00402de4 <__retarget_lock_acquire_recursive>:
  402de4:	4770      	bx	lr
  402de6:	bf00      	nop

00402de8 <__retarget_lock_release_recursive>:
  402de8:	4770      	bx	lr
  402dea:	bf00      	nop

00402dec <__swhatbuf_r>:
  402dec:	b570      	push	{r4, r5, r6, lr}
  402dee:	460c      	mov	r4, r1
  402df0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402df4:	2900      	cmp	r1, #0
  402df6:	b090      	sub	sp, #64	; 0x40
  402df8:	4615      	mov	r5, r2
  402dfa:	461e      	mov	r6, r3
  402dfc:	db14      	blt.n	402e28 <__swhatbuf_r+0x3c>
  402dfe:	aa01      	add	r2, sp, #4
  402e00:	f000 fff2 	bl	403de8 <_fstat_r>
  402e04:	2800      	cmp	r0, #0
  402e06:	db0f      	blt.n	402e28 <__swhatbuf_r+0x3c>
  402e08:	9a02      	ldr	r2, [sp, #8]
  402e0a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  402e0e:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  402e12:	fab2 f282 	clz	r2, r2
  402e16:	0952      	lsrs	r2, r2, #5
  402e18:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402e1c:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402e20:	6032      	str	r2, [r6, #0]
  402e22:	602b      	str	r3, [r5, #0]
  402e24:	b010      	add	sp, #64	; 0x40
  402e26:	bd70      	pop	{r4, r5, r6, pc}
  402e28:	89a2      	ldrh	r2, [r4, #12]
  402e2a:	2300      	movs	r3, #0
  402e2c:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402e30:	6033      	str	r3, [r6, #0]
  402e32:	d004      	beq.n	402e3e <__swhatbuf_r+0x52>
  402e34:	2240      	movs	r2, #64	; 0x40
  402e36:	4618      	mov	r0, r3
  402e38:	602a      	str	r2, [r5, #0]
  402e3a:	b010      	add	sp, #64	; 0x40
  402e3c:	bd70      	pop	{r4, r5, r6, pc}
  402e3e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402e42:	602b      	str	r3, [r5, #0]
  402e44:	b010      	add	sp, #64	; 0x40
  402e46:	bd70      	pop	{r4, r5, r6, pc}

00402e48 <__smakebuf_r>:
  402e48:	898a      	ldrh	r2, [r1, #12]
  402e4a:	0792      	lsls	r2, r2, #30
  402e4c:	460b      	mov	r3, r1
  402e4e:	d506      	bpl.n	402e5e <__smakebuf_r+0x16>
  402e50:	f101 0243 	add.w	r2, r1, #67	; 0x43
  402e54:	2101      	movs	r1, #1
  402e56:	601a      	str	r2, [r3, #0]
  402e58:	611a      	str	r2, [r3, #16]
  402e5a:	6159      	str	r1, [r3, #20]
  402e5c:	4770      	bx	lr
  402e5e:	b5f0      	push	{r4, r5, r6, r7, lr}
  402e60:	b083      	sub	sp, #12
  402e62:	ab01      	add	r3, sp, #4
  402e64:	466a      	mov	r2, sp
  402e66:	460c      	mov	r4, r1
  402e68:	4606      	mov	r6, r0
  402e6a:	f7ff ffbf 	bl	402dec <__swhatbuf_r>
  402e6e:	9900      	ldr	r1, [sp, #0]
  402e70:	4605      	mov	r5, r0
  402e72:	4630      	mov	r0, r6
  402e74:	f000 f83a 	bl	402eec <_malloc_r>
  402e78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402e7c:	b1d8      	cbz	r0, 402eb6 <__smakebuf_r+0x6e>
  402e7e:	9a01      	ldr	r2, [sp, #4]
  402e80:	4f15      	ldr	r7, [pc, #84]	; (402ed8 <__smakebuf_r+0x90>)
  402e82:	9900      	ldr	r1, [sp, #0]
  402e84:	63f7      	str	r7, [r6, #60]	; 0x3c
  402e86:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402e8a:	81a3      	strh	r3, [r4, #12]
  402e8c:	6020      	str	r0, [r4, #0]
  402e8e:	6120      	str	r0, [r4, #16]
  402e90:	6161      	str	r1, [r4, #20]
  402e92:	b91a      	cbnz	r2, 402e9c <__smakebuf_r+0x54>
  402e94:	432b      	orrs	r3, r5
  402e96:	81a3      	strh	r3, [r4, #12]
  402e98:	b003      	add	sp, #12
  402e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402e9c:	4630      	mov	r0, r6
  402e9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402ea2:	f000 ffb5 	bl	403e10 <_isatty_r>
  402ea6:	b1a0      	cbz	r0, 402ed2 <__smakebuf_r+0x8a>
  402ea8:	89a3      	ldrh	r3, [r4, #12]
  402eaa:	f023 0303 	bic.w	r3, r3, #3
  402eae:	f043 0301 	orr.w	r3, r3, #1
  402eb2:	b21b      	sxth	r3, r3
  402eb4:	e7ee      	b.n	402e94 <__smakebuf_r+0x4c>
  402eb6:	059a      	lsls	r2, r3, #22
  402eb8:	d4ee      	bmi.n	402e98 <__smakebuf_r+0x50>
  402eba:	f023 0303 	bic.w	r3, r3, #3
  402ebe:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402ec2:	f043 0302 	orr.w	r3, r3, #2
  402ec6:	2101      	movs	r1, #1
  402ec8:	81a3      	strh	r3, [r4, #12]
  402eca:	6022      	str	r2, [r4, #0]
  402ecc:	6122      	str	r2, [r4, #16]
  402ece:	6161      	str	r1, [r4, #20]
  402ed0:	e7e2      	b.n	402e98 <__smakebuf_r+0x50>
  402ed2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402ed6:	e7dd      	b.n	402e94 <__smakebuf_r+0x4c>
  402ed8:	00402725 	.word	0x00402725

00402edc <malloc>:
  402edc:	4b02      	ldr	r3, [pc, #8]	; (402ee8 <malloc+0xc>)
  402ede:	4601      	mov	r1, r0
  402ee0:	6818      	ldr	r0, [r3, #0]
  402ee2:	f000 b803 	b.w	402eec <_malloc_r>
  402ee6:	bf00      	nop
  402ee8:	20000038 	.word	0x20000038

00402eec <_malloc_r>:
  402eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ef0:	f101 060b 	add.w	r6, r1, #11
  402ef4:	2e16      	cmp	r6, #22
  402ef6:	b083      	sub	sp, #12
  402ef8:	4605      	mov	r5, r0
  402efa:	f240 809e 	bls.w	40303a <_malloc_r+0x14e>
  402efe:	f036 0607 	bics.w	r6, r6, #7
  402f02:	f100 80bd 	bmi.w	403080 <_malloc_r+0x194>
  402f06:	42b1      	cmp	r1, r6
  402f08:	f200 80ba 	bhi.w	403080 <_malloc_r+0x194>
  402f0c:	f000 fc06 	bl	40371c <__malloc_lock>
  402f10:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  402f14:	f0c0 8293 	bcc.w	40343e <_malloc_r+0x552>
  402f18:	0a73      	lsrs	r3, r6, #9
  402f1a:	f000 80b8 	beq.w	40308e <_malloc_r+0x1a2>
  402f1e:	2b04      	cmp	r3, #4
  402f20:	f200 8179 	bhi.w	403216 <_malloc_r+0x32a>
  402f24:	09b3      	lsrs	r3, r6, #6
  402f26:	f103 0039 	add.w	r0, r3, #57	; 0x39
  402f2a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402f2e:	00c3      	lsls	r3, r0, #3
  402f30:	4fbf      	ldr	r7, [pc, #764]	; (403230 <_malloc_r+0x344>)
  402f32:	443b      	add	r3, r7
  402f34:	f1a3 0108 	sub.w	r1, r3, #8
  402f38:	685c      	ldr	r4, [r3, #4]
  402f3a:	42a1      	cmp	r1, r4
  402f3c:	d106      	bne.n	402f4c <_malloc_r+0x60>
  402f3e:	e00c      	b.n	402f5a <_malloc_r+0x6e>
  402f40:	2a00      	cmp	r2, #0
  402f42:	f280 80aa 	bge.w	40309a <_malloc_r+0x1ae>
  402f46:	68e4      	ldr	r4, [r4, #12]
  402f48:	42a1      	cmp	r1, r4
  402f4a:	d006      	beq.n	402f5a <_malloc_r+0x6e>
  402f4c:	6863      	ldr	r3, [r4, #4]
  402f4e:	f023 0303 	bic.w	r3, r3, #3
  402f52:	1b9a      	subs	r2, r3, r6
  402f54:	2a0f      	cmp	r2, #15
  402f56:	ddf3      	ble.n	402f40 <_malloc_r+0x54>
  402f58:	4670      	mov	r0, lr
  402f5a:	693c      	ldr	r4, [r7, #16]
  402f5c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 403244 <_malloc_r+0x358>
  402f60:	4574      	cmp	r4, lr
  402f62:	f000 81ab 	beq.w	4032bc <_malloc_r+0x3d0>
  402f66:	6863      	ldr	r3, [r4, #4]
  402f68:	f023 0303 	bic.w	r3, r3, #3
  402f6c:	1b9a      	subs	r2, r3, r6
  402f6e:	2a0f      	cmp	r2, #15
  402f70:	f300 8190 	bgt.w	403294 <_malloc_r+0x3a8>
  402f74:	2a00      	cmp	r2, #0
  402f76:	f8c7 e014 	str.w	lr, [r7, #20]
  402f7a:	f8c7 e010 	str.w	lr, [r7, #16]
  402f7e:	f280 809d 	bge.w	4030bc <_malloc_r+0x1d0>
  402f82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402f86:	f080 8161 	bcs.w	40324c <_malloc_r+0x360>
  402f8a:	08db      	lsrs	r3, r3, #3
  402f8c:	f103 0c01 	add.w	ip, r3, #1
  402f90:	1099      	asrs	r1, r3, #2
  402f92:	687a      	ldr	r2, [r7, #4]
  402f94:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  402f98:	f8c4 8008 	str.w	r8, [r4, #8]
  402f9c:	2301      	movs	r3, #1
  402f9e:	408b      	lsls	r3, r1
  402fa0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402fa4:	4313      	orrs	r3, r2
  402fa6:	3908      	subs	r1, #8
  402fa8:	60e1      	str	r1, [r4, #12]
  402faa:	607b      	str	r3, [r7, #4]
  402fac:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  402fb0:	f8c8 400c 	str.w	r4, [r8, #12]
  402fb4:	1082      	asrs	r2, r0, #2
  402fb6:	2401      	movs	r4, #1
  402fb8:	4094      	lsls	r4, r2
  402fba:	429c      	cmp	r4, r3
  402fbc:	f200 808b 	bhi.w	4030d6 <_malloc_r+0x1ea>
  402fc0:	421c      	tst	r4, r3
  402fc2:	d106      	bne.n	402fd2 <_malloc_r+0xe6>
  402fc4:	f020 0003 	bic.w	r0, r0, #3
  402fc8:	0064      	lsls	r4, r4, #1
  402fca:	421c      	tst	r4, r3
  402fcc:	f100 0004 	add.w	r0, r0, #4
  402fd0:	d0fa      	beq.n	402fc8 <_malloc_r+0xdc>
  402fd2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402fd6:	46cc      	mov	ip, r9
  402fd8:	4680      	mov	r8, r0
  402fda:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402fde:	459c      	cmp	ip, r3
  402fe0:	d107      	bne.n	402ff2 <_malloc_r+0x106>
  402fe2:	e16d      	b.n	4032c0 <_malloc_r+0x3d4>
  402fe4:	2a00      	cmp	r2, #0
  402fe6:	f280 817b 	bge.w	4032e0 <_malloc_r+0x3f4>
  402fea:	68db      	ldr	r3, [r3, #12]
  402fec:	459c      	cmp	ip, r3
  402fee:	f000 8167 	beq.w	4032c0 <_malloc_r+0x3d4>
  402ff2:	6859      	ldr	r1, [r3, #4]
  402ff4:	f021 0103 	bic.w	r1, r1, #3
  402ff8:	1b8a      	subs	r2, r1, r6
  402ffa:	2a0f      	cmp	r2, #15
  402ffc:	ddf2      	ble.n	402fe4 <_malloc_r+0xf8>
  402ffe:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403002:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403006:	9300      	str	r3, [sp, #0]
  403008:	199c      	adds	r4, r3, r6
  40300a:	4628      	mov	r0, r5
  40300c:	f046 0601 	orr.w	r6, r6, #1
  403010:	f042 0501 	orr.w	r5, r2, #1
  403014:	605e      	str	r6, [r3, #4]
  403016:	f8c8 c00c 	str.w	ip, [r8, #12]
  40301a:	f8cc 8008 	str.w	r8, [ip, #8]
  40301e:	617c      	str	r4, [r7, #20]
  403020:	613c      	str	r4, [r7, #16]
  403022:	f8c4 e00c 	str.w	lr, [r4, #12]
  403026:	f8c4 e008 	str.w	lr, [r4, #8]
  40302a:	6065      	str	r5, [r4, #4]
  40302c:	505a      	str	r2, [r3, r1]
  40302e:	f000 fb7b 	bl	403728 <__malloc_unlock>
  403032:	9b00      	ldr	r3, [sp, #0]
  403034:	f103 0408 	add.w	r4, r3, #8
  403038:	e01e      	b.n	403078 <_malloc_r+0x18c>
  40303a:	2910      	cmp	r1, #16
  40303c:	d820      	bhi.n	403080 <_malloc_r+0x194>
  40303e:	f000 fb6d 	bl	40371c <__malloc_lock>
  403042:	2610      	movs	r6, #16
  403044:	2318      	movs	r3, #24
  403046:	2002      	movs	r0, #2
  403048:	4f79      	ldr	r7, [pc, #484]	; (403230 <_malloc_r+0x344>)
  40304a:	443b      	add	r3, r7
  40304c:	f1a3 0208 	sub.w	r2, r3, #8
  403050:	685c      	ldr	r4, [r3, #4]
  403052:	4294      	cmp	r4, r2
  403054:	f000 813d 	beq.w	4032d2 <_malloc_r+0x3e6>
  403058:	6863      	ldr	r3, [r4, #4]
  40305a:	68e1      	ldr	r1, [r4, #12]
  40305c:	68a6      	ldr	r6, [r4, #8]
  40305e:	f023 0303 	bic.w	r3, r3, #3
  403062:	4423      	add	r3, r4
  403064:	4628      	mov	r0, r5
  403066:	685a      	ldr	r2, [r3, #4]
  403068:	60f1      	str	r1, [r6, #12]
  40306a:	f042 0201 	orr.w	r2, r2, #1
  40306e:	608e      	str	r6, [r1, #8]
  403070:	605a      	str	r2, [r3, #4]
  403072:	f000 fb59 	bl	403728 <__malloc_unlock>
  403076:	3408      	adds	r4, #8
  403078:	4620      	mov	r0, r4
  40307a:	b003      	add	sp, #12
  40307c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403080:	2400      	movs	r4, #0
  403082:	230c      	movs	r3, #12
  403084:	4620      	mov	r0, r4
  403086:	602b      	str	r3, [r5, #0]
  403088:	b003      	add	sp, #12
  40308a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40308e:	2040      	movs	r0, #64	; 0x40
  403090:	f44f 7300 	mov.w	r3, #512	; 0x200
  403094:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403098:	e74a      	b.n	402f30 <_malloc_r+0x44>
  40309a:	4423      	add	r3, r4
  40309c:	68e1      	ldr	r1, [r4, #12]
  40309e:	685a      	ldr	r2, [r3, #4]
  4030a0:	68a6      	ldr	r6, [r4, #8]
  4030a2:	f042 0201 	orr.w	r2, r2, #1
  4030a6:	60f1      	str	r1, [r6, #12]
  4030a8:	4628      	mov	r0, r5
  4030aa:	608e      	str	r6, [r1, #8]
  4030ac:	605a      	str	r2, [r3, #4]
  4030ae:	f000 fb3b 	bl	403728 <__malloc_unlock>
  4030b2:	3408      	adds	r4, #8
  4030b4:	4620      	mov	r0, r4
  4030b6:	b003      	add	sp, #12
  4030b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030bc:	4423      	add	r3, r4
  4030be:	4628      	mov	r0, r5
  4030c0:	685a      	ldr	r2, [r3, #4]
  4030c2:	f042 0201 	orr.w	r2, r2, #1
  4030c6:	605a      	str	r2, [r3, #4]
  4030c8:	f000 fb2e 	bl	403728 <__malloc_unlock>
  4030cc:	3408      	adds	r4, #8
  4030ce:	4620      	mov	r0, r4
  4030d0:	b003      	add	sp, #12
  4030d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030d6:	68bc      	ldr	r4, [r7, #8]
  4030d8:	6863      	ldr	r3, [r4, #4]
  4030da:	f023 0803 	bic.w	r8, r3, #3
  4030de:	45b0      	cmp	r8, r6
  4030e0:	d304      	bcc.n	4030ec <_malloc_r+0x200>
  4030e2:	eba8 0306 	sub.w	r3, r8, r6
  4030e6:	2b0f      	cmp	r3, #15
  4030e8:	f300 8085 	bgt.w	4031f6 <_malloc_r+0x30a>
  4030ec:	f8df 9158 	ldr.w	r9, [pc, #344]	; 403248 <_malloc_r+0x35c>
  4030f0:	4b50      	ldr	r3, [pc, #320]	; (403234 <_malloc_r+0x348>)
  4030f2:	f8d9 2000 	ldr.w	r2, [r9]
  4030f6:	681b      	ldr	r3, [r3, #0]
  4030f8:	3201      	adds	r2, #1
  4030fa:	4433      	add	r3, r6
  4030fc:	eb04 0a08 	add.w	sl, r4, r8
  403100:	f000 8155 	beq.w	4033ae <_malloc_r+0x4c2>
  403104:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403108:	330f      	adds	r3, #15
  40310a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40310e:	f02b 0b0f 	bic.w	fp, fp, #15
  403112:	4659      	mov	r1, fp
  403114:	4628      	mov	r0, r5
  403116:	f000 fcb3 	bl	403a80 <_sbrk_r>
  40311a:	1c41      	adds	r1, r0, #1
  40311c:	4602      	mov	r2, r0
  40311e:	f000 80fc 	beq.w	40331a <_malloc_r+0x42e>
  403122:	4582      	cmp	sl, r0
  403124:	f200 80f7 	bhi.w	403316 <_malloc_r+0x42a>
  403128:	4b43      	ldr	r3, [pc, #268]	; (403238 <_malloc_r+0x34c>)
  40312a:	6819      	ldr	r1, [r3, #0]
  40312c:	4459      	add	r1, fp
  40312e:	6019      	str	r1, [r3, #0]
  403130:	f000 814d 	beq.w	4033ce <_malloc_r+0x4e2>
  403134:	f8d9 0000 	ldr.w	r0, [r9]
  403138:	3001      	adds	r0, #1
  40313a:	bf1b      	ittet	ne
  40313c:	eba2 0a0a 	subne.w	sl, r2, sl
  403140:	4451      	addne	r1, sl
  403142:	f8c9 2000 	streq.w	r2, [r9]
  403146:	6019      	strne	r1, [r3, #0]
  403148:	f012 0107 	ands.w	r1, r2, #7
  40314c:	f000 8115 	beq.w	40337a <_malloc_r+0x48e>
  403150:	f1c1 0008 	rsb	r0, r1, #8
  403154:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403158:	4402      	add	r2, r0
  40315a:	3108      	adds	r1, #8
  40315c:	eb02 090b 	add.w	r9, r2, fp
  403160:	f3c9 090b 	ubfx	r9, r9, #0, #12
  403164:	eba1 0909 	sub.w	r9, r1, r9
  403168:	4649      	mov	r1, r9
  40316a:	4628      	mov	r0, r5
  40316c:	9301      	str	r3, [sp, #4]
  40316e:	9200      	str	r2, [sp, #0]
  403170:	f000 fc86 	bl	403a80 <_sbrk_r>
  403174:	1c43      	adds	r3, r0, #1
  403176:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40317a:	f000 8143 	beq.w	403404 <_malloc_r+0x518>
  40317e:	1a80      	subs	r0, r0, r2
  403180:	4448      	add	r0, r9
  403182:	f040 0001 	orr.w	r0, r0, #1
  403186:	6819      	ldr	r1, [r3, #0]
  403188:	60ba      	str	r2, [r7, #8]
  40318a:	4449      	add	r1, r9
  40318c:	42bc      	cmp	r4, r7
  40318e:	6050      	str	r0, [r2, #4]
  403190:	6019      	str	r1, [r3, #0]
  403192:	d017      	beq.n	4031c4 <_malloc_r+0x2d8>
  403194:	f1b8 0f0f 	cmp.w	r8, #15
  403198:	f240 80fb 	bls.w	403392 <_malloc_r+0x4a6>
  40319c:	6860      	ldr	r0, [r4, #4]
  40319e:	f1a8 020c 	sub.w	r2, r8, #12
  4031a2:	f022 0207 	bic.w	r2, r2, #7
  4031a6:	eb04 0e02 	add.w	lr, r4, r2
  4031aa:	f000 0001 	and.w	r0, r0, #1
  4031ae:	f04f 0c05 	mov.w	ip, #5
  4031b2:	4310      	orrs	r0, r2
  4031b4:	2a0f      	cmp	r2, #15
  4031b6:	6060      	str	r0, [r4, #4]
  4031b8:	f8ce c004 	str.w	ip, [lr, #4]
  4031bc:	f8ce c008 	str.w	ip, [lr, #8]
  4031c0:	f200 8117 	bhi.w	4033f2 <_malloc_r+0x506>
  4031c4:	4b1d      	ldr	r3, [pc, #116]	; (40323c <_malloc_r+0x350>)
  4031c6:	68bc      	ldr	r4, [r7, #8]
  4031c8:	681a      	ldr	r2, [r3, #0]
  4031ca:	4291      	cmp	r1, r2
  4031cc:	bf88      	it	hi
  4031ce:	6019      	strhi	r1, [r3, #0]
  4031d0:	4b1b      	ldr	r3, [pc, #108]	; (403240 <_malloc_r+0x354>)
  4031d2:	681a      	ldr	r2, [r3, #0]
  4031d4:	4291      	cmp	r1, r2
  4031d6:	6862      	ldr	r2, [r4, #4]
  4031d8:	bf88      	it	hi
  4031da:	6019      	strhi	r1, [r3, #0]
  4031dc:	f022 0203 	bic.w	r2, r2, #3
  4031e0:	4296      	cmp	r6, r2
  4031e2:	eba2 0306 	sub.w	r3, r2, r6
  4031e6:	d801      	bhi.n	4031ec <_malloc_r+0x300>
  4031e8:	2b0f      	cmp	r3, #15
  4031ea:	dc04      	bgt.n	4031f6 <_malloc_r+0x30a>
  4031ec:	4628      	mov	r0, r5
  4031ee:	f000 fa9b 	bl	403728 <__malloc_unlock>
  4031f2:	2400      	movs	r4, #0
  4031f4:	e740      	b.n	403078 <_malloc_r+0x18c>
  4031f6:	19a2      	adds	r2, r4, r6
  4031f8:	f043 0301 	orr.w	r3, r3, #1
  4031fc:	f046 0601 	orr.w	r6, r6, #1
  403200:	6066      	str	r6, [r4, #4]
  403202:	4628      	mov	r0, r5
  403204:	60ba      	str	r2, [r7, #8]
  403206:	6053      	str	r3, [r2, #4]
  403208:	f000 fa8e 	bl	403728 <__malloc_unlock>
  40320c:	3408      	adds	r4, #8
  40320e:	4620      	mov	r0, r4
  403210:	b003      	add	sp, #12
  403212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403216:	2b14      	cmp	r3, #20
  403218:	d971      	bls.n	4032fe <_malloc_r+0x412>
  40321a:	2b54      	cmp	r3, #84	; 0x54
  40321c:	f200 80a3 	bhi.w	403366 <_malloc_r+0x47a>
  403220:	0b33      	lsrs	r3, r6, #12
  403222:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  403226:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40322a:	00c3      	lsls	r3, r0, #3
  40322c:	e680      	b.n	402f30 <_malloc_r+0x44>
  40322e:	bf00      	nop
  403230:	200005d8 	.word	0x200005d8
  403234:	20000ab4 	.word	0x20000ab4
  403238:	20000a84 	.word	0x20000a84
  40323c:	20000aac 	.word	0x20000aac
  403240:	20000ab0 	.word	0x20000ab0
  403244:	200005e0 	.word	0x200005e0
  403248:	200009e0 	.word	0x200009e0
  40324c:	0a5a      	lsrs	r2, r3, #9
  40324e:	2a04      	cmp	r2, #4
  403250:	d95b      	bls.n	40330a <_malloc_r+0x41e>
  403252:	2a14      	cmp	r2, #20
  403254:	f200 80ae 	bhi.w	4033b4 <_malloc_r+0x4c8>
  403258:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40325c:	00c9      	lsls	r1, r1, #3
  40325e:	325b      	adds	r2, #91	; 0x5b
  403260:	eb07 0c01 	add.w	ip, r7, r1
  403264:	5879      	ldr	r1, [r7, r1]
  403266:	f1ac 0c08 	sub.w	ip, ip, #8
  40326a:	458c      	cmp	ip, r1
  40326c:	f000 8088 	beq.w	403380 <_malloc_r+0x494>
  403270:	684a      	ldr	r2, [r1, #4]
  403272:	f022 0203 	bic.w	r2, r2, #3
  403276:	4293      	cmp	r3, r2
  403278:	d273      	bcs.n	403362 <_malloc_r+0x476>
  40327a:	6889      	ldr	r1, [r1, #8]
  40327c:	458c      	cmp	ip, r1
  40327e:	d1f7      	bne.n	403270 <_malloc_r+0x384>
  403280:	f8dc 200c 	ldr.w	r2, [ip, #12]
  403284:	687b      	ldr	r3, [r7, #4]
  403286:	60e2      	str	r2, [r4, #12]
  403288:	f8c4 c008 	str.w	ip, [r4, #8]
  40328c:	6094      	str	r4, [r2, #8]
  40328e:	f8cc 400c 	str.w	r4, [ip, #12]
  403292:	e68f      	b.n	402fb4 <_malloc_r+0xc8>
  403294:	19a1      	adds	r1, r4, r6
  403296:	f046 0c01 	orr.w	ip, r6, #1
  40329a:	f042 0601 	orr.w	r6, r2, #1
  40329e:	f8c4 c004 	str.w	ip, [r4, #4]
  4032a2:	4628      	mov	r0, r5
  4032a4:	6179      	str	r1, [r7, #20]
  4032a6:	6139      	str	r1, [r7, #16]
  4032a8:	f8c1 e00c 	str.w	lr, [r1, #12]
  4032ac:	f8c1 e008 	str.w	lr, [r1, #8]
  4032b0:	604e      	str	r6, [r1, #4]
  4032b2:	50e2      	str	r2, [r4, r3]
  4032b4:	f000 fa38 	bl	403728 <__malloc_unlock>
  4032b8:	3408      	adds	r4, #8
  4032ba:	e6dd      	b.n	403078 <_malloc_r+0x18c>
  4032bc:	687b      	ldr	r3, [r7, #4]
  4032be:	e679      	b.n	402fb4 <_malloc_r+0xc8>
  4032c0:	f108 0801 	add.w	r8, r8, #1
  4032c4:	f018 0f03 	tst.w	r8, #3
  4032c8:	f10c 0c08 	add.w	ip, ip, #8
  4032cc:	f47f ae85 	bne.w	402fda <_malloc_r+0xee>
  4032d0:	e02d      	b.n	40332e <_malloc_r+0x442>
  4032d2:	68dc      	ldr	r4, [r3, #12]
  4032d4:	42a3      	cmp	r3, r4
  4032d6:	bf08      	it	eq
  4032d8:	3002      	addeq	r0, #2
  4032da:	f43f ae3e 	beq.w	402f5a <_malloc_r+0x6e>
  4032de:	e6bb      	b.n	403058 <_malloc_r+0x16c>
  4032e0:	4419      	add	r1, r3
  4032e2:	461c      	mov	r4, r3
  4032e4:	684a      	ldr	r2, [r1, #4]
  4032e6:	68db      	ldr	r3, [r3, #12]
  4032e8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4032ec:	f042 0201 	orr.w	r2, r2, #1
  4032f0:	604a      	str	r2, [r1, #4]
  4032f2:	4628      	mov	r0, r5
  4032f4:	60f3      	str	r3, [r6, #12]
  4032f6:	609e      	str	r6, [r3, #8]
  4032f8:	f000 fa16 	bl	403728 <__malloc_unlock>
  4032fc:	e6bc      	b.n	403078 <_malloc_r+0x18c>
  4032fe:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  403302:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  403306:	00c3      	lsls	r3, r0, #3
  403308:	e612      	b.n	402f30 <_malloc_r+0x44>
  40330a:	099a      	lsrs	r2, r3, #6
  40330c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403310:	00c9      	lsls	r1, r1, #3
  403312:	3238      	adds	r2, #56	; 0x38
  403314:	e7a4      	b.n	403260 <_malloc_r+0x374>
  403316:	42bc      	cmp	r4, r7
  403318:	d054      	beq.n	4033c4 <_malloc_r+0x4d8>
  40331a:	68bc      	ldr	r4, [r7, #8]
  40331c:	6862      	ldr	r2, [r4, #4]
  40331e:	f022 0203 	bic.w	r2, r2, #3
  403322:	e75d      	b.n	4031e0 <_malloc_r+0x2f4>
  403324:	f859 3908 	ldr.w	r3, [r9], #-8
  403328:	4599      	cmp	r9, r3
  40332a:	f040 8086 	bne.w	40343a <_malloc_r+0x54e>
  40332e:	f010 0f03 	tst.w	r0, #3
  403332:	f100 30ff 	add.w	r0, r0, #4294967295
  403336:	d1f5      	bne.n	403324 <_malloc_r+0x438>
  403338:	687b      	ldr	r3, [r7, #4]
  40333a:	ea23 0304 	bic.w	r3, r3, r4
  40333e:	607b      	str	r3, [r7, #4]
  403340:	0064      	lsls	r4, r4, #1
  403342:	429c      	cmp	r4, r3
  403344:	f63f aec7 	bhi.w	4030d6 <_malloc_r+0x1ea>
  403348:	2c00      	cmp	r4, #0
  40334a:	f43f aec4 	beq.w	4030d6 <_malloc_r+0x1ea>
  40334e:	421c      	tst	r4, r3
  403350:	4640      	mov	r0, r8
  403352:	f47f ae3e 	bne.w	402fd2 <_malloc_r+0xe6>
  403356:	0064      	lsls	r4, r4, #1
  403358:	421c      	tst	r4, r3
  40335a:	f100 0004 	add.w	r0, r0, #4
  40335e:	d0fa      	beq.n	403356 <_malloc_r+0x46a>
  403360:	e637      	b.n	402fd2 <_malloc_r+0xe6>
  403362:	468c      	mov	ip, r1
  403364:	e78c      	b.n	403280 <_malloc_r+0x394>
  403366:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40336a:	d815      	bhi.n	403398 <_malloc_r+0x4ac>
  40336c:	0bf3      	lsrs	r3, r6, #15
  40336e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  403372:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  403376:	00c3      	lsls	r3, r0, #3
  403378:	e5da      	b.n	402f30 <_malloc_r+0x44>
  40337a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40337e:	e6ed      	b.n	40315c <_malloc_r+0x270>
  403380:	687b      	ldr	r3, [r7, #4]
  403382:	1092      	asrs	r2, r2, #2
  403384:	2101      	movs	r1, #1
  403386:	fa01 f202 	lsl.w	r2, r1, r2
  40338a:	4313      	orrs	r3, r2
  40338c:	607b      	str	r3, [r7, #4]
  40338e:	4662      	mov	r2, ip
  403390:	e779      	b.n	403286 <_malloc_r+0x39a>
  403392:	2301      	movs	r3, #1
  403394:	6053      	str	r3, [r2, #4]
  403396:	e729      	b.n	4031ec <_malloc_r+0x300>
  403398:	f240 5254 	movw	r2, #1364	; 0x554
  40339c:	4293      	cmp	r3, r2
  40339e:	d822      	bhi.n	4033e6 <_malloc_r+0x4fa>
  4033a0:	0cb3      	lsrs	r3, r6, #18
  4033a2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4033a6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4033aa:	00c3      	lsls	r3, r0, #3
  4033ac:	e5c0      	b.n	402f30 <_malloc_r+0x44>
  4033ae:	f103 0b10 	add.w	fp, r3, #16
  4033b2:	e6ae      	b.n	403112 <_malloc_r+0x226>
  4033b4:	2a54      	cmp	r2, #84	; 0x54
  4033b6:	d829      	bhi.n	40340c <_malloc_r+0x520>
  4033b8:	0b1a      	lsrs	r2, r3, #12
  4033ba:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4033be:	00c9      	lsls	r1, r1, #3
  4033c0:	326e      	adds	r2, #110	; 0x6e
  4033c2:	e74d      	b.n	403260 <_malloc_r+0x374>
  4033c4:	4b20      	ldr	r3, [pc, #128]	; (403448 <_malloc_r+0x55c>)
  4033c6:	6819      	ldr	r1, [r3, #0]
  4033c8:	4459      	add	r1, fp
  4033ca:	6019      	str	r1, [r3, #0]
  4033cc:	e6b2      	b.n	403134 <_malloc_r+0x248>
  4033ce:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4033d2:	2800      	cmp	r0, #0
  4033d4:	f47f aeae 	bne.w	403134 <_malloc_r+0x248>
  4033d8:	eb08 030b 	add.w	r3, r8, fp
  4033dc:	68ba      	ldr	r2, [r7, #8]
  4033de:	f043 0301 	orr.w	r3, r3, #1
  4033e2:	6053      	str	r3, [r2, #4]
  4033e4:	e6ee      	b.n	4031c4 <_malloc_r+0x2d8>
  4033e6:	207f      	movs	r0, #127	; 0x7f
  4033e8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4033ec:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4033f0:	e59e      	b.n	402f30 <_malloc_r+0x44>
  4033f2:	f104 0108 	add.w	r1, r4, #8
  4033f6:	4628      	mov	r0, r5
  4033f8:	9300      	str	r3, [sp, #0]
  4033fa:	f7ff fa63 	bl	4028c4 <_free_r>
  4033fe:	9b00      	ldr	r3, [sp, #0]
  403400:	6819      	ldr	r1, [r3, #0]
  403402:	e6df      	b.n	4031c4 <_malloc_r+0x2d8>
  403404:	2001      	movs	r0, #1
  403406:	f04f 0900 	mov.w	r9, #0
  40340a:	e6bc      	b.n	403186 <_malloc_r+0x29a>
  40340c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403410:	d805      	bhi.n	40341e <_malloc_r+0x532>
  403412:	0bda      	lsrs	r2, r3, #15
  403414:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403418:	00c9      	lsls	r1, r1, #3
  40341a:	3277      	adds	r2, #119	; 0x77
  40341c:	e720      	b.n	403260 <_malloc_r+0x374>
  40341e:	f240 5154 	movw	r1, #1364	; 0x554
  403422:	428a      	cmp	r2, r1
  403424:	d805      	bhi.n	403432 <_malloc_r+0x546>
  403426:	0c9a      	lsrs	r2, r3, #18
  403428:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40342c:	00c9      	lsls	r1, r1, #3
  40342e:	327c      	adds	r2, #124	; 0x7c
  403430:	e716      	b.n	403260 <_malloc_r+0x374>
  403432:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  403436:	227e      	movs	r2, #126	; 0x7e
  403438:	e712      	b.n	403260 <_malloc_r+0x374>
  40343a:	687b      	ldr	r3, [r7, #4]
  40343c:	e780      	b.n	403340 <_malloc_r+0x454>
  40343e:	08f0      	lsrs	r0, r6, #3
  403440:	f106 0308 	add.w	r3, r6, #8
  403444:	e600      	b.n	403048 <_malloc_r+0x15c>
  403446:	bf00      	nop
  403448:	20000a84 	.word	0x20000a84

0040344c <__ascii_mbtowc>:
  40344c:	b082      	sub	sp, #8
  40344e:	b149      	cbz	r1, 403464 <__ascii_mbtowc+0x18>
  403450:	b15a      	cbz	r2, 40346a <__ascii_mbtowc+0x1e>
  403452:	b16b      	cbz	r3, 403470 <__ascii_mbtowc+0x24>
  403454:	7813      	ldrb	r3, [r2, #0]
  403456:	600b      	str	r3, [r1, #0]
  403458:	7812      	ldrb	r2, [r2, #0]
  40345a:	1c10      	adds	r0, r2, #0
  40345c:	bf18      	it	ne
  40345e:	2001      	movne	r0, #1
  403460:	b002      	add	sp, #8
  403462:	4770      	bx	lr
  403464:	a901      	add	r1, sp, #4
  403466:	2a00      	cmp	r2, #0
  403468:	d1f3      	bne.n	403452 <__ascii_mbtowc+0x6>
  40346a:	4610      	mov	r0, r2
  40346c:	b002      	add	sp, #8
  40346e:	4770      	bx	lr
  403470:	f06f 0001 	mvn.w	r0, #1
  403474:	e7f4      	b.n	403460 <__ascii_mbtowc+0x14>
  403476:	bf00      	nop
	...

00403480 <memchr>:
  403480:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403484:	2a10      	cmp	r2, #16
  403486:	db2b      	blt.n	4034e0 <memchr+0x60>
  403488:	f010 0f07 	tst.w	r0, #7
  40348c:	d008      	beq.n	4034a0 <memchr+0x20>
  40348e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403492:	3a01      	subs	r2, #1
  403494:	428b      	cmp	r3, r1
  403496:	d02d      	beq.n	4034f4 <memchr+0x74>
  403498:	f010 0f07 	tst.w	r0, #7
  40349c:	b342      	cbz	r2, 4034f0 <memchr+0x70>
  40349e:	d1f6      	bne.n	40348e <memchr+0xe>
  4034a0:	b4f0      	push	{r4, r5, r6, r7}
  4034a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4034a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4034aa:	f022 0407 	bic.w	r4, r2, #7
  4034ae:	f07f 0700 	mvns.w	r7, #0
  4034b2:	2300      	movs	r3, #0
  4034b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4034b8:	3c08      	subs	r4, #8
  4034ba:	ea85 0501 	eor.w	r5, r5, r1
  4034be:	ea86 0601 	eor.w	r6, r6, r1
  4034c2:	fa85 f547 	uadd8	r5, r5, r7
  4034c6:	faa3 f587 	sel	r5, r3, r7
  4034ca:	fa86 f647 	uadd8	r6, r6, r7
  4034ce:	faa5 f687 	sel	r6, r5, r7
  4034d2:	b98e      	cbnz	r6, 4034f8 <memchr+0x78>
  4034d4:	d1ee      	bne.n	4034b4 <memchr+0x34>
  4034d6:	bcf0      	pop	{r4, r5, r6, r7}
  4034d8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4034dc:	f002 0207 	and.w	r2, r2, #7
  4034e0:	b132      	cbz	r2, 4034f0 <memchr+0x70>
  4034e2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4034e6:	3a01      	subs	r2, #1
  4034e8:	ea83 0301 	eor.w	r3, r3, r1
  4034ec:	b113      	cbz	r3, 4034f4 <memchr+0x74>
  4034ee:	d1f8      	bne.n	4034e2 <memchr+0x62>
  4034f0:	2000      	movs	r0, #0
  4034f2:	4770      	bx	lr
  4034f4:	3801      	subs	r0, #1
  4034f6:	4770      	bx	lr
  4034f8:	2d00      	cmp	r5, #0
  4034fa:	bf06      	itte	eq
  4034fc:	4635      	moveq	r5, r6
  4034fe:	3803      	subeq	r0, #3
  403500:	3807      	subne	r0, #7
  403502:	f015 0f01 	tst.w	r5, #1
  403506:	d107      	bne.n	403518 <memchr+0x98>
  403508:	3001      	adds	r0, #1
  40350a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40350e:	bf02      	ittt	eq
  403510:	3001      	addeq	r0, #1
  403512:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  403516:	3001      	addeq	r0, #1
  403518:	bcf0      	pop	{r4, r5, r6, r7}
  40351a:	3801      	subs	r0, #1
  40351c:	4770      	bx	lr
  40351e:	bf00      	nop

00403520 <memcpy>:
  403520:	4684      	mov	ip, r0
  403522:	ea41 0300 	orr.w	r3, r1, r0
  403526:	f013 0303 	ands.w	r3, r3, #3
  40352a:	d16d      	bne.n	403608 <memcpy+0xe8>
  40352c:	3a40      	subs	r2, #64	; 0x40
  40352e:	d341      	bcc.n	4035b4 <memcpy+0x94>
  403530:	f851 3b04 	ldr.w	r3, [r1], #4
  403534:	f840 3b04 	str.w	r3, [r0], #4
  403538:	f851 3b04 	ldr.w	r3, [r1], #4
  40353c:	f840 3b04 	str.w	r3, [r0], #4
  403540:	f851 3b04 	ldr.w	r3, [r1], #4
  403544:	f840 3b04 	str.w	r3, [r0], #4
  403548:	f851 3b04 	ldr.w	r3, [r1], #4
  40354c:	f840 3b04 	str.w	r3, [r0], #4
  403550:	f851 3b04 	ldr.w	r3, [r1], #4
  403554:	f840 3b04 	str.w	r3, [r0], #4
  403558:	f851 3b04 	ldr.w	r3, [r1], #4
  40355c:	f840 3b04 	str.w	r3, [r0], #4
  403560:	f851 3b04 	ldr.w	r3, [r1], #4
  403564:	f840 3b04 	str.w	r3, [r0], #4
  403568:	f851 3b04 	ldr.w	r3, [r1], #4
  40356c:	f840 3b04 	str.w	r3, [r0], #4
  403570:	f851 3b04 	ldr.w	r3, [r1], #4
  403574:	f840 3b04 	str.w	r3, [r0], #4
  403578:	f851 3b04 	ldr.w	r3, [r1], #4
  40357c:	f840 3b04 	str.w	r3, [r0], #4
  403580:	f851 3b04 	ldr.w	r3, [r1], #4
  403584:	f840 3b04 	str.w	r3, [r0], #4
  403588:	f851 3b04 	ldr.w	r3, [r1], #4
  40358c:	f840 3b04 	str.w	r3, [r0], #4
  403590:	f851 3b04 	ldr.w	r3, [r1], #4
  403594:	f840 3b04 	str.w	r3, [r0], #4
  403598:	f851 3b04 	ldr.w	r3, [r1], #4
  40359c:	f840 3b04 	str.w	r3, [r0], #4
  4035a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4035a4:	f840 3b04 	str.w	r3, [r0], #4
  4035a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4035ac:	f840 3b04 	str.w	r3, [r0], #4
  4035b0:	3a40      	subs	r2, #64	; 0x40
  4035b2:	d2bd      	bcs.n	403530 <memcpy+0x10>
  4035b4:	3230      	adds	r2, #48	; 0x30
  4035b6:	d311      	bcc.n	4035dc <memcpy+0xbc>
  4035b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4035bc:	f840 3b04 	str.w	r3, [r0], #4
  4035c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4035c4:	f840 3b04 	str.w	r3, [r0], #4
  4035c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4035cc:	f840 3b04 	str.w	r3, [r0], #4
  4035d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4035d4:	f840 3b04 	str.w	r3, [r0], #4
  4035d8:	3a10      	subs	r2, #16
  4035da:	d2ed      	bcs.n	4035b8 <memcpy+0x98>
  4035dc:	320c      	adds	r2, #12
  4035de:	d305      	bcc.n	4035ec <memcpy+0xcc>
  4035e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4035e4:	f840 3b04 	str.w	r3, [r0], #4
  4035e8:	3a04      	subs	r2, #4
  4035ea:	d2f9      	bcs.n	4035e0 <memcpy+0xc0>
  4035ec:	3204      	adds	r2, #4
  4035ee:	d008      	beq.n	403602 <memcpy+0xe2>
  4035f0:	07d2      	lsls	r2, r2, #31
  4035f2:	bf1c      	itt	ne
  4035f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4035f8:	f800 3b01 	strbne.w	r3, [r0], #1
  4035fc:	d301      	bcc.n	403602 <memcpy+0xe2>
  4035fe:	880b      	ldrh	r3, [r1, #0]
  403600:	8003      	strh	r3, [r0, #0]
  403602:	4660      	mov	r0, ip
  403604:	4770      	bx	lr
  403606:	bf00      	nop
  403608:	2a08      	cmp	r2, #8
  40360a:	d313      	bcc.n	403634 <memcpy+0x114>
  40360c:	078b      	lsls	r3, r1, #30
  40360e:	d08d      	beq.n	40352c <memcpy+0xc>
  403610:	f010 0303 	ands.w	r3, r0, #3
  403614:	d08a      	beq.n	40352c <memcpy+0xc>
  403616:	f1c3 0304 	rsb	r3, r3, #4
  40361a:	1ad2      	subs	r2, r2, r3
  40361c:	07db      	lsls	r3, r3, #31
  40361e:	bf1c      	itt	ne
  403620:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403624:	f800 3b01 	strbne.w	r3, [r0], #1
  403628:	d380      	bcc.n	40352c <memcpy+0xc>
  40362a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40362e:	f820 3b02 	strh.w	r3, [r0], #2
  403632:	e77b      	b.n	40352c <memcpy+0xc>
  403634:	3a04      	subs	r2, #4
  403636:	d3d9      	bcc.n	4035ec <memcpy+0xcc>
  403638:	3a01      	subs	r2, #1
  40363a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40363e:	f800 3b01 	strb.w	r3, [r0], #1
  403642:	d2f9      	bcs.n	403638 <memcpy+0x118>
  403644:	780b      	ldrb	r3, [r1, #0]
  403646:	7003      	strb	r3, [r0, #0]
  403648:	784b      	ldrb	r3, [r1, #1]
  40364a:	7043      	strb	r3, [r0, #1]
  40364c:	788b      	ldrb	r3, [r1, #2]
  40364e:	7083      	strb	r3, [r0, #2]
  403650:	4660      	mov	r0, ip
  403652:	4770      	bx	lr

00403654 <memmove>:
  403654:	4288      	cmp	r0, r1
  403656:	b5f0      	push	{r4, r5, r6, r7, lr}
  403658:	d90d      	bls.n	403676 <memmove+0x22>
  40365a:	188b      	adds	r3, r1, r2
  40365c:	4298      	cmp	r0, r3
  40365e:	d20a      	bcs.n	403676 <memmove+0x22>
  403660:	1884      	adds	r4, r0, r2
  403662:	2a00      	cmp	r2, #0
  403664:	d051      	beq.n	40370a <memmove+0xb6>
  403666:	4622      	mov	r2, r4
  403668:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40366c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403670:	4299      	cmp	r1, r3
  403672:	d1f9      	bne.n	403668 <memmove+0x14>
  403674:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403676:	2a0f      	cmp	r2, #15
  403678:	d948      	bls.n	40370c <memmove+0xb8>
  40367a:	ea41 0300 	orr.w	r3, r1, r0
  40367e:	079b      	lsls	r3, r3, #30
  403680:	d146      	bne.n	403710 <memmove+0xbc>
  403682:	f100 0410 	add.w	r4, r0, #16
  403686:	f101 0310 	add.w	r3, r1, #16
  40368a:	4615      	mov	r5, r2
  40368c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403690:	f844 6c10 	str.w	r6, [r4, #-16]
  403694:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403698:	f844 6c0c 	str.w	r6, [r4, #-12]
  40369c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4036a0:	f844 6c08 	str.w	r6, [r4, #-8]
  4036a4:	3d10      	subs	r5, #16
  4036a6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4036aa:	f844 6c04 	str.w	r6, [r4, #-4]
  4036ae:	2d0f      	cmp	r5, #15
  4036b0:	f103 0310 	add.w	r3, r3, #16
  4036b4:	f104 0410 	add.w	r4, r4, #16
  4036b8:	d8e8      	bhi.n	40368c <memmove+0x38>
  4036ba:	f1a2 0310 	sub.w	r3, r2, #16
  4036be:	f023 030f 	bic.w	r3, r3, #15
  4036c2:	f002 0e0f 	and.w	lr, r2, #15
  4036c6:	3310      	adds	r3, #16
  4036c8:	f1be 0f03 	cmp.w	lr, #3
  4036cc:	4419      	add	r1, r3
  4036ce:	4403      	add	r3, r0
  4036d0:	d921      	bls.n	403716 <memmove+0xc2>
  4036d2:	1f1e      	subs	r6, r3, #4
  4036d4:	460d      	mov	r5, r1
  4036d6:	4674      	mov	r4, lr
  4036d8:	3c04      	subs	r4, #4
  4036da:	f855 7b04 	ldr.w	r7, [r5], #4
  4036de:	f846 7f04 	str.w	r7, [r6, #4]!
  4036e2:	2c03      	cmp	r4, #3
  4036e4:	d8f8      	bhi.n	4036d8 <memmove+0x84>
  4036e6:	f1ae 0404 	sub.w	r4, lr, #4
  4036ea:	f024 0403 	bic.w	r4, r4, #3
  4036ee:	3404      	adds	r4, #4
  4036f0:	4421      	add	r1, r4
  4036f2:	4423      	add	r3, r4
  4036f4:	f002 0203 	and.w	r2, r2, #3
  4036f8:	b162      	cbz	r2, 403714 <memmove+0xc0>
  4036fa:	3b01      	subs	r3, #1
  4036fc:	440a      	add	r2, r1
  4036fe:	f811 4b01 	ldrb.w	r4, [r1], #1
  403702:	f803 4f01 	strb.w	r4, [r3, #1]!
  403706:	428a      	cmp	r2, r1
  403708:	d1f9      	bne.n	4036fe <memmove+0xaa>
  40370a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40370c:	4603      	mov	r3, r0
  40370e:	e7f3      	b.n	4036f8 <memmove+0xa4>
  403710:	4603      	mov	r3, r0
  403712:	e7f2      	b.n	4036fa <memmove+0xa6>
  403714:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403716:	4672      	mov	r2, lr
  403718:	e7ee      	b.n	4036f8 <memmove+0xa4>
  40371a:	bf00      	nop

0040371c <__malloc_lock>:
  40371c:	4801      	ldr	r0, [pc, #4]	; (403724 <__malloc_lock+0x8>)
  40371e:	f7ff bb61 	b.w	402de4 <__retarget_lock_acquire_recursive>
  403722:	bf00      	nop
  403724:	20002ae0 	.word	0x20002ae0

00403728 <__malloc_unlock>:
  403728:	4801      	ldr	r0, [pc, #4]	; (403730 <__malloc_unlock+0x8>)
  40372a:	f7ff bb5d 	b.w	402de8 <__retarget_lock_release_recursive>
  40372e:	bf00      	nop
  403730:	20002ae0 	.word	0x20002ae0

00403734 <_realloc_r>:
  403734:	2900      	cmp	r1, #0
  403736:	f000 8095 	beq.w	403864 <_realloc_r+0x130>
  40373a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40373e:	460d      	mov	r5, r1
  403740:	4616      	mov	r6, r2
  403742:	b083      	sub	sp, #12
  403744:	4680      	mov	r8, r0
  403746:	f106 070b 	add.w	r7, r6, #11
  40374a:	f7ff ffe7 	bl	40371c <__malloc_lock>
  40374e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  403752:	2f16      	cmp	r7, #22
  403754:	f02e 0403 	bic.w	r4, lr, #3
  403758:	f1a5 0908 	sub.w	r9, r5, #8
  40375c:	d83c      	bhi.n	4037d8 <_realloc_r+0xa4>
  40375e:	2210      	movs	r2, #16
  403760:	4617      	mov	r7, r2
  403762:	42be      	cmp	r6, r7
  403764:	d83d      	bhi.n	4037e2 <_realloc_r+0xae>
  403766:	4294      	cmp	r4, r2
  403768:	da43      	bge.n	4037f2 <_realloc_r+0xbe>
  40376a:	4bc4      	ldr	r3, [pc, #784]	; (403a7c <_realloc_r+0x348>)
  40376c:	6899      	ldr	r1, [r3, #8]
  40376e:	eb09 0004 	add.w	r0, r9, r4
  403772:	4288      	cmp	r0, r1
  403774:	f000 80b4 	beq.w	4038e0 <_realloc_r+0x1ac>
  403778:	6843      	ldr	r3, [r0, #4]
  40377a:	f023 0101 	bic.w	r1, r3, #1
  40377e:	4401      	add	r1, r0
  403780:	6849      	ldr	r1, [r1, #4]
  403782:	07c9      	lsls	r1, r1, #31
  403784:	d54c      	bpl.n	403820 <_realloc_r+0xec>
  403786:	f01e 0f01 	tst.w	lr, #1
  40378a:	f000 809b 	beq.w	4038c4 <_realloc_r+0x190>
  40378e:	4631      	mov	r1, r6
  403790:	4640      	mov	r0, r8
  403792:	f7ff fbab 	bl	402eec <_malloc_r>
  403796:	4606      	mov	r6, r0
  403798:	2800      	cmp	r0, #0
  40379a:	d03a      	beq.n	403812 <_realloc_r+0xde>
  40379c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4037a0:	f023 0301 	bic.w	r3, r3, #1
  4037a4:	444b      	add	r3, r9
  4037a6:	f1a0 0208 	sub.w	r2, r0, #8
  4037aa:	429a      	cmp	r2, r3
  4037ac:	f000 8121 	beq.w	4039f2 <_realloc_r+0x2be>
  4037b0:	1f22      	subs	r2, r4, #4
  4037b2:	2a24      	cmp	r2, #36	; 0x24
  4037b4:	f200 8107 	bhi.w	4039c6 <_realloc_r+0x292>
  4037b8:	2a13      	cmp	r2, #19
  4037ba:	f200 80db 	bhi.w	403974 <_realloc_r+0x240>
  4037be:	4603      	mov	r3, r0
  4037c0:	462a      	mov	r2, r5
  4037c2:	6811      	ldr	r1, [r2, #0]
  4037c4:	6019      	str	r1, [r3, #0]
  4037c6:	6851      	ldr	r1, [r2, #4]
  4037c8:	6059      	str	r1, [r3, #4]
  4037ca:	6892      	ldr	r2, [r2, #8]
  4037cc:	609a      	str	r2, [r3, #8]
  4037ce:	4629      	mov	r1, r5
  4037d0:	4640      	mov	r0, r8
  4037d2:	f7ff f877 	bl	4028c4 <_free_r>
  4037d6:	e01c      	b.n	403812 <_realloc_r+0xde>
  4037d8:	f027 0707 	bic.w	r7, r7, #7
  4037dc:	2f00      	cmp	r7, #0
  4037de:	463a      	mov	r2, r7
  4037e0:	dabf      	bge.n	403762 <_realloc_r+0x2e>
  4037e2:	2600      	movs	r6, #0
  4037e4:	230c      	movs	r3, #12
  4037e6:	4630      	mov	r0, r6
  4037e8:	f8c8 3000 	str.w	r3, [r8]
  4037ec:	b003      	add	sp, #12
  4037ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4037f2:	462e      	mov	r6, r5
  4037f4:	1be3      	subs	r3, r4, r7
  4037f6:	2b0f      	cmp	r3, #15
  4037f8:	d81e      	bhi.n	403838 <_realloc_r+0x104>
  4037fa:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4037fe:	f003 0301 	and.w	r3, r3, #1
  403802:	4323      	orrs	r3, r4
  403804:	444c      	add	r4, r9
  403806:	f8c9 3004 	str.w	r3, [r9, #4]
  40380a:	6863      	ldr	r3, [r4, #4]
  40380c:	f043 0301 	orr.w	r3, r3, #1
  403810:	6063      	str	r3, [r4, #4]
  403812:	4640      	mov	r0, r8
  403814:	f7ff ff88 	bl	403728 <__malloc_unlock>
  403818:	4630      	mov	r0, r6
  40381a:	b003      	add	sp, #12
  40381c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403820:	f023 0303 	bic.w	r3, r3, #3
  403824:	18e1      	adds	r1, r4, r3
  403826:	4291      	cmp	r1, r2
  403828:	db1f      	blt.n	40386a <_realloc_r+0x136>
  40382a:	68c3      	ldr	r3, [r0, #12]
  40382c:	6882      	ldr	r2, [r0, #8]
  40382e:	462e      	mov	r6, r5
  403830:	60d3      	str	r3, [r2, #12]
  403832:	460c      	mov	r4, r1
  403834:	609a      	str	r2, [r3, #8]
  403836:	e7dd      	b.n	4037f4 <_realloc_r+0xc0>
  403838:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40383c:	eb09 0107 	add.w	r1, r9, r7
  403840:	f002 0201 	and.w	r2, r2, #1
  403844:	444c      	add	r4, r9
  403846:	f043 0301 	orr.w	r3, r3, #1
  40384a:	4317      	orrs	r7, r2
  40384c:	f8c9 7004 	str.w	r7, [r9, #4]
  403850:	604b      	str	r3, [r1, #4]
  403852:	6863      	ldr	r3, [r4, #4]
  403854:	f043 0301 	orr.w	r3, r3, #1
  403858:	3108      	adds	r1, #8
  40385a:	6063      	str	r3, [r4, #4]
  40385c:	4640      	mov	r0, r8
  40385e:	f7ff f831 	bl	4028c4 <_free_r>
  403862:	e7d6      	b.n	403812 <_realloc_r+0xde>
  403864:	4611      	mov	r1, r2
  403866:	f7ff bb41 	b.w	402eec <_malloc_r>
  40386a:	f01e 0f01 	tst.w	lr, #1
  40386e:	d18e      	bne.n	40378e <_realloc_r+0x5a>
  403870:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403874:	eba9 0a01 	sub.w	sl, r9, r1
  403878:	f8da 1004 	ldr.w	r1, [sl, #4]
  40387c:	f021 0103 	bic.w	r1, r1, #3
  403880:	440b      	add	r3, r1
  403882:	4423      	add	r3, r4
  403884:	4293      	cmp	r3, r2
  403886:	db25      	blt.n	4038d4 <_realloc_r+0x1a0>
  403888:	68c2      	ldr	r2, [r0, #12]
  40388a:	6881      	ldr	r1, [r0, #8]
  40388c:	4656      	mov	r6, sl
  40388e:	60ca      	str	r2, [r1, #12]
  403890:	6091      	str	r1, [r2, #8]
  403892:	f8da 100c 	ldr.w	r1, [sl, #12]
  403896:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40389a:	1f22      	subs	r2, r4, #4
  40389c:	2a24      	cmp	r2, #36	; 0x24
  40389e:	60c1      	str	r1, [r0, #12]
  4038a0:	6088      	str	r0, [r1, #8]
  4038a2:	f200 8094 	bhi.w	4039ce <_realloc_r+0x29a>
  4038a6:	2a13      	cmp	r2, #19
  4038a8:	d96f      	bls.n	40398a <_realloc_r+0x256>
  4038aa:	6829      	ldr	r1, [r5, #0]
  4038ac:	f8ca 1008 	str.w	r1, [sl, #8]
  4038b0:	6869      	ldr	r1, [r5, #4]
  4038b2:	f8ca 100c 	str.w	r1, [sl, #12]
  4038b6:	2a1b      	cmp	r2, #27
  4038b8:	f200 80a2 	bhi.w	403a00 <_realloc_r+0x2cc>
  4038bc:	3508      	adds	r5, #8
  4038be:	f10a 0210 	add.w	r2, sl, #16
  4038c2:	e063      	b.n	40398c <_realloc_r+0x258>
  4038c4:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4038c8:	eba9 0a03 	sub.w	sl, r9, r3
  4038cc:	f8da 1004 	ldr.w	r1, [sl, #4]
  4038d0:	f021 0103 	bic.w	r1, r1, #3
  4038d4:	1863      	adds	r3, r4, r1
  4038d6:	4293      	cmp	r3, r2
  4038d8:	f6ff af59 	blt.w	40378e <_realloc_r+0x5a>
  4038dc:	4656      	mov	r6, sl
  4038de:	e7d8      	b.n	403892 <_realloc_r+0x15e>
  4038e0:	6841      	ldr	r1, [r0, #4]
  4038e2:	f021 0b03 	bic.w	fp, r1, #3
  4038e6:	44a3      	add	fp, r4
  4038e8:	f107 0010 	add.w	r0, r7, #16
  4038ec:	4583      	cmp	fp, r0
  4038ee:	da56      	bge.n	40399e <_realloc_r+0x26a>
  4038f0:	f01e 0f01 	tst.w	lr, #1
  4038f4:	f47f af4b 	bne.w	40378e <_realloc_r+0x5a>
  4038f8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4038fc:	eba9 0a01 	sub.w	sl, r9, r1
  403900:	f8da 1004 	ldr.w	r1, [sl, #4]
  403904:	f021 0103 	bic.w	r1, r1, #3
  403908:	448b      	add	fp, r1
  40390a:	4558      	cmp	r0, fp
  40390c:	dce2      	bgt.n	4038d4 <_realloc_r+0x1a0>
  40390e:	4656      	mov	r6, sl
  403910:	f8da 100c 	ldr.w	r1, [sl, #12]
  403914:	f856 0f08 	ldr.w	r0, [r6, #8]!
  403918:	1f22      	subs	r2, r4, #4
  40391a:	2a24      	cmp	r2, #36	; 0x24
  40391c:	60c1      	str	r1, [r0, #12]
  40391e:	6088      	str	r0, [r1, #8]
  403920:	f200 808f 	bhi.w	403a42 <_realloc_r+0x30e>
  403924:	2a13      	cmp	r2, #19
  403926:	f240 808a 	bls.w	403a3e <_realloc_r+0x30a>
  40392a:	6829      	ldr	r1, [r5, #0]
  40392c:	f8ca 1008 	str.w	r1, [sl, #8]
  403930:	6869      	ldr	r1, [r5, #4]
  403932:	f8ca 100c 	str.w	r1, [sl, #12]
  403936:	2a1b      	cmp	r2, #27
  403938:	f200 808a 	bhi.w	403a50 <_realloc_r+0x31c>
  40393c:	3508      	adds	r5, #8
  40393e:	f10a 0210 	add.w	r2, sl, #16
  403942:	6829      	ldr	r1, [r5, #0]
  403944:	6011      	str	r1, [r2, #0]
  403946:	6869      	ldr	r1, [r5, #4]
  403948:	6051      	str	r1, [r2, #4]
  40394a:	68a9      	ldr	r1, [r5, #8]
  40394c:	6091      	str	r1, [r2, #8]
  40394e:	eb0a 0107 	add.w	r1, sl, r7
  403952:	ebab 0207 	sub.w	r2, fp, r7
  403956:	f042 0201 	orr.w	r2, r2, #1
  40395a:	6099      	str	r1, [r3, #8]
  40395c:	604a      	str	r2, [r1, #4]
  40395e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403962:	f003 0301 	and.w	r3, r3, #1
  403966:	431f      	orrs	r7, r3
  403968:	4640      	mov	r0, r8
  40396a:	f8ca 7004 	str.w	r7, [sl, #4]
  40396e:	f7ff fedb 	bl	403728 <__malloc_unlock>
  403972:	e751      	b.n	403818 <_realloc_r+0xe4>
  403974:	682b      	ldr	r3, [r5, #0]
  403976:	6003      	str	r3, [r0, #0]
  403978:	686b      	ldr	r3, [r5, #4]
  40397a:	6043      	str	r3, [r0, #4]
  40397c:	2a1b      	cmp	r2, #27
  40397e:	d82d      	bhi.n	4039dc <_realloc_r+0x2a8>
  403980:	f100 0308 	add.w	r3, r0, #8
  403984:	f105 0208 	add.w	r2, r5, #8
  403988:	e71b      	b.n	4037c2 <_realloc_r+0x8e>
  40398a:	4632      	mov	r2, r6
  40398c:	6829      	ldr	r1, [r5, #0]
  40398e:	6011      	str	r1, [r2, #0]
  403990:	6869      	ldr	r1, [r5, #4]
  403992:	6051      	str	r1, [r2, #4]
  403994:	68a9      	ldr	r1, [r5, #8]
  403996:	6091      	str	r1, [r2, #8]
  403998:	461c      	mov	r4, r3
  40399a:	46d1      	mov	r9, sl
  40399c:	e72a      	b.n	4037f4 <_realloc_r+0xc0>
  40399e:	eb09 0107 	add.w	r1, r9, r7
  4039a2:	ebab 0b07 	sub.w	fp, fp, r7
  4039a6:	f04b 0201 	orr.w	r2, fp, #1
  4039aa:	6099      	str	r1, [r3, #8]
  4039ac:	604a      	str	r2, [r1, #4]
  4039ae:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4039b2:	f003 0301 	and.w	r3, r3, #1
  4039b6:	431f      	orrs	r7, r3
  4039b8:	4640      	mov	r0, r8
  4039ba:	f845 7c04 	str.w	r7, [r5, #-4]
  4039be:	f7ff feb3 	bl	403728 <__malloc_unlock>
  4039c2:	462e      	mov	r6, r5
  4039c4:	e728      	b.n	403818 <_realloc_r+0xe4>
  4039c6:	4629      	mov	r1, r5
  4039c8:	f7ff fe44 	bl	403654 <memmove>
  4039cc:	e6ff      	b.n	4037ce <_realloc_r+0x9a>
  4039ce:	4629      	mov	r1, r5
  4039d0:	4630      	mov	r0, r6
  4039d2:	461c      	mov	r4, r3
  4039d4:	46d1      	mov	r9, sl
  4039d6:	f7ff fe3d 	bl	403654 <memmove>
  4039da:	e70b      	b.n	4037f4 <_realloc_r+0xc0>
  4039dc:	68ab      	ldr	r3, [r5, #8]
  4039de:	6083      	str	r3, [r0, #8]
  4039e0:	68eb      	ldr	r3, [r5, #12]
  4039e2:	60c3      	str	r3, [r0, #12]
  4039e4:	2a24      	cmp	r2, #36	; 0x24
  4039e6:	d017      	beq.n	403a18 <_realloc_r+0x2e4>
  4039e8:	f100 0310 	add.w	r3, r0, #16
  4039ec:	f105 0210 	add.w	r2, r5, #16
  4039f0:	e6e7      	b.n	4037c2 <_realloc_r+0x8e>
  4039f2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4039f6:	f023 0303 	bic.w	r3, r3, #3
  4039fa:	441c      	add	r4, r3
  4039fc:	462e      	mov	r6, r5
  4039fe:	e6f9      	b.n	4037f4 <_realloc_r+0xc0>
  403a00:	68a9      	ldr	r1, [r5, #8]
  403a02:	f8ca 1010 	str.w	r1, [sl, #16]
  403a06:	68e9      	ldr	r1, [r5, #12]
  403a08:	f8ca 1014 	str.w	r1, [sl, #20]
  403a0c:	2a24      	cmp	r2, #36	; 0x24
  403a0e:	d00c      	beq.n	403a2a <_realloc_r+0x2f6>
  403a10:	3510      	adds	r5, #16
  403a12:	f10a 0218 	add.w	r2, sl, #24
  403a16:	e7b9      	b.n	40398c <_realloc_r+0x258>
  403a18:	692b      	ldr	r3, [r5, #16]
  403a1a:	6103      	str	r3, [r0, #16]
  403a1c:	696b      	ldr	r3, [r5, #20]
  403a1e:	6143      	str	r3, [r0, #20]
  403a20:	f105 0218 	add.w	r2, r5, #24
  403a24:	f100 0318 	add.w	r3, r0, #24
  403a28:	e6cb      	b.n	4037c2 <_realloc_r+0x8e>
  403a2a:	692a      	ldr	r2, [r5, #16]
  403a2c:	f8ca 2018 	str.w	r2, [sl, #24]
  403a30:	696a      	ldr	r2, [r5, #20]
  403a32:	f8ca 201c 	str.w	r2, [sl, #28]
  403a36:	3518      	adds	r5, #24
  403a38:	f10a 0220 	add.w	r2, sl, #32
  403a3c:	e7a6      	b.n	40398c <_realloc_r+0x258>
  403a3e:	4632      	mov	r2, r6
  403a40:	e77f      	b.n	403942 <_realloc_r+0x20e>
  403a42:	4629      	mov	r1, r5
  403a44:	4630      	mov	r0, r6
  403a46:	9301      	str	r3, [sp, #4]
  403a48:	f7ff fe04 	bl	403654 <memmove>
  403a4c:	9b01      	ldr	r3, [sp, #4]
  403a4e:	e77e      	b.n	40394e <_realloc_r+0x21a>
  403a50:	68a9      	ldr	r1, [r5, #8]
  403a52:	f8ca 1010 	str.w	r1, [sl, #16]
  403a56:	68e9      	ldr	r1, [r5, #12]
  403a58:	f8ca 1014 	str.w	r1, [sl, #20]
  403a5c:	2a24      	cmp	r2, #36	; 0x24
  403a5e:	d003      	beq.n	403a68 <_realloc_r+0x334>
  403a60:	3510      	adds	r5, #16
  403a62:	f10a 0218 	add.w	r2, sl, #24
  403a66:	e76c      	b.n	403942 <_realloc_r+0x20e>
  403a68:	692a      	ldr	r2, [r5, #16]
  403a6a:	f8ca 2018 	str.w	r2, [sl, #24]
  403a6e:	696a      	ldr	r2, [r5, #20]
  403a70:	f8ca 201c 	str.w	r2, [sl, #28]
  403a74:	3518      	adds	r5, #24
  403a76:	f10a 0220 	add.w	r2, sl, #32
  403a7a:	e762      	b.n	403942 <_realloc_r+0x20e>
  403a7c:	200005d8 	.word	0x200005d8

00403a80 <_sbrk_r>:
  403a80:	b538      	push	{r3, r4, r5, lr}
  403a82:	4c07      	ldr	r4, [pc, #28]	; (403aa0 <_sbrk_r+0x20>)
  403a84:	2300      	movs	r3, #0
  403a86:	4605      	mov	r5, r0
  403a88:	4608      	mov	r0, r1
  403a8a:	6023      	str	r3, [r4, #0]
  403a8c:	f7fc ffae 	bl	4009ec <_sbrk>
  403a90:	1c43      	adds	r3, r0, #1
  403a92:	d000      	beq.n	403a96 <_sbrk_r+0x16>
  403a94:	bd38      	pop	{r3, r4, r5, pc}
  403a96:	6823      	ldr	r3, [r4, #0]
  403a98:	2b00      	cmp	r3, #0
  403a9a:	d0fb      	beq.n	403a94 <_sbrk_r+0x14>
  403a9c:	602b      	str	r3, [r5, #0]
  403a9e:	bd38      	pop	{r3, r4, r5, pc}
  403aa0:	20002af4 	.word	0x20002af4

00403aa4 <__sread>:
  403aa4:	b510      	push	{r4, lr}
  403aa6:	460c      	mov	r4, r1
  403aa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403aac:	f000 f9d8 	bl	403e60 <_read_r>
  403ab0:	2800      	cmp	r0, #0
  403ab2:	db03      	blt.n	403abc <__sread+0x18>
  403ab4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403ab6:	4403      	add	r3, r0
  403ab8:	6523      	str	r3, [r4, #80]	; 0x50
  403aba:	bd10      	pop	{r4, pc}
  403abc:	89a3      	ldrh	r3, [r4, #12]
  403abe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403ac2:	81a3      	strh	r3, [r4, #12]
  403ac4:	bd10      	pop	{r4, pc}
  403ac6:	bf00      	nop

00403ac8 <__swrite>:
  403ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403acc:	4616      	mov	r6, r2
  403ace:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  403ad2:	461f      	mov	r7, r3
  403ad4:	05d3      	lsls	r3, r2, #23
  403ad6:	460c      	mov	r4, r1
  403ad8:	4605      	mov	r5, r0
  403ada:	d507      	bpl.n	403aec <__swrite+0x24>
  403adc:	2200      	movs	r2, #0
  403ade:	2302      	movs	r3, #2
  403ae0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403ae4:	f000 f9a6 	bl	403e34 <_lseek_r>
  403ae8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403aec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403af0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  403af4:	81a2      	strh	r2, [r4, #12]
  403af6:	463b      	mov	r3, r7
  403af8:	4632      	mov	r2, r6
  403afa:	4628      	mov	r0, r5
  403afc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403b00:	f000 b822 	b.w	403b48 <_write_r>

00403b04 <__sseek>:
  403b04:	b510      	push	{r4, lr}
  403b06:	460c      	mov	r4, r1
  403b08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403b0c:	f000 f992 	bl	403e34 <_lseek_r>
  403b10:	89a3      	ldrh	r3, [r4, #12]
  403b12:	1c42      	adds	r2, r0, #1
  403b14:	bf0e      	itee	eq
  403b16:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403b1a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403b1e:	6520      	strne	r0, [r4, #80]	; 0x50
  403b20:	81a3      	strh	r3, [r4, #12]
  403b22:	bd10      	pop	{r4, pc}

00403b24 <__sclose>:
  403b24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403b28:	f000 b8ea 	b.w	403d00 <_close_r>

00403b2c <__ascii_wctomb>:
  403b2c:	b121      	cbz	r1, 403b38 <__ascii_wctomb+0xc>
  403b2e:	2aff      	cmp	r2, #255	; 0xff
  403b30:	d804      	bhi.n	403b3c <__ascii_wctomb+0x10>
  403b32:	700a      	strb	r2, [r1, #0]
  403b34:	2001      	movs	r0, #1
  403b36:	4770      	bx	lr
  403b38:	4608      	mov	r0, r1
  403b3a:	4770      	bx	lr
  403b3c:	238a      	movs	r3, #138	; 0x8a
  403b3e:	6003      	str	r3, [r0, #0]
  403b40:	f04f 30ff 	mov.w	r0, #4294967295
  403b44:	4770      	bx	lr
  403b46:	bf00      	nop

00403b48 <_write_r>:
  403b48:	b570      	push	{r4, r5, r6, lr}
  403b4a:	460d      	mov	r5, r1
  403b4c:	4c08      	ldr	r4, [pc, #32]	; (403b70 <_write_r+0x28>)
  403b4e:	4611      	mov	r1, r2
  403b50:	4606      	mov	r6, r0
  403b52:	461a      	mov	r2, r3
  403b54:	4628      	mov	r0, r5
  403b56:	2300      	movs	r3, #0
  403b58:	6023      	str	r3, [r4, #0]
  403b5a:	f7fc ff6f 	bl	400a3c <_write>
  403b5e:	1c43      	adds	r3, r0, #1
  403b60:	d000      	beq.n	403b64 <_write_r+0x1c>
  403b62:	bd70      	pop	{r4, r5, r6, pc}
  403b64:	6823      	ldr	r3, [r4, #0]
  403b66:	2b00      	cmp	r3, #0
  403b68:	d0fb      	beq.n	403b62 <_write_r+0x1a>
  403b6a:	6033      	str	r3, [r6, #0]
  403b6c:	bd70      	pop	{r4, r5, r6, pc}
  403b6e:	bf00      	nop
  403b70:	20002af4 	.word	0x20002af4

00403b74 <__swsetup_r>:
  403b74:	b538      	push	{r3, r4, r5, lr}
  403b76:	4b30      	ldr	r3, [pc, #192]	; (403c38 <__swsetup_r+0xc4>)
  403b78:	681b      	ldr	r3, [r3, #0]
  403b7a:	4605      	mov	r5, r0
  403b7c:	460c      	mov	r4, r1
  403b7e:	b113      	cbz	r3, 403b86 <__swsetup_r+0x12>
  403b80:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403b82:	2a00      	cmp	r2, #0
  403b84:	d038      	beq.n	403bf8 <__swsetup_r+0x84>
  403b86:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403b8a:	b293      	uxth	r3, r2
  403b8c:	0718      	lsls	r0, r3, #28
  403b8e:	d50c      	bpl.n	403baa <__swsetup_r+0x36>
  403b90:	6920      	ldr	r0, [r4, #16]
  403b92:	b1a8      	cbz	r0, 403bc0 <__swsetup_r+0x4c>
  403b94:	f013 0201 	ands.w	r2, r3, #1
  403b98:	d01e      	beq.n	403bd8 <__swsetup_r+0x64>
  403b9a:	6963      	ldr	r3, [r4, #20]
  403b9c:	2200      	movs	r2, #0
  403b9e:	425b      	negs	r3, r3
  403ba0:	61a3      	str	r3, [r4, #24]
  403ba2:	60a2      	str	r2, [r4, #8]
  403ba4:	b1f0      	cbz	r0, 403be4 <__swsetup_r+0x70>
  403ba6:	2000      	movs	r0, #0
  403ba8:	bd38      	pop	{r3, r4, r5, pc}
  403baa:	06d9      	lsls	r1, r3, #27
  403bac:	d53c      	bpl.n	403c28 <__swsetup_r+0xb4>
  403bae:	0758      	lsls	r0, r3, #29
  403bb0:	d426      	bmi.n	403c00 <__swsetup_r+0x8c>
  403bb2:	6920      	ldr	r0, [r4, #16]
  403bb4:	f042 0308 	orr.w	r3, r2, #8
  403bb8:	81a3      	strh	r3, [r4, #12]
  403bba:	b29b      	uxth	r3, r3
  403bbc:	2800      	cmp	r0, #0
  403bbe:	d1e9      	bne.n	403b94 <__swsetup_r+0x20>
  403bc0:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403bc4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  403bc8:	d0e4      	beq.n	403b94 <__swsetup_r+0x20>
  403bca:	4628      	mov	r0, r5
  403bcc:	4621      	mov	r1, r4
  403bce:	f7ff f93b 	bl	402e48 <__smakebuf_r>
  403bd2:	89a3      	ldrh	r3, [r4, #12]
  403bd4:	6920      	ldr	r0, [r4, #16]
  403bd6:	e7dd      	b.n	403b94 <__swsetup_r+0x20>
  403bd8:	0799      	lsls	r1, r3, #30
  403bda:	bf58      	it	pl
  403bdc:	6962      	ldrpl	r2, [r4, #20]
  403bde:	60a2      	str	r2, [r4, #8]
  403be0:	2800      	cmp	r0, #0
  403be2:	d1e0      	bne.n	403ba6 <__swsetup_r+0x32>
  403be4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403be8:	061a      	lsls	r2, r3, #24
  403bea:	d5dd      	bpl.n	403ba8 <__swsetup_r+0x34>
  403bec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403bf0:	81a3      	strh	r3, [r4, #12]
  403bf2:	f04f 30ff 	mov.w	r0, #4294967295
  403bf6:	bd38      	pop	{r3, r4, r5, pc}
  403bf8:	4618      	mov	r0, r3
  403bfa:	f7fe fdc1 	bl	402780 <__sinit>
  403bfe:	e7c2      	b.n	403b86 <__swsetup_r+0x12>
  403c00:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403c02:	b151      	cbz	r1, 403c1a <__swsetup_r+0xa6>
  403c04:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403c08:	4299      	cmp	r1, r3
  403c0a:	d004      	beq.n	403c16 <__swsetup_r+0xa2>
  403c0c:	4628      	mov	r0, r5
  403c0e:	f7fe fe59 	bl	4028c4 <_free_r>
  403c12:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403c16:	2300      	movs	r3, #0
  403c18:	6323      	str	r3, [r4, #48]	; 0x30
  403c1a:	2300      	movs	r3, #0
  403c1c:	6920      	ldr	r0, [r4, #16]
  403c1e:	6063      	str	r3, [r4, #4]
  403c20:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  403c24:	6020      	str	r0, [r4, #0]
  403c26:	e7c5      	b.n	403bb4 <__swsetup_r+0x40>
  403c28:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  403c2c:	2309      	movs	r3, #9
  403c2e:	602b      	str	r3, [r5, #0]
  403c30:	f04f 30ff 	mov.w	r0, #4294967295
  403c34:	81a2      	strh	r2, [r4, #12]
  403c36:	bd38      	pop	{r3, r4, r5, pc}
  403c38:	20000038 	.word	0x20000038

00403c3c <__register_exitproc>:
  403c3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403c40:	4d2c      	ldr	r5, [pc, #176]	; (403cf4 <__register_exitproc+0xb8>)
  403c42:	4606      	mov	r6, r0
  403c44:	6828      	ldr	r0, [r5, #0]
  403c46:	4698      	mov	r8, r3
  403c48:	460f      	mov	r7, r1
  403c4a:	4691      	mov	r9, r2
  403c4c:	f7ff f8ca 	bl	402de4 <__retarget_lock_acquire_recursive>
  403c50:	4b29      	ldr	r3, [pc, #164]	; (403cf8 <__register_exitproc+0xbc>)
  403c52:	681c      	ldr	r4, [r3, #0]
  403c54:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403c58:	2b00      	cmp	r3, #0
  403c5a:	d03e      	beq.n	403cda <__register_exitproc+0x9e>
  403c5c:	685a      	ldr	r2, [r3, #4]
  403c5e:	2a1f      	cmp	r2, #31
  403c60:	dc1c      	bgt.n	403c9c <__register_exitproc+0x60>
  403c62:	f102 0e01 	add.w	lr, r2, #1
  403c66:	b176      	cbz	r6, 403c86 <__register_exitproc+0x4a>
  403c68:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403c6c:	2401      	movs	r4, #1
  403c6e:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  403c72:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  403c76:	4094      	lsls	r4, r2
  403c78:	4320      	orrs	r0, r4
  403c7a:	2e02      	cmp	r6, #2
  403c7c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  403c80:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  403c84:	d023      	beq.n	403cce <__register_exitproc+0x92>
  403c86:	3202      	adds	r2, #2
  403c88:	f8c3 e004 	str.w	lr, [r3, #4]
  403c8c:	6828      	ldr	r0, [r5, #0]
  403c8e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  403c92:	f7ff f8a9 	bl	402de8 <__retarget_lock_release_recursive>
  403c96:	2000      	movs	r0, #0
  403c98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403c9c:	4b17      	ldr	r3, [pc, #92]	; (403cfc <__register_exitproc+0xc0>)
  403c9e:	b30b      	cbz	r3, 403ce4 <__register_exitproc+0xa8>
  403ca0:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403ca4:	f7ff f91a 	bl	402edc <malloc>
  403ca8:	4603      	mov	r3, r0
  403caa:	b1d8      	cbz	r0, 403ce4 <__register_exitproc+0xa8>
  403cac:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  403cb0:	6002      	str	r2, [r0, #0]
  403cb2:	2100      	movs	r1, #0
  403cb4:	6041      	str	r1, [r0, #4]
  403cb6:	460a      	mov	r2, r1
  403cb8:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  403cbc:	f04f 0e01 	mov.w	lr, #1
  403cc0:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  403cc4:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  403cc8:	2e00      	cmp	r6, #0
  403cca:	d0dc      	beq.n	403c86 <__register_exitproc+0x4a>
  403ccc:	e7cc      	b.n	403c68 <__register_exitproc+0x2c>
  403cce:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  403cd2:	430c      	orrs	r4, r1
  403cd4:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  403cd8:	e7d5      	b.n	403c86 <__register_exitproc+0x4a>
  403cda:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  403cde:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  403ce2:	e7bb      	b.n	403c5c <__register_exitproc+0x20>
  403ce4:	6828      	ldr	r0, [r5, #0]
  403ce6:	f7ff f87f 	bl	402de8 <__retarget_lock_release_recursive>
  403cea:	f04f 30ff 	mov.w	r0, #4294967295
  403cee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403cf2:	bf00      	nop
  403cf4:	20000468 	.word	0x20000468
  403cf8:	00403f40 	.word	0x00403f40
  403cfc:	00402edd 	.word	0x00402edd

00403d00 <_close_r>:
  403d00:	b538      	push	{r3, r4, r5, lr}
  403d02:	4c07      	ldr	r4, [pc, #28]	; (403d20 <_close_r+0x20>)
  403d04:	2300      	movs	r3, #0
  403d06:	4605      	mov	r5, r0
  403d08:	4608      	mov	r0, r1
  403d0a:	6023      	str	r3, [r4, #0]
  403d0c:	f7fc fe8a 	bl	400a24 <_close>
  403d10:	1c43      	adds	r3, r0, #1
  403d12:	d000      	beq.n	403d16 <_close_r+0x16>
  403d14:	bd38      	pop	{r3, r4, r5, pc}
  403d16:	6823      	ldr	r3, [r4, #0]
  403d18:	2b00      	cmp	r3, #0
  403d1a:	d0fb      	beq.n	403d14 <_close_r+0x14>
  403d1c:	602b      	str	r3, [r5, #0]
  403d1e:	bd38      	pop	{r3, r4, r5, pc}
  403d20:	20002af4 	.word	0x20002af4

00403d24 <_fclose_r>:
  403d24:	b570      	push	{r4, r5, r6, lr}
  403d26:	b159      	cbz	r1, 403d40 <_fclose_r+0x1c>
  403d28:	4605      	mov	r5, r0
  403d2a:	460c      	mov	r4, r1
  403d2c:	b110      	cbz	r0, 403d34 <_fclose_r+0x10>
  403d2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403d30:	2b00      	cmp	r3, #0
  403d32:	d03c      	beq.n	403dae <_fclose_r+0x8a>
  403d34:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403d36:	07d8      	lsls	r0, r3, #31
  403d38:	d505      	bpl.n	403d46 <_fclose_r+0x22>
  403d3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403d3e:	b92b      	cbnz	r3, 403d4c <_fclose_r+0x28>
  403d40:	2600      	movs	r6, #0
  403d42:	4630      	mov	r0, r6
  403d44:	bd70      	pop	{r4, r5, r6, pc}
  403d46:	89a3      	ldrh	r3, [r4, #12]
  403d48:	0599      	lsls	r1, r3, #22
  403d4a:	d53c      	bpl.n	403dc6 <_fclose_r+0xa2>
  403d4c:	4621      	mov	r1, r4
  403d4e:	4628      	mov	r0, r5
  403d50:	f7fe fc1e 	bl	402590 <__sflush_r>
  403d54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403d56:	4606      	mov	r6, r0
  403d58:	b133      	cbz	r3, 403d68 <_fclose_r+0x44>
  403d5a:	69e1      	ldr	r1, [r4, #28]
  403d5c:	4628      	mov	r0, r5
  403d5e:	4798      	blx	r3
  403d60:	2800      	cmp	r0, #0
  403d62:	bfb8      	it	lt
  403d64:	f04f 36ff 	movlt.w	r6, #4294967295
  403d68:	89a3      	ldrh	r3, [r4, #12]
  403d6a:	061a      	lsls	r2, r3, #24
  403d6c:	d422      	bmi.n	403db4 <_fclose_r+0x90>
  403d6e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403d70:	b141      	cbz	r1, 403d84 <_fclose_r+0x60>
  403d72:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403d76:	4299      	cmp	r1, r3
  403d78:	d002      	beq.n	403d80 <_fclose_r+0x5c>
  403d7a:	4628      	mov	r0, r5
  403d7c:	f7fe fda2 	bl	4028c4 <_free_r>
  403d80:	2300      	movs	r3, #0
  403d82:	6323      	str	r3, [r4, #48]	; 0x30
  403d84:	6c61      	ldr	r1, [r4, #68]	; 0x44
  403d86:	b121      	cbz	r1, 403d92 <_fclose_r+0x6e>
  403d88:	4628      	mov	r0, r5
  403d8a:	f7fe fd9b 	bl	4028c4 <_free_r>
  403d8e:	2300      	movs	r3, #0
  403d90:	6463      	str	r3, [r4, #68]	; 0x44
  403d92:	f7fe fd21 	bl	4027d8 <__sfp_lock_acquire>
  403d96:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403d98:	2200      	movs	r2, #0
  403d9a:	07db      	lsls	r3, r3, #31
  403d9c:	81a2      	strh	r2, [r4, #12]
  403d9e:	d50e      	bpl.n	403dbe <_fclose_r+0x9a>
  403da0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403da2:	f7ff f81d 	bl	402de0 <__retarget_lock_close_recursive>
  403da6:	f7fe fd1d 	bl	4027e4 <__sfp_lock_release>
  403daa:	4630      	mov	r0, r6
  403dac:	bd70      	pop	{r4, r5, r6, pc}
  403dae:	f7fe fce7 	bl	402780 <__sinit>
  403db2:	e7bf      	b.n	403d34 <_fclose_r+0x10>
  403db4:	6921      	ldr	r1, [r4, #16]
  403db6:	4628      	mov	r0, r5
  403db8:	f7fe fd84 	bl	4028c4 <_free_r>
  403dbc:	e7d7      	b.n	403d6e <_fclose_r+0x4a>
  403dbe:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403dc0:	f7ff f812 	bl	402de8 <__retarget_lock_release_recursive>
  403dc4:	e7ec      	b.n	403da0 <_fclose_r+0x7c>
  403dc6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403dc8:	f7ff f80c 	bl	402de4 <__retarget_lock_acquire_recursive>
  403dcc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403dd0:	2b00      	cmp	r3, #0
  403dd2:	d1bb      	bne.n	403d4c <_fclose_r+0x28>
  403dd4:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403dd6:	f016 0601 	ands.w	r6, r6, #1
  403dda:	d1b1      	bne.n	403d40 <_fclose_r+0x1c>
  403ddc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403dde:	f7ff f803 	bl	402de8 <__retarget_lock_release_recursive>
  403de2:	4630      	mov	r0, r6
  403de4:	bd70      	pop	{r4, r5, r6, pc}
  403de6:	bf00      	nop

00403de8 <_fstat_r>:
  403de8:	b538      	push	{r3, r4, r5, lr}
  403dea:	460b      	mov	r3, r1
  403dec:	4c07      	ldr	r4, [pc, #28]	; (403e0c <_fstat_r+0x24>)
  403dee:	4605      	mov	r5, r0
  403df0:	4611      	mov	r1, r2
  403df2:	4618      	mov	r0, r3
  403df4:	2300      	movs	r3, #0
  403df6:	6023      	str	r3, [r4, #0]
  403df8:	f7fc fe17 	bl	400a2a <_fstat>
  403dfc:	1c43      	adds	r3, r0, #1
  403dfe:	d000      	beq.n	403e02 <_fstat_r+0x1a>
  403e00:	bd38      	pop	{r3, r4, r5, pc}
  403e02:	6823      	ldr	r3, [r4, #0]
  403e04:	2b00      	cmp	r3, #0
  403e06:	d0fb      	beq.n	403e00 <_fstat_r+0x18>
  403e08:	602b      	str	r3, [r5, #0]
  403e0a:	bd38      	pop	{r3, r4, r5, pc}
  403e0c:	20002af4 	.word	0x20002af4

00403e10 <_isatty_r>:
  403e10:	b538      	push	{r3, r4, r5, lr}
  403e12:	4c07      	ldr	r4, [pc, #28]	; (403e30 <_isatty_r+0x20>)
  403e14:	2300      	movs	r3, #0
  403e16:	4605      	mov	r5, r0
  403e18:	4608      	mov	r0, r1
  403e1a:	6023      	str	r3, [r4, #0]
  403e1c:	f7fc fe0a 	bl	400a34 <_isatty>
  403e20:	1c43      	adds	r3, r0, #1
  403e22:	d000      	beq.n	403e26 <_isatty_r+0x16>
  403e24:	bd38      	pop	{r3, r4, r5, pc}
  403e26:	6823      	ldr	r3, [r4, #0]
  403e28:	2b00      	cmp	r3, #0
  403e2a:	d0fb      	beq.n	403e24 <_isatty_r+0x14>
  403e2c:	602b      	str	r3, [r5, #0]
  403e2e:	bd38      	pop	{r3, r4, r5, pc}
  403e30:	20002af4 	.word	0x20002af4

00403e34 <_lseek_r>:
  403e34:	b570      	push	{r4, r5, r6, lr}
  403e36:	460d      	mov	r5, r1
  403e38:	4c08      	ldr	r4, [pc, #32]	; (403e5c <_lseek_r+0x28>)
  403e3a:	4611      	mov	r1, r2
  403e3c:	4606      	mov	r6, r0
  403e3e:	461a      	mov	r2, r3
  403e40:	4628      	mov	r0, r5
  403e42:	2300      	movs	r3, #0
  403e44:	6023      	str	r3, [r4, #0]
  403e46:	f7fc fdf7 	bl	400a38 <_lseek>
  403e4a:	1c43      	adds	r3, r0, #1
  403e4c:	d000      	beq.n	403e50 <_lseek_r+0x1c>
  403e4e:	bd70      	pop	{r4, r5, r6, pc}
  403e50:	6823      	ldr	r3, [r4, #0]
  403e52:	2b00      	cmp	r3, #0
  403e54:	d0fb      	beq.n	403e4e <_lseek_r+0x1a>
  403e56:	6033      	str	r3, [r6, #0]
  403e58:	bd70      	pop	{r4, r5, r6, pc}
  403e5a:	bf00      	nop
  403e5c:	20002af4 	.word	0x20002af4

00403e60 <_read_r>:
  403e60:	b570      	push	{r4, r5, r6, lr}
  403e62:	460d      	mov	r5, r1
  403e64:	4c08      	ldr	r4, [pc, #32]	; (403e88 <_read_r+0x28>)
  403e66:	4611      	mov	r1, r2
  403e68:	4606      	mov	r6, r0
  403e6a:	461a      	mov	r2, r3
  403e6c:	4628      	mov	r0, r5
  403e6e:	2300      	movs	r3, #0
  403e70:	6023      	str	r3, [r4, #0]
  403e72:	f7fc fe0b 	bl	400a8c <_read>
  403e76:	1c43      	adds	r3, r0, #1
  403e78:	d000      	beq.n	403e7c <_read_r+0x1c>
  403e7a:	bd70      	pop	{r4, r5, r6, pc}
  403e7c:	6823      	ldr	r3, [r4, #0]
  403e7e:	2b00      	cmp	r3, #0
  403e80:	d0fb      	beq.n	403e7a <_read_r+0x1a>
  403e82:	6033      	str	r3, [r6, #0]
  403e84:	bd70      	pop	{r4, r5, r6, pc}
  403e86:	bf00      	nop
  403e88:	20002af4 	.word	0x20002af4
  403e8c:	69647541 	.word	0x69647541
  403e90:	6f43206f 	.word	0x6f43206f
  403e94:	20636564 	.word	0x20636564
  403e98:	74696e49 	.word	0x74696e49
  403e9c:	696c6169 	.word	0x696c6169
  403ea0:	0d64657a 	.word	0x0d64657a
  403ea4:	0000000a 	.word	0x0000000a
  403ea8:	43533249 	.word	0x43533249
  403eac:	696e4920 	.word	0x696e4920
  403eb0:	6c616974 	.word	0x6c616974
  403eb4:	64657a69 	.word	0x64657a69
  403eb8:	00000a0d 	.word	0x00000a0d
  403ebc:	2c757066 	.word	0x2c757066
  403ec0:	0d642520 	.word	0x0d642520
  403ec4:	0000000a 	.word	0x0000000a
  403ec8:	6f420a0d 	.word	0x6f420a0d
  403ecc:	5f647261 	.word	0x5f647261
  403ed0:	74696e49 	.word	0x74696e49
  403ed4:	63757320 	.word	0x63757320
  403ed8:	73736563 	.word	0x73736563
  403edc:	0d6c7566 	.word	0x0d6c7566
  403ee0:	776f4e0a 	.word	0x776f4e0a
  403ee4:	61747320 	.word	0x61747320
  403ee8:	6e697472 	.word	0x6e697472
  403eec:	72702067 	.word	0x72702067
  403ef0:	6172676f 	.word	0x6172676f
  403ef4:	000a0d6d 	.word	0x000a0d6d
  403ef8:	20495754 	.word	0x20495754
  403efc:	74696e49 	.word	0x74696e49
  403f00:	696c6169 	.word	0x696c6169
  403f04:	0d64657a 	.word	0x0d64657a
  403f08:	0000000a 	.word	0x0000000a

00403f0c <Representation.14388>:
  403f0c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  403f1c:	00000000 54524155 696e4920 6c616974     ....UART Initial
  403f2c:	64657a69 74697720 72702068 66746e69     ized with printf
  403f3c:	0000000d                                ....

00403f40 <_global_impure_ptr>:
  403f40:	20000040 00000043 49534f50 00000058     @.. C...POSIX...
  403f50:	00000000 0000002e                       ........

00403f58 <_ctype_>:
  403f58:	20202000 20202020 28282020 20282828     .         ((((( 
  403f68:	20202020 20202020 20202020 20202020                     
  403f78:	10108820 10101010 10101010 10101010      ...............
  403f88:	04040410 04040404 10040404 10101010     ................
  403f98:	41411010 41414141 01010101 01010101     ..AAAAAA........
  403fa8:	01010101 01010101 01010101 10101010     ................
  403fb8:	42421010 42424242 02020202 02020202     ..BBBBBB........
  403fc8:	02020202 02020202 02020202 10101010     ................
  403fd8:	00000020 00000000 00000000 00000000      ...............
	...

0040405c <_init>:
  40405c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40405e:	bf00      	nop
  404060:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404062:	bc08      	pop	{r3}
  404064:	469e      	mov	lr, r3
  404066:	4770      	bx	lr

00404068 <__init_array_start>:
  404068:	00402571 	.word	0x00402571

0040406c <__frame_dummy_init_array_entry>:
  40406c:	0040012d                                -.@.

00404070 <_fini>:
  404070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404072:	bf00      	nop
  404074:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404076:	bc08      	pop	{r3}
  404078:	469e      	mov	lr, r3
  40407a:	4770      	bx	lr

0040407c <__fini_array_start>:
  40407c:	00400109 	.word	0x00400109
