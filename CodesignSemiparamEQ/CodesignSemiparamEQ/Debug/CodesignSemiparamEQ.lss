
CodesignSemiparamEQ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008070  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000008b4  20000000  00408070  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000e0cc  200008b4  00408924  000208b4  2**2
                  ALLOC
  3 .heap         00000200  2000e980  004169f0  000208b4  2**0
                  ALLOC
  4 .stack        00000400  2000eb80  00416bf0  000208b4  2**0
                  ALLOC
  5 .ARM.attributes 00000030  00000000  00000000  000208b4  2**0
                  CONTENTS, READONLY
  6 .comment      000000ce  00000000  00000000  000208e4  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000fdd3  00000000  00000000  000209b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001f54  00000000  00000000  00030785  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003057  00000000  00000000  000326d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000338  00000000  00000000  00035730  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000330  00000000  00000000  00035a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001f890  00000000  00000000  00035d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00007f8d  00000000  00000000  00055628  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0009d2d3  00000000  00000000  0005d5b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000011f0  00000000  00000000  000fa888  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	80 ef 00 20 79 03 40 00 75 03 40 00 75 03 40 00     ... y.@.u.@.u.@.
  400010:	75 03 40 00 75 03 40 00 75 03 40 00 00 00 00 00     u.@.u.@.u.@.....
	...
  40002c:	75 03 40 00 75 03 40 00 00 00 00 00 75 03 40 00     u.@.u.@.....u.@.
  40003c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40004c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40005c:	75 03 40 00 75 03 40 00 75 03 40 00 00 00 00 00     u.@.u.@.u.@.....
  40006c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40007c:	75 03 40 00 05 0b 40 00 75 03 40 00 75 03 40 00     u.@...@.u.@.u.@.
  40008c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  40009c:	75 03 40 00 75 03 40 00 75 03 40 00 75 03 40 00     u.@.u.@.u.@.u.@.
  4000ac:	75 03 40 00 75 03 40 00 75 03 40 00 00 00 00 00     u.@.u.@.u.@.....
	...
  4000fc:	75 03 40 00 75 03 40 00 75 03 40 00                 u.@.u.@.u.@.

00400108 <__do_global_dtors_aux>:
  400108:	b510      	push	{r4, lr}
  40010a:	4c05      	ldr	r4, [pc, #20]	; (400120 <__do_global_dtors_aux+0x18>)
  40010c:	7823      	ldrb	r3, [r4, #0]
  40010e:	b933      	cbnz	r3, 40011e <__do_global_dtors_aux+0x16>
  400110:	4b04      	ldr	r3, [pc, #16]	; (400124 <__do_global_dtors_aux+0x1c>)
  400112:	b113      	cbz	r3, 40011a <__do_global_dtors_aux+0x12>
  400114:	4804      	ldr	r0, [pc, #16]	; (400128 <__do_global_dtors_aux+0x20>)
  400116:	f3af 8000 	nop.w
  40011a:	2301      	movs	r3, #1
  40011c:	7023      	strb	r3, [r4, #0]
  40011e:	bd10      	pop	{r4, pc}
  400120:	200008b4 	.word	0x200008b4
  400124:	00000000 	.word	0x00000000
  400128:	00408070 	.word	0x00408070

0040012c <frame_dummy>:
  40012c:	4b0c      	ldr	r3, [pc, #48]	; (400160 <frame_dummy+0x34>)
  40012e:	b143      	cbz	r3, 400142 <frame_dummy+0x16>
  400130:	480c      	ldr	r0, [pc, #48]	; (400164 <frame_dummy+0x38>)
  400132:	490d      	ldr	r1, [pc, #52]	; (400168 <frame_dummy+0x3c>)
  400134:	b510      	push	{r4, lr}
  400136:	f3af 8000 	nop.w
  40013a:	480c      	ldr	r0, [pc, #48]	; (40016c <frame_dummy+0x40>)
  40013c:	6803      	ldr	r3, [r0, #0]
  40013e:	b923      	cbnz	r3, 40014a <frame_dummy+0x1e>
  400140:	bd10      	pop	{r4, pc}
  400142:	480a      	ldr	r0, [pc, #40]	; (40016c <frame_dummy+0x40>)
  400144:	6803      	ldr	r3, [r0, #0]
  400146:	b933      	cbnz	r3, 400156 <frame_dummy+0x2a>
  400148:	4770      	bx	lr
  40014a:	4b09      	ldr	r3, [pc, #36]	; (400170 <frame_dummy+0x44>)
  40014c:	2b00      	cmp	r3, #0
  40014e:	d0f7      	beq.n	400140 <frame_dummy+0x14>
  400150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400154:	4718      	bx	r3
  400156:	4b06      	ldr	r3, [pc, #24]	; (400170 <frame_dummy+0x44>)
  400158:	2b00      	cmp	r3, #0
  40015a:	d0f5      	beq.n	400148 <frame_dummy+0x1c>
  40015c:	4718      	bx	r3
  40015e:	bf00      	nop
  400160:	00000000 	.word	0x00000000
  400164:	00408070 	.word	0x00408070
  400168:	200008b8 	.word	0x200008b8
  40016c:	00408070 	.word	0x00408070
  400170:	00000000 	.word	0x00000000

00400174 <AK4588EN_Init>:
	
	return TWI0 -> TWI_RHR;
}

uint8_t AK4588EN_Init(void)
{
  400174:	b508      	push	{r3, lr}
	uint32_t timeout;
	
	TWI0 -> TWI_MMR = TWI_MMR_DADR(AK4588EN_I2C_ADDR);	//enter adress
  400176:	4b7c      	ldr	r3, [pc, #496]	; (400368 <AK4588EN_Init+0x1f4>)
  400178:	f44f 1298 	mov.w	r2, #1245184	; 0x130000
  40017c:	605a      	str	r2, [r3, #4]
	
	TWI0 -> TWI_THR = AK4588EN_PWRMNGMNT;		//register to start writing
  40017e:	2200      	movs	r2, #0
  400180:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400182:	6a1b      	ldr	r3, [r3, #32]
  400184:	f413 7f80 	tst.w	r3, #256	; 0x100
  400188:	d00e      	beq.n	4001a8 <AK4588EN_Init+0x34>
  40018a:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  40018e:	4976      	ldr	r1, [pc, #472]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400190:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400192:	6a0a      	ldr	r2, [r1, #32]
  400194:	f412 7f80 	tst.w	r2, #256	; 0x100
  400198:	d003      	beq.n	4001a2 <AK4588EN_Init+0x2e>
  40019a:	2b00      	cmp	r3, #0
  40019c:	d1f8      	bne.n	400190 <AK4588EN_Init+0x1c>
	}
	if (!timeout) return 0;
  40019e:	2000      	movs	r0, #0
  4001a0:	bd08      	pop	{r3, pc}
  4001a2:	2b00      	cmp	r3, #0
  4001a4:	f000 80cc 	beq.w	400340 <AK4588EN_Init+0x1cc>
	
	TWI0 -> TWI_THR = AK4588EN_PLL_CTRL_DEFAULT; //data	
  4001a8:	4b6f      	ldr	r3, [pc, #444]	; (400368 <AK4588EN_Init+0x1f4>)
  4001aa:	2205      	movs	r2, #5
  4001ac:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001ae:	6a1b      	ldr	r3, [r3, #32]
  4001b0:	f413 7f80 	tst.w	r3, #256	; 0x100
  4001b4:	d00e      	beq.n	4001d4 <AK4588EN_Init+0x60>
  4001b6:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4001ba:	496b      	ldr	r1, [pc, #428]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4001bc:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001be:	6a0a      	ldr	r2, [r1, #32]
  4001c0:	f412 7f80 	tst.w	r2, #256	; 0x100
  4001c4:	d003      	beq.n	4001ce <AK4588EN_Init+0x5a>
  4001c6:	2b00      	cmp	r3, #0
  4001c8:	d1f8      	bne.n	4001bc <AK4588EN_Init+0x48>
	}
	if (!timeout) return 0;
  4001ca:	2000      	movs	r0, #0
  4001cc:	bd08      	pop	{r3, pc}
  4001ce:	2b00      	cmp	r3, #0
  4001d0:	f000 80b8 	beq.w	400344 <AK4588EN_Init+0x1d0>
	
	TWI0 -> TWI_THR = AK4588EN_DAC_TDM_DEFAULT; //data
  4001d4:	4b64      	ldr	r3, [pc, #400]	; (400368 <AK4588EN_Init+0x1f4>)
  4001d6:	2200      	movs	r2, #0
  4001d8:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001da:	6a1b      	ldr	r3, [r3, #32]
  4001dc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4001e0:	d00e      	beq.n	400200 <AK4588EN_Init+0x8c>
  4001e2:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4001e6:	4960      	ldr	r1, [pc, #384]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4001e8:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4001ea:	6a0a      	ldr	r2, [r1, #32]
  4001ec:	f412 7f80 	tst.w	r2, #256	; 0x100
  4001f0:	d003      	beq.n	4001fa <AK4588EN_Init+0x86>
  4001f2:	2b00      	cmp	r3, #0
  4001f4:	d1f8      	bne.n	4001e8 <AK4588EN_Init+0x74>
	}
	if (!timeout) return 0;
  4001f6:	2000      	movs	r0, #0
  4001f8:	bd08      	pop	{r3, pc}
  4001fa:	2b00      	cmp	r3, #0
  4001fc:	f000 80a4 	beq.w	400348 <AK4588EN_Init+0x1d4>
	
	TWI0 -> TWI_THR = AK4588EN_CTRL1_DEFAULT; //data
  400200:	4b59      	ldr	r3, [pc, #356]	; (400368 <AK4588EN_Init+0x1f4>)
  400202:	2238      	movs	r2, #56	; 0x38
  400204:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400206:	6a1b      	ldr	r3, [r3, #32]
  400208:	f413 7f80 	tst.w	r3, #256	; 0x100
  40020c:	d00e      	beq.n	40022c <AK4588EN_Init+0xb8>
  40020e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400212:	4955      	ldr	r1, [pc, #340]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400214:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400216:	6a0a      	ldr	r2, [r1, #32]
  400218:	f412 7f80 	tst.w	r2, #256	; 0x100
  40021c:	d003      	beq.n	400226 <AK4588EN_Init+0xb2>
  40021e:	2b00      	cmp	r3, #0
  400220:	d1f8      	bne.n	400214 <AK4588EN_Init+0xa0>
	}
	if (!timeout) return 0;
  400222:	2000      	movs	r0, #0
  400224:	bd08      	pop	{r3, pc}
  400226:	2b00      	cmp	r3, #0
  400228:	f000 8090 	beq.w	40034c <AK4588EN_Init+0x1d8>
	
	TWI0 -> TWI_THR = AK4588EN_CTRL2_DEFAULT; //data
  40022c:	4b4e      	ldr	r3, [pc, #312]	; (400368 <AK4588EN_Init+0x1f4>)
  40022e:	2201      	movs	r2, #1
  400230:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400232:	6a1b      	ldr	r3, [r3, #32]
  400234:	f413 7f80 	tst.w	r3, #256	; 0x100
  400238:	d00d      	beq.n	400256 <AK4588EN_Init+0xe2>
  40023a:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  40023e:	494a      	ldr	r1, [pc, #296]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400240:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400242:	6a0a      	ldr	r2, [r1, #32]
  400244:	f412 7f80 	tst.w	r2, #256	; 0x100
  400248:	d003      	beq.n	400252 <AK4588EN_Init+0xde>
  40024a:	2b00      	cmp	r3, #0
  40024c:	d1f8      	bne.n	400240 <AK4588EN_Init+0xcc>
	}
	if (!timeout) return 0;
  40024e:	2000      	movs	r0, #0
  400250:	bd08      	pop	{r3, pc}
  400252:	2b00      	cmp	r3, #0
  400254:	d07c      	beq.n	400350 <AK4588EN_Init+0x1dc>
	
	TWI0 -> TWI_THR = AK4588EN_MODE_CTRL_DEFAULT; //data
  400256:	4b44      	ldr	r3, [pc, #272]	; (400368 <AK4588EN_Init+0x1f4>)
  400258:	222a      	movs	r2, #42	; 0x2a
  40025a:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  40025c:	6a1b      	ldr	r3, [r3, #32]
  40025e:	f413 7f80 	tst.w	r3, #256	; 0x100
  400262:	d00d      	beq.n	400280 <AK4588EN_Init+0x10c>
  400264:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400268:	493f      	ldr	r1, [pc, #252]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  40026a:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  40026c:	6a0a      	ldr	r2, [r1, #32]
  40026e:	f412 7f80 	tst.w	r2, #256	; 0x100
  400272:	d003      	beq.n	40027c <AK4588EN_Init+0x108>
  400274:	2b00      	cmp	r3, #0
  400276:	d1f8      	bne.n	40026a <AK4588EN_Init+0xf6>
	}
	if (!timeout) return 0;
  400278:	2000      	movs	r0, #0
  40027a:	bd08      	pop	{r3, pc}
  40027c:	2b00      	cmp	r3, #0
  40027e:	d069      	beq.n	400354 <AK4588EN_Init+0x1e0>
	
	TWI0 -> TWI_THR = AK4588EN_FILTER_SET_DEFAULT;	//data
  400280:	4b39      	ldr	r3, [pc, #228]	; (400368 <AK4588EN_Init+0x1f4>)
  400282:	2231      	movs	r2, #49	; 0x31
  400284:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400286:	6a1b      	ldr	r3, [r3, #32]
  400288:	f413 7f80 	tst.w	r3, #256	; 0x100
  40028c:	d00d      	beq.n	4002aa <AK4588EN_Init+0x136>
  40028e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400292:	4935      	ldr	r1, [pc, #212]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400294:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400296:	6a0a      	ldr	r2, [r1, #32]
  400298:	f412 7f80 	tst.w	r2, #256	; 0x100
  40029c:	d003      	beq.n	4002a6 <AK4588EN_Init+0x132>
  40029e:	2b00      	cmp	r3, #0
  4002a0:	d1f8      	bne.n	400294 <AK4588EN_Init+0x120>
	}
	if (!timeout) return 0;
  4002a2:	2000      	movs	r0, #0
  4002a4:	bd08      	pop	{r3, pc}
  4002a6:	2b00      	cmp	r3, #0
  4002a8:	d056      	beq.n	400358 <AK4588EN_Init+0x1e4>
	
	TWI0 -> TWI_THR = AK4588EN_HPF_EN_FILTER_SET_DEFAULT; //data
  4002aa:	4b2f      	ldr	r3, [pc, #188]	; (400368 <AK4588EN_Init+0x1f4>)
  4002ac:	220b      	movs	r2, #11
  4002ae:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002b0:	6a1b      	ldr	r3, [r3, #32]
  4002b2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4002b6:	d00d      	beq.n	4002d4 <AK4588EN_Init+0x160>
  4002b8:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4002bc:	492a      	ldr	r1, [pc, #168]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4002be:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002c0:	6a0a      	ldr	r2, [r1, #32]
  4002c2:	f412 7f80 	tst.w	r2, #256	; 0x100
  4002c6:	d003      	beq.n	4002d0 <AK4588EN_Init+0x15c>
  4002c8:	2b00      	cmp	r3, #0
  4002ca:	d1f8      	bne.n	4002be <AK4588EN_Init+0x14a>
	}
	if (!timeout) return 0;
  4002cc:	2000      	movs	r0, #0
  4002ce:	bd08      	pop	{r3, pc}
  4002d0:	2b00      	cmp	r3, #0
  4002d2:	d043      	beq.n	40035c <AK4588EN_Init+0x1e8>
	
	TWI0 -> TWI_THR = AK4588EN_LOUT_VOLUME_DEFAULT; //data
  4002d4:	4b24      	ldr	r3, [pc, #144]	; (400368 <AK4588EN_Init+0x1f4>)
  4002d6:	22ff      	movs	r2, #255	; 0xff
  4002d8:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002da:	6a1b      	ldr	r3, [r3, #32]
  4002dc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4002e0:	d00d      	beq.n	4002fe <AK4588EN_Init+0x18a>
  4002e2:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4002e6:	4920      	ldr	r1, [pc, #128]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  4002e8:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  4002ea:	6a0a      	ldr	r2, [r1, #32]
  4002ec:	f412 7f80 	tst.w	r2, #256	; 0x100
  4002f0:	d003      	beq.n	4002fa <AK4588EN_Init+0x186>
  4002f2:	2b00      	cmp	r3, #0
  4002f4:	d1f8      	bne.n	4002e8 <AK4588EN_Init+0x174>
	}
	if (!timeout) return 0;
  4002f6:	2000      	movs	r0, #0
  4002f8:	bd08      	pop	{r3, pc}
  4002fa:	2b00      	cmp	r3, #0
  4002fc:	d030      	beq.n	400360 <AK4588EN_Init+0x1ec>
	
	TWI0 -> TWI_THR = AK4588EN_ROUT_VOLUME_DEFAULT; //data
  4002fe:	4b1a      	ldr	r3, [pc, #104]	; (400368 <AK4588EN_Init+0x1f4>)
  400300:	22ff      	movs	r2, #255	; 0xff
  400302:	635a      	str	r2, [r3, #52]	; 0x34
	timeout = 0xFFFFFF;
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400304:	6a1b      	ldr	r3, [r3, #32]
  400306:	f413 7f80 	tst.w	r3, #256	; 0x100
  40030a:	d00c      	beq.n	400326 <AK4588EN_Init+0x1b2>
  40030c:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  400310:	4915      	ldr	r1, [pc, #84]	; (400368 <AK4588EN_Init+0x1f4>)
		timeout--;
  400312:	3b01      	subs	r3, #1
	while ((TWI0 -> TWI_SR & TWI_SR_NACK) && timeout){
  400314:	6a0a      	ldr	r2, [r1, #32]
  400316:	f412 7f80 	tst.w	r2, #256	; 0x100
  40031a:	d003      	beq.n	400324 <AK4588EN_Init+0x1b0>
  40031c:	2b00      	cmp	r3, #0
  40031e:	d1f8      	bne.n	400312 <AK4588EN_Init+0x19e>
	}
	if (!timeout) return 0;
  400320:	2000      	movs	r0, #0
  400322:	bd08      	pop	{r3, pc}
  400324:	b1f3      	cbz	r3, 400364 <AK4588EN_Init+0x1f0>
	

	
	//while (!(TWI0 -> TWI_SR & TWI_SR_TXRDY));
	
	TWI0 -> TWI_CR	= TWI_CR_STOP; //issue stop
  400326:	2202      	movs	r2, #2
  400328:	4b0f      	ldr	r3, [pc, #60]	; (400368 <AK4588EN_Init+0x1f4>)
  40032a:	601a      	str	r2, [r3, #0]
	while (!(TWI0 -> TWI_SR & TWI_SR_TXCOMP)); //transfer not done yet
  40032c:	461a      	mov	r2, r3
  40032e:	6a13      	ldr	r3, [r2, #32]
  400330:	f013 0f01 	tst.w	r3, #1
  400334:	d0fb      	beq.n	40032e <AK4588EN_Init+0x1ba>
	
	UART_Puts("Audio Codec Initialized\r\n");
  400336:	480d      	ldr	r0, [pc, #52]	; (40036c <AK4588EN_Init+0x1f8>)
  400338:	4b0d      	ldr	r3, [pc, #52]	; (400370 <AK4588EN_Init+0x1fc>)
  40033a:	4798      	blx	r3
	
	return 1;
  40033c:	2001      	movs	r0, #1
  40033e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400340:	2000      	movs	r0, #0
  400342:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400344:	2000      	movs	r0, #0
  400346:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400348:	2000      	movs	r0, #0
  40034a:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  40034c:	2000      	movs	r0, #0
  40034e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400350:	2000      	movs	r0, #0
  400352:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400354:	2000      	movs	r0, #0
  400356:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400358:	2000      	movs	r0, #0
  40035a:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  40035c:	2000      	movs	r0, #0
  40035e:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400360:	2000      	movs	r0, #0
  400362:	bd08      	pop	{r3, pc}
	if (!timeout) return 0;
  400364:	2000      	movs	r0, #0
  400366:	bd08      	pop	{r3, pc}
  400368:	4000c600 	.word	0x4000c600
  40036c:	004043a0 	.word	0x004043a0
  400370:	00400fa9 	.word	0x00400fa9

00400374 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400374:	e7fe      	b.n	400374 <Dummy_Handler>
	...

00400378 <Reset_Handler>:
{
  400378:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  40037a:	4b17      	ldr	r3, [pc, #92]	; (4003d8 <Reset_Handler+0x60>)
  40037c:	4a17      	ldr	r2, [pc, #92]	; (4003dc <Reset_Handler+0x64>)
  40037e:	429a      	cmp	r2, r3
  400380:	d010      	beq.n	4003a4 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  400382:	4b17      	ldr	r3, [pc, #92]	; (4003e0 <Reset_Handler+0x68>)
  400384:	4a14      	ldr	r2, [pc, #80]	; (4003d8 <Reset_Handler+0x60>)
  400386:	429a      	cmp	r2, r3
  400388:	d20c      	bcs.n	4003a4 <Reset_Handler+0x2c>
  40038a:	3b01      	subs	r3, #1
  40038c:	1a9b      	subs	r3, r3, r2
  40038e:	f023 0303 	bic.w	r3, r3, #3
  400392:	3304      	adds	r3, #4
  400394:	4413      	add	r3, r2
  400396:	4911      	ldr	r1, [pc, #68]	; (4003dc <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  400398:	f851 0b04 	ldr.w	r0, [r1], #4
  40039c:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4003a0:	429a      	cmp	r2, r3
  4003a2:	d1f9      	bne.n	400398 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4003a4:	4b0f      	ldr	r3, [pc, #60]	; (4003e4 <Reset_Handler+0x6c>)
  4003a6:	4a10      	ldr	r2, [pc, #64]	; (4003e8 <Reset_Handler+0x70>)
  4003a8:	429a      	cmp	r2, r3
  4003aa:	d20a      	bcs.n	4003c2 <Reset_Handler+0x4a>
  4003ac:	3b01      	subs	r3, #1
  4003ae:	1a9b      	subs	r3, r3, r2
  4003b0:	f023 0303 	bic.w	r3, r3, #3
  4003b4:	3304      	adds	r3, #4
  4003b6:	4413      	add	r3, r2
                *pDest++ = 0;
  4003b8:	2100      	movs	r1, #0
  4003ba:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4003be:	4293      	cmp	r3, r2
  4003c0:	d1fb      	bne.n	4003ba <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4003c2:	4a0a      	ldr	r2, [pc, #40]	; (4003ec <Reset_Handler+0x74>)
  4003c4:	4b0a      	ldr	r3, [pc, #40]	; (4003f0 <Reset_Handler+0x78>)
  4003c6:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4003ca:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  4003cc:	4b09      	ldr	r3, [pc, #36]	; (4003f4 <Reset_Handler+0x7c>)
  4003ce:	4798      	blx	r3
        main();
  4003d0:	4b09      	ldr	r3, [pc, #36]	; (4003f8 <Reset_Handler+0x80>)
  4003d2:	4798      	blx	r3
  4003d4:	e7fe      	b.n	4003d4 <Reset_Handler+0x5c>
  4003d6:	bf00      	nop
  4003d8:	20000000 	.word	0x20000000
  4003dc:	00408070 	.word	0x00408070
  4003e0:	200008b4 	.word	0x200008b4
  4003e4:	2000e980 	.word	0x2000e980
  4003e8:	200008b4 	.word	0x200008b4
  4003ec:	e000ed00 	.word	0xe000ed00
  4003f0:	00400000 	.word	0x00400000
  4003f4:	004026a1 	.word	0x004026a1
  4003f8:	004007c9 	.word	0x004007c9

004003fc <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
    // Keep the default device state after reset
    SystemCoreClock = __SYSTEM_CLOCK;
  4003fc:	4a01      	ldr	r2, [pc, #4]	; (400404 <SystemInit+0x8>)
  4003fe:	4b02      	ldr	r3, [pc, #8]	; (400408 <SystemInit+0xc>)
  400400:	601a      	str	r2, [r3, #0]
  400402:	4770      	bx	lr
  400404:	007a1200 	.word	0x007a1200
  400408:	20000000 	.word	0x20000000

0040040c <I2SC_DMAenable>:
	UART_Puts("I2SC Initialized\r\n");	
	
}

void I2SC_DMAenable(int32_t *srcbuffL, int32_t *srcbuffR, int32_t *dstbuffL, int32_t *dstbuffR, uint32_t len)
{
  40040c:	b430      	push	{r4, r5}
  40040e:	9d02      	ldr	r5, [sp, #8]
	Pdc *I2SC0_2 = (Pdc *)((uint32_t)I2SC0 + 0x200U);                  /**< \brief (I2SC0 PDC ) Base Address R channel */
	
	//Left channel Tx
	I2SC0 -> I2SC_TPR = (int32_t)srcbuffL;
  400410:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
  400414:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
	I2SC0 -> I2SC_TCR = len;
  400418:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
	I2SC0 -> I2SC_TNPR = (int32_t)srcbuffL;
  40041c:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
	I2SC0 -> I2SC_TNCR = len;
  400420:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
	
	I2SC0 -> I2SC_RPR = (int32_t)dstbuffL;
  400424:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
	I2SC0 -> I2SC_RCR = len;
  400428:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
	I2SC0 -> I2SC_RNPR = (int32_t)dstbuffL;
  40042c:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
	I2SC0 -> I2SC_RNCR = len;
  400430:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
	
	//Right channel Tx 
	I2SC0_2 -> PERIPH_TPR = (int32_t)srcbuffR;
  400434:	4a07      	ldr	r2, [pc, #28]	; (400454 <I2SC_DMAenable+0x48>)
  400436:	6091      	str	r1, [r2, #8]
	I2SC0_2 -> PERIPH_TCR = len;
  400438:	60d5      	str	r5, [r2, #12]
	I2SC0_2 -> PERIPH_TNPR = (int32_t)srcbuffR;
  40043a:	6191      	str	r1, [r2, #24]
	I2SC0_2 -> PERIPH_TNCR = len;
  40043c:	61d5      	str	r5, [r2, #28]
	
 	I2SC0_2 -> PERIPH_RPR = (int32_t)dstbuffR;
  40043e:	6013      	str	r3, [r2, #0]
 	I2SC0_2 -> PERIPH_RCR = len;
  400440:	6055      	str	r5, [r2, #4]
 	I2SC0_2 -> PERIPH_RNPR = (int32_t)dstbuffR;
  400442:	6113      	str	r3, [r2, #16]
 	I2SC0_2 -> PERIPH_RNCR = len;
  400444:	6155      	str	r5, [r2, #20]
	
	
	I2SC0 -> I2SC_PTCR		= I2SC_PTCR_TXTEN | I2SC_PTCR_RXTEN;
  400446:	f240 1301 	movw	r3, #257	; 0x101
  40044a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
	I2SC0_2 -> PERIPH_PTCR	= I2SC_PTCR_TXTEN | I2SC_PTCR_RXTEN;
  40044e:	6213      	str	r3, [r2, #32]
}
  400450:	bc30      	pop	{r4, r5}
  400452:	4770      	bx	lr
  400454:	40000200 	.word	0x40000200

00400458 <Init_I2SC>:
{	
  400458:	b570      	push	{r4, r5, r6, lr}
  40045a:	b082      	sub	sp, #8


static void I2SC_PioSetup(void)
{
	//enable peripheral control of IO pins
	PIOA -> PIO_PDR	|=	PIO_PDR_P0	//Clock
  40045c:	4c1f      	ldr	r4, [pc, #124]	; (4004dc <Init_I2SC+0x84>)
  40045e:	6865      	ldr	r5, [r4, #4]
  400460:	f445 25c0 	orr.w	r5, r5, #393216	; 0x60000
  400464:	f045 051f 	orr.w	r5, r5, #31
  400468:	6065      	str	r5, [r4, #4]
	 *	 1	 1		D
	 * since not used pins are not used in PCB hand them to peripheral as well
	 */
	
	//PA0 & PA1 to peripheral A
	PIOA -> PIO_ABCDSR[0] &= ~( PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P17 | PIO_ABCDSR_P18 );
  40046a:	6f25      	ldr	r5, [r4, #112]	; 0x70
  40046c:	f425 25c0 	bic.w	r5, r5, #393216	; 0x60000
  400470:	f025 0503 	bic.w	r5, r5, #3
  400474:	6725      	str	r5, [r4, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~( PIO_ABCDSR_P0 | PIO_ABCDSR_P1 | PIO_ABCDSR_P17 | PIO_ABCDSR_P18 );
  400476:	6f65      	ldr	r5, [r4, #116]	; 0x74
  400478:	f425 25c0 	bic.w	r5, r5, #393216	; 0x60000
  40047c:	f025 0503 	bic.w	r5, r5, #3
  400480:	6765      	str	r5, [r4, #116]	; 0x74
	
	//PA2 & PA3 & PA4 to peripheral B
	PIOA -> PIO_ABCDSR[0] |=  ( PIO_ABCDSR_P2 | PIO_ABCDSR_P3 | PIO_ABCDSR_P4 );
  400482:	6f25      	ldr	r5, [r4, #112]	; 0x70
  400484:	f045 051c 	orr.w	r5, r5, #28
  400488:	6725      	str	r5, [r4, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~( PIO_ABCDSR_P2 | PIO_ABCDSR_P3 | PIO_ABCDSR_P4 );
  40048a:	6f65      	ldr	r5, [r4, #116]	; 0x74
  40048c:	f025 051c 	bic.w	r5, r5, #28
  400490:	6765      	str	r5, [r4, #116]	; 0x74
	I2SC0 -> I2SC_CR	=	I2SC_CR_SWRST;
  400492:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
  400496:	2580      	movs	r5, #128	; 0x80
  400498:	6025      	str	r5, [r4, #0]
	I2SC0 -> I2SC_MR	=	I2SC_MR_MODE_SLAVE
  40049a:	f44f 46c4 	mov.w	r6, #25088	; 0x6200
  40049e:	6066      	str	r6, [r4, #4]
	I2SC_DMAenable(DMAsrcbuffL, DMAsrcbuffR, DMAdstbuffL, DMAdstbuffR, DMAbuffLen);
  4004a0:	9e06      	ldr	r6, [sp, #24]
  4004a2:	9600      	str	r6, [sp, #0]
  4004a4:	4e0e      	ldr	r6, [pc, #56]	; (4004e0 <Init_I2SC+0x88>)
  4004a6:	47b0      	blx	r6
	I2SC0 -> I2SC_IER =	I2SC_IER_ENDTX; //ENDTX? or TXRDY
  4004a8:	6165      	str	r5, [r4, #20]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4004aa:	4a0e      	ldr	r2, [pc, #56]	; (4004e4 <Init_I2SC+0x8c>)
  4004ac:	2300      	movs	r3, #0
  4004ae:	f882 3310 	strb.w	r3, [r2, #784]	; 0x310
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
  4004b2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4004b6:	6011      	str	r1, [r2, #0]
	I2SC0 -> I2SC_CR	=	0;
  4004b8:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_RXEN;	//enable receiver
  4004ba:	6823      	ldr	r3, [r4, #0]
  4004bc:	f043 0301 	orr.w	r3, r3, #1
  4004c0:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_TXEN;	//enable transmitter
  4004c2:	6823      	ldr	r3, [r4, #0]
  4004c4:	f043 0310 	orr.w	r3, r3, #16
  4004c8:	6023      	str	r3, [r4, #0]
	I2SC0 -> I2SC_CR	|=	I2SC_CR_CKEN;	//generate clock
  4004ca:	6823      	ldr	r3, [r4, #0]
  4004cc:	f043 0304 	orr.w	r3, r3, #4
  4004d0:	6023      	str	r3, [r4, #0]
	UART_Puts("I2SC Initialized\r\n");	
  4004d2:	4805      	ldr	r0, [pc, #20]	; (4004e8 <Init_I2SC+0x90>)
  4004d4:	4b05      	ldr	r3, [pc, #20]	; (4004ec <Init_I2SC+0x94>)
  4004d6:	4798      	blx	r3
}
  4004d8:	b002      	add	sp, #8
  4004da:	bd70      	pop	{r4, r5, r6, pc}
  4004dc:	400e0e00 	.word	0x400e0e00
  4004e0:	0040040d 	.word	0x0040040d
  4004e4:	e000e100 	.word	0xe000e100
  4004e8:	004043bc 	.word	0x004043bc
  4004ec:	00400fa9 	.word	0x00400fa9

004004f0 <fpu_enable>:
#define REG_CPACR (*((volatile uint32_t *)ADDR_CPACR))


void fpu_enable(void)
{
 REG_CPACR |= (0xFu << 20);
  4004f0:	4a04      	ldr	r2, [pc, #16]	; (400504 <fpu_enable+0x14>)
  4004f2:	6813      	ldr	r3, [r2, #0]
  4004f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4004f8:	6013      	str	r3, [r2, #0]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4004fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4004fe:	f3bf 8f6f 	isb	sy
  400502:	4770      	bx	lr
  400504:	e000ed88 	.word	0xe000ed88

00400508 <timeDomR2C>:
static void Init_Board(void);
static uint8_t Init_Clock(void);


void timeDomR2C(float32_t* pRealSrc, float32_t* pComplDst, uint16_t lenReal) {
	for (int i = 0; i < lenReal; i++){
  400508:	b16a      	cbz	r2, 400526 <timeDomR2C+0x1e>
void timeDomR2C(float32_t* pRealSrc, float32_t* pComplDst, uint16_t lenReal) {
  40050a:	b410      	push	{r4}
  40050c:	4603      	mov	r3, r0
  40050e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
		pComplDst[i*2] = pRealSrc[i];
		pComplDst[(i*2)+1] = 0.0f;
  400512:	2200      	movs	r2, #0
		pComplDst[i*2] = pRealSrc[i];
  400514:	f853 4b04 	ldr.w	r4, [r3], #4
  400518:	600c      	str	r4, [r1, #0]
		pComplDst[(i*2)+1] = 0.0f;
  40051a:	604a      	str	r2, [r1, #4]
  40051c:	3108      	adds	r1, #8
	for (int i = 0; i < lenReal; i++){
  40051e:	4283      	cmp	r3, r0
  400520:	d1f8      	bne.n	400514 <timeDomR2C+0xc>
	}
}
  400522:	f85d 4b04 	ldr.w	r4, [sp], #4
  400526:	4770      	bx	lr

00400528 <timeDomC2R>:

void timeDomC2R(float32_t* pComplSrc, float32_t* pRealDst, uint16_t lenReal) {
	// phase determination not necessary because post-IFFT should only be real values anyway...
	for (int i = 0; i < lenReal; i++){
  400528:	b15a      	cbz	r2, 400542 <timeDomC2R+0x1a>
void timeDomC2R(float32_t* pComplSrc, float32_t* pRealDst, uint16_t lenReal) {
  40052a:	b410      	push	{r4}
  40052c:	460b      	mov	r3, r1
  40052e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
		pRealDst[i] = pComplSrc[i*2];
  400532:	f850 4b08 	ldr.w	r4, [r0], #8
  400536:	f843 4b04 	str.w	r4, [r3], #4
	for (int i = 0; i < lenReal; i++){
  40053a:	428b      	cmp	r3, r1
  40053c:	d1f9      	bne.n	400532 <timeDomC2R+0xa>
	}
}
  40053e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400542:	4770      	bx	lr

00400544 <freqDomR2C>:
to:		{re(0), im(0), re(1), im(1), ..., re(N), im(N))}, so bin > N/2 are negative freqs with complex conjugate values of the positive freq bins, mirrored in the middle bin
		complex conjugate: a + bj --> a - bj
*/
void freqDomR2C(const float32_t* pRealSrc, float32_t* pComplDst, uint16_t lenReal) {
	
	pComplDst[0] = pRealSrc[0];
  400544:	6803      	ldr	r3, [r0, #0]
  400546:	600b      	str	r3, [r1, #0]
	pComplDst[1] = 0.0; // im(0) is always 0 (because DC)
  400548:	2300      	movs	r3, #0
  40054a:	604b      	str	r3, [r1, #4]
	for (uint16_t bin = 2; bin < lenReal; bin += 2){
  40054c:	2a02      	cmp	r2, #2
  40054e:	d92a      	bls.n	4005a6 <freqDomR2C+0x62>
void freqDomR2C(const float32_t* pRealSrc, float32_t* pComplDst, uint16_t lenReal) {
  400550:	b470      	push	{r4, r5, r6}
	for (uint16_t bin = 2; bin < lenReal; bin += 2){
  400552:	2402      	movs	r4, #2
		pComplDst[bin] = pRealSrc[bin];
  400554:	00a3      	lsls	r3, r4, #2
  400556:	18c5      	adds	r5, r0, r3
  400558:	682e      	ldr	r6, [r5, #0]
  40055a:	18cd      	adds	r5, r1, r3
  40055c:	602e      	str	r6, [r5, #0]
		pComplDst[bin+1] = pRealSrc[bin+1];
  40055e:	3304      	adds	r3, #4
  400560:	18c5      	adds	r5, r0, r3
  400562:	682d      	ldr	r5, [r5, #0]
  400564:	440b      	add	r3, r1
  400566:	601d      	str	r5, [r3, #0]
	for (uint16_t bin = 2; bin < lenReal; bin += 2){
  400568:	3402      	adds	r4, #2
  40056a:	b2a4      	uxth	r4, r4
  40056c:	42a2      	cmp	r2, r4
  40056e:	d8f1      	bhi.n	400554 <freqDomR2C+0x10>
	}
	
	pComplDst[lenReal] = pRealSrc[1]; // re(N/2) was packed away here (cos im(0) is always 0.0)
  400570:	6840      	ldr	r0, [r0, #4]
  400572:	eb01 0382 	add.w	r3, r1, r2, lsl #2
  400576:	6018      	str	r0, [r3, #0]
	pComplDst[lenReal+1] = 0.0; // im(N/2) is also always 0.0
  400578:	2000      	movs	r0, #0
  40057a:	6058      	str	r0, [r3, #4]
  40057c:	2302      	movs	r3, #2
	// create conjugates
	for (uint16_t bin = 2; bin < lenReal; bin += 2){
		pComplDst[lenReal + bin] = pComplDst[lenReal - bin];
  40057e:	18d0      	adds	r0, r2, r3
  400580:	1ad4      	subs	r4, r2, r3
  400582:	eb01 0484 	add.w	r4, r1, r4, lsl #2
  400586:	6825      	ldr	r5, [r4, #0]
  400588:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  40058c:	6005      	str	r5, [r0, #0]
		pComplDst[lenReal + bin+1] = -(pComplDst[(lenReal - bin)+1]);
  40058e:	edd4 7a01 	vldr	s15, [r4, #4]
  400592:	eef1 7a67 	vneg.f32	s15, s15
  400596:	edc0 7a01 	vstr	s15, [r0, #4]
	for (uint16_t bin = 2; bin < lenReal; bin += 2){
  40059a:	3302      	adds	r3, #2
  40059c:	b29b      	uxth	r3, r3
  40059e:	429a      	cmp	r2, r3
  4005a0:	d8ed      	bhi.n	40057e <freqDomR2C+0x3a>
	}
}
  4005a2:	bc70      	pop	{r4, r5, r6}
  4005a4:	4770      	bx	lr
	pComplDst[lenReal] = pRealSrc[1]; // re(N/2) was packed away here (cos im(0) is always 0.0)
  4005a6:	6843      	ldr	r3, [r0, #4]
  4005a8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  4005ac:	600b      	str	r3, [r1, #0]
	pComplDst[lenReal+1] = 0.0; // im(N/2) is also always 0.0
  4005ae:	2300      	movs	r3, #0
  4005b0:	604b      	str	r3, [r1, #4]
  4005b2:	4770      	bx	lr

004005b4 <printConvState>:
	double dval = (double) fl; // float -> double
	dval *= frac_int2float;
	return (int32_t) dval; // double -> int32
}

void printConvState(uint8_t state){
  4005b4:	b510      	push	{r4, lr}
  4005b6:	4604      	mov	r4, r0
	static uint8_t savedstate;
	if (savedstate < state){ // off -> on
  4005b8:	4b08      	ldr	r3, [pc, #32]	; (4005dc <printConvState+0x28>)
  4005ba:	781b      	ldrb	r3, [r3, #0]
  4005bc:	4283      	cmp	r3, r0
  4005be:	d304      	bcc.n	4005ca <printConvState+0x16>
		printf("Cassette player convolution ON\r\n");
	} else if (savedstate > state){ // on -> off
  4005c0:	4283      	cmp	r3, r0
  4005c2:	d806      	bhi.n	4005d2 <printConvState+0x1e>
		printf("Cassette player convolution OFF\r\n");
	}
	savedstate = state;
  4005c4:	4b05      	ldr	r3, [pc, #20]	; (4005dc <printConvState+0x28>)
  4005c6:	701c      	strb	r4, [r3, #0]
  4005c8:	bd10      	pop	{r4, pc}
		printf("Cassette player convolution ON\r\n");
  4005ca:	4805      	ldr	r0, [pc, #20]	; (4005e0 <printConvState+0x2c>)
  4005cc:	4b05      	ldr	r3, [pc, #20]	; (4005e4 <printConvState+0x30>)
  4005ce:	4798      	blx	r3
  4005d0:	e7f8      	b.n	4005c4 <printConvState+0x10>
		printf("Cassette player convolution OFF\r\n");
  4005d2:	4805      	ldr	r0, [pc, #20]	; (4005e8 <printConvState+0x34>)
  4005d4:	4b03      	ldr	r3, [pc, #12]	; (4005e4 <printConvState+0x30>)
  4005d6:	4798      	blx	r3
  4005d8:	e7f4      	b.n	4005c4 <printConvState+0x10>
  4005da:	bf00      	nop
  4005dc:	200008d0 	.word	0x200008d0
  4005e0:	00406bd8 	.word	0x00406bd8
  4005e4:	00402829 	.word	0x00402829
  4005e8:	00406bf8 	.word	0x00406bf8

004005ec <convolve>:
}

void convolve(float32_t* inputAudioBuf, float32_t* outputAudioBuf, uint8_t channel){
  4005ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4005f0:	f5ad 5d40 	sub.w	sp, sp, #12288	; 0x3000
  4005f4:	b085      	sub	sp, #20
  4005f6:	9101      	str	r1, [sp, #4]
	// static indexes, 1 per channel, will initialize as 0
	static uint8_t bufArrayIndex[2]; 
	
	// select audio fft buf array
	float** audioFftBufferArray;
	if (channel == CHANNEL_L){
  4005f8:	4611      	mov	r1, r2
  4005fa:	9200      	str	r2, [sp, #0]
		audioFftBufferArray = audioFftBufferArrayL;
	} else {
		audioFftBufferArray = audioFftBufferArrayR;		
  4005fc:	2a00      	cmp	r2, #0
  4005fe:	4b69      	ldr	r3, [pc, #420]	; (4007a4 <convolve+0x1b8>)
  400600:	f1a3 0214 	sub.w	r2, r3, #20
  400604:	bf0c      	ite	eq
  400606:	4690      	moveq	r8, r2
  400608:	4698      	movne	r8, r3
	}
	
	// clear audio fft buf
	for (uint16_t i = 0; i < CONVOL_BLOCKSZ; i++){
		audioFftBufferArray[bufArrayIndex[channel]][i] = 0.0f;
  40060a:	460c      	mov	r4, r1
  40060c:	4b66      	ldr	r3, [pc, #408]	; (4007a8 <convolve+0x1bc>)
  40060e:	440b      	add	r3, r1
  400610:	791d      	ldrb	r5, [r3, #4]
  400612:	eb08 0585 	add.w	r5, r8, r5, lsl #2
  400616:	2300      	movs	r3, #0
  400618:	2100      	movs	r1, #0
  40061a:	682a      	ldr	r2, [r5, #0]
  40061c:	441a      	add	r2, r3
  40061e:	6011      	str	r1, [r2, #0]
  400620:	3304      	adds	r3, #4
	for (uint16_t i = 0; i < CONVOL_BLOCKSZ; i++){
  400622:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  400626:	d1f8      	bne.n	40061a <convolve+0x2e>
	}
	// put complex timedom version of input audio in bufarray
	timeDomR2C(inputAudioBuf, audioFftBufferArray[bufArrayIndex[channel]], I2SC_BUFFSZ); 
  400628:	f44f 7280 	mov.w	r2, #256	; 0x100
  40062c:	6829      	ldr	r1, [r5, #0]
  40062e:	4b5f      	ldr	r3, [pc, #380]	; (4007ac <convolve+0x1c0>)
  400630:	4798      	blx	r3
		
	// complex fft inplace
	arm_cfft_f32(S, audioFftBufferArray[bufArrayIndex[channel]], FFT_FORWARD, FFT_BITREVERSE);
  400632:	4f5f      	ldr	r7, [pc, #380]	; (4007b0 <convolve+0x1c4>)
  400634:	2301      	movs	r3, #1
  400636:	2200      	movs	r2, #0
  400638:	6829      	ldr	r1, [r5, #0]
  40063a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
  40063c:	4d5d      	ldr	r5, [pc, #372]	; (4007b4 <convolve+0x1c8>)
  40063e:	47a8      	blx	r5

	// incr bufarray index
	bufArrayIndex[channel] = (bufArrayIndex[channel] + 1) % NR_OF_BUFFS;
  400640:	4d59      	ldr	r5, [pc, #356]	; (4007a8 <convolve+0x1bc>)
  400642:	9b00      	ldr	r3, [sp, #0]
  400644:	18e8      	adds	r0, r5, r3
  400646:	7903      	ldrb	r3, [r0, #4]
  400648:	3301      	adds	r3, #1
  40064a:	495b      	ldr	r1, [pc, #364]	; (4007b8 <convolve+0x1cc>)
  40064c:	fb81 2103 	smull	r2, r1, r1, r3
  400650:	17da      	asrs	r2, r3, #31
  400652:	ebc2 0261 	rsb	r2, r2, r1, asr #1
  400656:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  40065a:	1a9b      	subs	r3, r3, r2
  40065c:	7103      	strb	r3, [r0, #4]


	
	/* CONVOLUTION */
	
	float32_t convResultBuf[CONVOL_BLOCKSZ] = {0}; // 
  40065e:	f50d 5600 	add.w	r6, sp, #8192	; 0x2000
  400662:	3610      	adds	r6, #16
  400664:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400668:	2100      	movs	r1, #0
  40066a:	4630      	mov	r0, r6
  40066c:	4b53      	ldr	r3, [pc, #332]	; (4007bc <convolve+0x1d0>)
  40066e:	4798      	blx	r3
	static float32_t overlapBufL[IR_PARTSZ]; // for saving of convolution result tail
	static float32_t overlapBufR[IR_PARTSZ]; // for saving of convolution result tail
	float32_t* overlapBufArray[2] = {overlapBufL, overlapBufR}; // one per channel
  400670:	f105 0308 	add.w	r3, r5, #8
  400674:	f846 3c08 	str.w	r3, [r6, #-8]
  400678:	f605 0508 	addw	r5, r5, #2056	; 0x808
  40067c:	f846 5c04 	str.w	r5, [r6, #-4]
  400680:	f107 053c 	add.w	r5, r7, #60	; 0x3c
  400684:	3728      	adds	r7, #40	; 0x28
	float32_t multResultBuf[CONVOL_BLOCKSZ];
	float32_t IRComplFftBuf[CONVOL_BLOCKSZ];
	
	while (IRbufIndex >= 0){

		freqDomR2C(IRFftBufferArray[IRbufIndex], IRComplFftBuf, IR_PARTSZ);
  400686:	f8df 913c 	ldr.w	r9, [pc, #316]	; 4007c4 <convolve+0x1d8>

		for (uint16_t bin = 0; bin < CONVOL_BLOCKSZ; bin += 2){
			/* (a + bj) * (c + dj) = resultRe + resultIm*j */ 
			complMul(audioFftBufferArray[bufArrayIndex[channel]][bin],
  40068a:	f1a3 0608 	sub.w	r6, r3, #8
  40068e:	4426      	add	r6, r4
		freqDomR2C(IRFftBufferArray[IRbufIndex], IRComplFftBuf, IR_PARTSZ);
  400690:	f44f 7200 	mov.w	r2, #512	; 0x200
  400694:	a902      	add	r1, sp, #8
  400696:	f855 0904 	ldr.w	r0, [r5], #-4
  40069a:	47c8      	blx	r9
			complMul(audioFftBufferArray[bufArrayIndex[channel]][bin],
  40069c:	f896 b004 	ldrb.w	fp, [r6, #4]
  4006a0:	f858 402b 	ldr.w	r4, [r8, fp, lsl #2]
  4006a4:	f10d 0e08 	add.w	lr, sp, #8
  4006a8:	f50d 5380 	add.w	r3, sp, #4096	; 0x1000
  4006ac:	3310      	adds	r3, #16
  4006ae:	f1a3 0008 	sub.w	r0, r3, #8
  4006b2:	f50d 5a00 	add.w	sl, sp, #8192	; 0x2000
  4006b6:	f10a 0a10 	add.w	sl, sl, #16
  4006ba:	1f19      	subs	r1, r3, #4
  4006bc:	f50d 5200 	add.w	r2, sp, #8192	; 0x2000
  4006c0:	3214      	adds	r2, #20
  4006c2:	f603 7cf8 	addw	ip, r3, #4088	; 0xff8
  4006c6:	4653      	mov	r3, sl
  4006c8:	edd4 6a00 	vldr	s13, [r4]
  4006cc:	ed94 6a01 	vldr	s12, [r4, #4]
  4006d0:	edde 7a00 	vldr	s15, [lr]
  4006d4:	ed9e 7a01 	vldr	s14, [lr, #4]
	*resultRe = a*c - b*d;
  4006d8:	ee26 5aa7 	vmul.f32	s10, s13, s15
  4006dc:	ee66 5a07 	vmul.f32	s11, s12, s14
  4006e0:	ee75 5a65 	vsub.f32	s11, s10, s11
  4006e4:	ed41 5a01 	vstr	s11, [r1, #-4]
	*resultIm = b*c + a*d;
  4006e8:	ee66 7a27 	vmul.f32	s15, s12, s15
  4006ec:	ee26 7a87 	vmul.f32	s14, s13, s14
  4006f0:	ee77 7a87 	vadd.f32	s15, s15, s14
  4006f4:	edc0 7a01 	vstr	s15, [r0, #4]
					 IRComplFftBuf[bin+1],
					 multResultBuf + bin,
					 multResultBuf + bin+1
					 );
					 
			convResultBuf[bin] += multResultBuf[bin];
  4006f8:	ed52 6a01 	vldr	s13, [r2, #-4]
  4006fc:	ed11 7a01 	vldr	s14, [r1, #-4]
  400700:	ee36 7a87 	vadd.f32	s14, s13, s14
  400704:	ed02 7a01 	vstr	s14, [r2, #-4]
			convResultBuf[bin+1] += multResultBuf[bin+1];
  400708:	ed93 7a01 	vldr	s14, [r3, #4]
  40070c:	ee77 7a27 	vadd.f32	s15, s14, s15
  400710:	edc3 7a01 	vstr	s15, [r3, #4]
  400714:	3408      	adds	r4, #8
  400716:	f10e 0e08 	add.w	lr, lr, #8
  40071a:	3008      	adds	r0, #8
  40071c:	3308      	adds	r3, #8
  40071e:	3108      	adds	r1, #8
  400720:	3208      	adds	r2, #8
		for (uint16_t bin = 0; bin < CONVOL_BLOCKSZ; bin += 2){
  400722:	4560      	cmp	r0, ip
  400724:	d1d0      	bne.n	4006c8 <convolve+0xdc>
		}

		bufArrayIndex[channel] = (bufArrayIndex[channel] + 1) % NR_OF_BUFFS;
  400726:	f10b 0301 	add.w	r3, fp, #1
  40072a:	4923      	ldr	r1, [pc, #140]	; (4007b8 <convolve+0x1cc>)
  40072c:	fb81 2103 	smull	r2, r1, r1, r3
  400730:	17da      	asrs	r2, r3, #31
  400732:	ebc2 0261 	rsb	r2, r2, r1, asr #1
  400736:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  40073a:	1a9b      	subs	r3, r3, r2
  40073c:	7133      	strb	r3, [r6, #4]
	while (IRbufIndex >= 0){
  40073e:	42bd      	cmp	r5, r7
  400740:	d1a6      	bne.n	400690 <convolve+0xa4>
  400742:	4654      	mov	r4, sl
		IRbufIndex--;
	}
	
	
	// IFFT
	arm_cfft_f32(S, convResultBuf, FFT_INVERSE, FFT_BITREVERSE);
  400744:	2301      	movs	r3, #1
  400746:	461a      	mov	r2, r3
  400748:	f50d 5100 	add.w	r1, sp, #8192	; 0x2000
  40074c:	3110      	adds	r1, #16
  40074e:	4818      	ldr	r0, [pc, #96]	; (4007b0 <convolve+0x1c4>)
  400750:	6a80      	ldr	r0, [r0, #40]	; 0x28
  400752:	4d18      	ldr	r5, [pc, #96]	; (4007b4 <convolve+0x1c8>)
  400754:	47a8      	blx	r5
	
	// save convolution tail
	for (uint16_t sample = 0; sample < IR_PARTSZ; sample++){
		convResultBuf[sample] += overlapBufArray[channel][sample];
  400756:	f50d 5300 	add.w	r3, sp, #8192	; 0x2000
  40075a:	3310      	adds	r3, #16
  40075c:	3b08      	subs	r3, #8
  40075e:	9a00      	ldr	r2, [sp, #0]
  400760:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  400764:	f50d 5020 	add.w	r0, sp, #10240	; 0x2800
  400768:	3010      	adds	r0, #16
  40076a:	4602      	mov	r2, r0
  40076c:	ed94 7a00 	vldr	s14, [r4]
  400770:	edd3 7a00 	vldr	s15, [r3]
  400774:	ee77 7a27 	vadd.f32	s15, s14, s15
  400778:	ece4 7a01 	vstmia	r4!, {s15}
		overlapBufArray[channel][sample] = convResultBuf[IR_PARTSZ + sample];
  40077c:	f852 1b04 	ldr.w	r1, [r2], #4
  400780:	f843 1b04 	str.w	r1, [r3], #4
	for (uint16_t sample = 0; sample < IR_PARTSZ; sample++){
  400784:	42a0      	cmp	r0, r4
  400786:	d1f1      	bne.n	40076c <convolve+0x180>
	}
	
	// convert complex timedom back to real timedom
	// the tail that has been saved in overlapBuf will be cut off
	timeDomC2R(convResultBuf, outputAudioBuf, I2SC_BUFFSZ);
  400788:	f44f 7280 	mov.w	r2, #256	; 0x100
  40078c:	9901      	ldr	r1, [sp, #4]
  40078e:	f50d 5000 	add.w	r0, sp, #8192	; 0x2000
  400792:	3010      	adds	r0, #16
  400794:	4b0a      	ldr	r3, [pc, #40]	; (4007c0 <convolve+0x1d4>)
  400796:	4798      	blx	r3

}
  400798:	f50d 5d40 	add.w	sp, sp, #12288	; 0x3000
  40079c:	b005      	add	sp, #20
  40079e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4007a2:	bf00      	nop
  4007a4:	20000018 	.word	0x20000018
  4007a8:	200008d0 	.word	0x200008d0
  4007ac:	00400509 	.word	0x00400509
  4007b0:	20000004 	.word	0x20000004
  4007b4:	0040176d 	.word	0x0040176d
  4007b8:	66666667 	.word	0x66666667
  4007bc:	004026f1 	.word	0x004026f1
  4007c0:	00400529 	.word	0x00400529
  4007c4:	00400545 	.word	0x00400545

004007c8 <main>:



int main(void)
{
  4007c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4007cc:	b085      	sub	sp, #20
	/* Initialize the SAM system, run of default 8MHz clock ATM */
	SystemInit();
  4007ce:	4ba9      	ldr	r3, [pc, #676]	; (400a74 <main+0x2ac>)
  4007d0:	4798      	blx	r3


static void Init_Board(void)
{
	#if (__FPU_PRESENT == 1)
	fpu_enable();
  4007d2:	4ba9      	ldr	r3, [pc, #676]	; (400a78 <main+0x2b0>)
  4007d4:	4798      	blx	r3
}

//chapter 17.3
static uint8_t Init_Clock(void)	//run clock @ 120MHz
{
	EFC->EEFC_FMR = EEFC_FMR_FWS(5) | EEFC_FMR_CLOE; //set flash wait state to max. for 120MHz clock
  4007d6:	4aa9      	ldr	r2, [pc, #676]	; (400a7c <main+0x2b4>)
  4007d8:	4ba9      	ldr	r3, [pc, #676]	; (400a80 <main+0x2b8>)
  4007da:	601a      	str	r2, [r3, #0]
	
	//enable crystal osc source
	SUPC -> SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;		//switch slow clock on EXTOSC
  4007dc:	4aa9      	ldr	r2, [pc, #676]	; (400a84 <main+0x2bc>)
  4007de:	f503 6321 	add.w	r3, r3, #2576	; 0xa10
  4007e2:	601a      	str	r2, [r3, #0]
	while (!  ((SUPC->SUPC_SR & SUPC_SR_OSCSEL) && (PMC->PMC_SR & PMC_SR_OSCSELS))); //wait for OSC to be ready
  4007e4:	461a      	mov	r2, r3
  4007e6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
  4007ea:	3b10      	subs	r3, #16
  4007ec:	6951      	ldr	r1, [r2, #20]
  4007ee:	f011 0f80 	tst.w	r1, #128	; 0x80
  4007f2:	d0fb      	beq.n	4007ec <main+0x24>
  4007f4:	6e99      	ldr	r1, [r3, #104]	; 0x68
  4007f6:	f011 0f80 	tst.w	r1, #128	; 0x80
  4007fa:	d0f7      	beq.n	4007ec <main+0x24>
	
	//PLL enable and lock
	/* 120.000.000 = 32.768 * (3661 + 1) */
	PMC -> CKGR_PLLAR = CKGR_PLLAR_MULA(0);		//Always stop PLL first
  4007fc:	4ba2      	ldr	r3, [pc, #648]	; (400a88 <main+0x2c0>)
  4007fe:	2200      	movs	r2, #0
  400800:	629a      	str	r2, [r3, #40]	; 0x28
	PMC -> CKGR_PLLAR =  CKGR_PLLAR_MULA(3661) | CKGR_PLLAR_PLLAEN(1) | CKGR_PLLAR_PLLACOUNT(0x3FU);
  400802:	4aa2      	ldr	r2, [pc, #648]	; (400a8c <main+0x2c4>)
  400804:	629a      	str	r2, [r3, #40]	; 0x28
	while (! (PMC -> PMC_SR & PMC_SR_LOCKA) );	//wait for PLL lock
  400806:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  400808:	f012 0f02 	tst.w	r2, #2
  40080c:	d0fb      	beq.n	400806 <main+0x3e>
	
	//PMC switch MCK to PLL
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk));
  40080e:	4b9e      	ldr	r3, [pc, #632]	; (400a88 <main+0x2c0>)
  400810:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400812:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400816:	631a      	str	r2, [r3, #48]	; 0x30
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  400818:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40081a:	f013 0f08 	tst.w	r3, #8
  40081e:	d04d      	beq.n	4008bc <main+0xf4>
		if (ul_timeout == 0) {
			return 1;
		}
	}
	
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |	PMC_MCKR_CSS_PLLA_CLK;
  400820:	4a99      	ldr	r2, [pc, #612]	; (400a88 <main+0x2c0>)
  400822:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400824:	f023 0303 	bic.w	r3, r3, #3
  400828:	f043 0302 	orr.w	r3, r3, #2
  40082c:	6313      	str	r3, [r2, #48]	; 0x30

	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  40082e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400830:	f013 0f08 	tst.w	r3, #8
  400834:	d04d      	beq.n	4008d2 <main+0x10a>
			return 1;
		}
	}

	//trim clock to 120MHz    trim value 12
	uint32_t ul_pwmr = SUPC -> SUPC_PWMR & (~(0xFu << 9));
  400836:	4a96      	ldr	r2, [pc, #600]	; (400a90 <main+0x2c8>)
  400838:	69d3      	ldr	r3, [r2, #28]
  40083a:	f423 53f0 	bic.w	r3, r3, #7680	; 0x1e00
	SUPC -> SUPC_PWMR = SUPC_PWMR_KEY_PASSWD | ul_pwmr | SUPC_PWMR_ECPWRS | ((12 & 0xFu) << 9);
  40083e:	f043 43b4 	orr.w	r3, r3, #1509949440	; 0x5a000000
  400842:	f443 53c8 	orr.w	r3, r3, #6400	; 0x1900
  400846:	61d3      	str	r3, [r2, #28]
	WDT -> WDT_CR = WDT_CR_KEY_PASSWD;
  400848:	4b92      	ldr	r3, [pc, #584]	; (400a94 <main+0x2cc>)
  40084a:	f04f 4225 	mov.w	r2, #2768240640	; 0xa5000000
  40084e:	601a      	str	r2, [r3, #0]
	WDT -> WDT_MR = WDT_MR_WDDIS;	//disable WDT, register can be written only once
  400850:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400854:	605a      	str	r2, [r3, #4]
	Setup_PMC();
  400856:	4b90      	ldr	r3, [pc, #576]	; (400a98 <main+0x2d0>)
  400858:	4798      	blx	r3
	Init_PIO();
  40085a:	4b90      	ldr	r3, [pc, #576]	; (400a9c <main+0x2d4>)
  40085c:	4798      	blx	r3
	Init_UART();
  40085e:	4b90      	ldr	r3, [pc, #576]	; (400aa0 <main+0x2d8>)
  400860:	4798      	blx	r3
	Setup_Matrix();
  400862:	4b90      	ldr	r3, [pc, #576]	; (400aa4 <main+0x2dc>)
  400864:	4798      	blx	r3
	Init_TWI();
  400866:	4b90      	ldr	r3, [pc, #576]	; (400aa8 <main+0x2e0>)
  400868:	4798      	blx	r3
	AK4588EN_Init();
  40086a:	4b90      	ldr	r3, [pc, #576]	; (400aac <main+0x2e4>)
  40086c:	4798      	blx	r3
	UART_Printf("fpu, %d\r\n", ((REG_CPACR & 0xF00000) >> 20));
  40086e:	4b90      	ldr	r3, [pc, #576]	; (400ab0 <main+0x2e8>)
  400870:	6819      	ldr	r1, [r3, #0]
  400872:	f3c1 5103 	ubfx	r1, r1, #20, #4
  400876:	488f      	ldr	r0, [pc, #572]	; (400ab4 <main+0x2ec>)
  400878:	4b8f      	ldr	r3, [pc, #572]	; (400ab8 <main+0x2f0>)
  40087a:	4798      	blx	r3
	Init_I2SC(TransmitBufL1, TransmitBufR1, ReceiveBufL1, ReceiveBufR1, I2SC_BUFFSZ);
  40087c:	488f      	ldr	r0, [pc, #572]	; (400abc <main+0x2f4>)
  40087e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400882:	9300      	str	r3, [sp, #0]
  400884:	f1a0 03f0 	sub.w	r3, r0, #240	; 0xf0
  400888:	f500 7244 	add.w	r2, r0, #784	; 0x310
  40088c:	f500 61e2 	add.w	r1, r0, #1808	; 0x710
  400890:	f500 6031 	add.w	r0, r0, #2832	; 0xb10
  400894:	4c8a      	ldr	r4, [pc, #552]	; (400ac0 <main+0x2f8>)
  400896:	47a0      	blx	r4
	UART_Puts("\r\nBoard_Init successful\r\nNow starting program\r\n");
  400898:	488a      	ldr	r0, [pc, #552]	; (400ac4 <main+0x2fc>)
  40089a:	4b8b      	ldr	r3, [pc, #556]	; (400ac8 <main+0x300>)
  40089c:	4798      	blx	r3
	printf("Cassette recorder convolution OFF\r\n");
  40089e:	488b      	ldr	r0, [pc, #556]	; (400acc <main+0x304>)
  4008a0:	4b8b      	ldr	r3, [pc, #556]	; (400ad0 <main+0x308>)
  4008a2:	4798      	blx	r3
  4008a4:	4b8b      	ldr	r3, [pc, #556]	; (400ad4 <main+0x30c>)
  4008a6:	f503 63a4 	add.w	r3, r3, #1312	; 0x520
  4008aa:	9303      	str	r3, [sp, #12]
  4008ac:	e05a      	b.n	400964 <main+0x19c>
		if (ul_timeout == 0) {
  4008ae:	3b01      	subs	r3, #1
  4008b0:	d0ca      	beq.n	400848 <main+0x80>
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  4008b2:	6e91      	ldr	r1, [r2, #104]	; 0x68
  4008b4:	f011 0f08 	tst.w	r1, #8
  4008b8:	d0f9      	beq.n	4008ae <main+0xe6>
  4008ba:	e7b1      	b.n	400820 <main+0x58>
  4008bc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4008c0:	4a71      	ldr	r2, [pc, #452]	; (400a88 <main+0x2c0>)
  4008c2:	e7f6      	b.n	4008b2 <main+0xea>
		if (ul_timeout == 0) {
  4008c4:	3b01      	subs	r3, #1
  4008c6:	d0bf      	beq.n	400848 <main+0x80>
	for (uint32_t ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);	--ul_timeout) {
  4008c8:	6e91      	ldr	r1, [r2, #104]	; 0x68
  4008ca:	f011 0f08 	tst.w	r1, #8
  4008ce:	d0f9      	beq.n	4008c4 <main+0xfc>
  4008d0:	e7b1      	b.n	400836 <main+0x6e>
  4008d2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4008d6:	4a6c      	ldr	r2, [pc, #432]	; (400a88 <main+0x2c0>)
  4008d8:	e7f6      	b.n	4008c8 <main+0x100>
					printConvState(CONV_ON);
  4008da:	2001      	movs	r0, #1
  4008dc:	4b7e      	ldr	r3, [pc, #504]	; (400ad8 <main+0x310>)
  4008de:	4798      	blx	r3
  4008e0:	4b76      	ldr	r3, [pc, #472]	; (400abc <main+0x2f4>)
  4008e2:	f503 7443 	add.w	r4, r3, #780	; 0x30c
  4008e6:	f503 6771 	add.w	r7, r3, #3856	; 0xf10
  4008ea:	f1a3 06f4 	sub.w	r6, r3, #244	; 0xf4
  4008ee:	4d7b      	ldr	r5, [pc, #492]	; (400adc <main+0x314>)
  4008f0:	f203 7b0c 	addw	fp, r3, #1804	; 0x70c
	double dval = (double) in; // int32 -> double
  4008f4:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 400af4 <main+0x32c>
	dval /= frac_int2float;
  4008f8:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 400af8 <main+0x330>
	return (float) dval; // double -> float
  4008fc:	f8df 81fc 	ldr.w	r8, [pc, #508]	; 400afc <main+0x334>
						else			{ TransmitBufL2[i] = ReceiveBufL1[i]; }
  400900:	f854 3f04 	ldr.w	r3, [r4, #4]!
  400904:	f847 3f04 	str.w	r3, [r7, #4]!
	double dval = (double) in; // int32 -> double
  400908:	f856 0f04 	ldr.w	r0, [r6, #4]!
  40090c:	47d0      	blx	sl
	dval /= frac_int2float;
  40090e:	2200      	movs	r2, #0
  400910:	f04f 5378 	mov.w	r3, #1040187392	; 0x3e000000
  400914:	47c8      	blx	r9
	return (float) dval; // double -> float
  400916:	47c0      	blx	r8
  400918:	f845 0b04 	str.w	r0, [r5], #4
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  40091c:	455c      	cmp	r4, fp
  40091e:	d1ef      	bne.n	400900 <main+0x138>
					convolve(transferBufInputR, transferBufOutputR, CHANNEL_R);
  400920:	4e6f      	ldr	r6, [pc, #444]	; (400ae0 <main+0x318>)
  400922:	f206 641c 	addw	r4, r6, #1564	; 0x61c
  400926:	2201      	movs	r2, #1
  400928:	4621      	mov	r1, r4
  40092a:	f506 7007 	add.w	r0, r6, #540	; 0x21c
  40092e:	4b6d      	ldr	r3, [pc, #436]	; (400ae4 <main+0x31c>)
  400930:	4798      	blx	r3
  400932:	f606 2518 	addw	r5, r6, #2584	; 0xa18
  400936:	f606 261c 	addw	r6, r6, #2588	; 0xa1c
	double dval = (double) fl; // float -> double
  40093a:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 400b00 <main+0x338>
	dval *= frac_int2float;
  40093e:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 400af8 <main+0x330>
	return (int32_t) dval; // double -> int32
  400942:	4f69      	ldr	r7, [pc, #420]	; (400ae8 <main+0x320>)
	double dval = (double) fl; // float -> double
  400944:	f854 0b04 	ldr.w	r0, [r4], #4
  400948:	47c8      	blx	r9
	dval *= frac_int2float;
  40094a:	2200      	movs	r2, #0
  40094c:	4b67      	ldr	r3, [pc, #412]	; (400aec <main+0x324>)
  40094e:	47c0      	blx	r8
	return (int32_t) dval; // double -> int32
  400950:	47b8      	blx	r7
  400952:	f845 0f04 	str.w	r0, [r5, #4]!
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  400956:	42b4      	cmp	r4, r6
  400958:	d1f4      	bne.n	400944 <main+0x17c>
			newdata = 0;
  40095a:	2300      	movs	r3, #0
  40095c:	4a57      	ldr	r2, [pc, #348]	; (400abc <main+0x2f4>)
  40095e:	f882 3f10 	strb.w	r3, [r2, #3856]	; 0xf10
		asm("nop");
  400962:	bf00      	nop
		if (newdata) {
  400964:	4b55      	ldr	r3, [pc, #340]	; (400abc <main+0x2f4>)
  400966:	f893 3f10 	ldrb.w	r3, [r3, #3856]	; 0xf10
  40096a:	2b00      	cmp	r3, #0
  40096c:	d0f9      	beq.n	400962 <main+0x19a>
			if (PingPong == PING) {
  40096e:	4b53      	ldr	r3, [pc, #332]	; (400abc <main+0x2f4>)
  400970:	f893 3f11 	ldrb.w	r3, [r3, #3857]	; 0xf11
  400974:	bb0b      	cbnz	r3, 4009ba <main+0x1f2>
				if (UART_Getchar() == CONV_TRIGGER){ // conv on
  400976:	4b5e      	ldr	r3, [pc, #376]	; (400af0 <main+0x328>)
  400978:	4798      	blx	r3
  40097a:	2867      	cmp	r0, #103	; 0x67
  40097c:	d0ad      	beq.n	4008da <main+0x112>
					printConvState(CONV_OFF);
  40097e:	2000      	movs	r0, #0
  400980:	4b55      	ldr	r3, [pc, #340]	; (400ad8 <main+0x310>)
  400982:	4798      	blx	r3
  400984:	4b4d      	ldr	r3, [pc, #308]	; (400abc <main+0x2f4>)
  400986:	f503 7343 	add.w	r3, r3, #780	; 0x30c
  40098a:	f5a3 7243 	sub.w	r2, r3, #780	; 0x30c
  40098e:	f502 6071 	add.w	r0, r2, #3856	; 0xf10
  400992:	4a53      	ldr	r2, [pc, #332]	; (400ae0 <main+0x318>)
  400994:	f602 6118 	addw	r1, r2, #3608	; 0xe18
  400998:	f602 2218 	addw	r2, r2, #2584	; 0xa18
  40099c:	f5a0 6471 	sub.w	r4, r0, #3856	; 0xf10
  4009a0:	f204 750c 	addw	r5, r4, #1804	; 0x70c
						TransmitBufL2[i] = ReceiveBufL1[i];
  4009a4:	f853 4f04 	ldr.w	r4, [r3, #4]!
  4009a8:	f840 4f04 	str.w	r4, [r0, #4]!
						TransmitBufR2[i] = ReceiveBufR2[i];
  4009ac:	f851 4f04 	ldr.w	r4, [r1, #4]!
  4009b0:	f842 4f04 	str.w	r4, [r2, #4]!
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  4009b4:	42ab      	cmp	r3, r5
  4009b6:	d1f5      	bne.n	4009a4 <main+0x1dc>
  4009b8:	e7cf      	b.n	40095a <main+0x192>
				if (UART_Getchar() == CONV_TRIGGER){  // conv on
  4009ba:	4b4d      	ldr	r3, [pc, #308]	; (400af0 <main+0x328>)
  4009bc:	4798      	blx	r3
  4009be:	2867      	cmp	r0, #103	; 0x67
  4009c0:	d015      	beq.n	4009ee <main+0x226>
  4009c2:	4b44      	ldr	r3, [pc, #272]	; (400ad4 <main+0x30c>)
  4009c4:	f503 7390 	add.w	r3, r3, #288	; 0x120
  4009c8:	4a3c      	ldr	r2, [pc, #240]	; (400abc <main+0x2f4>)
  4009ca:	f602 300c 	addw	r0, r2, #2828	; 0xb0c
  4009ce:	f1a2 01f4 	sub.w	r1, r2, #244	; 0xf4
  4009d2:	f202 720c 	addw	r2, r2, #1804	; 0x70c
  4009d6:	9d03      	ldr	r5, [sp, #12]
						TransmitBufL1[i] = ReceiveBufL2[i];
  4009d8:	f853 4f04 	ldr.w	r4, [r3, #4]!
  4009dc:	f840 4f04 	str.w	r4, [r0, #4]!
						TransmitBufR1[i] = ReceiveBufR1[i];
  4009e0:	f851 4f04 	ldr.w	r4, [r1, #4]!
  4009e4:	f842 4f04 	str.w	r4, [r2, #4]!
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  4009e8:	42ab      	cmp	r3, r5
  4009ea:	d1f5      	bne.n	4009d8 <main+0x210>
  4009ec:	e7b5      	b.n	40095a <main+0x192>
  4009ee:	4b39      	ldr	r3, [pc, #228]	; (400ad4 <main+0x30c>)
  4009f0:	f503 7490 	add.w	r4, r3, #288	; 0x120
  4009f4:	4b31      	ldr	r3, [pc, #196]	; (400abc <main+0x2f4>)
  4009f6:	f603 370c 	addw	r7, r3, #2828	; 0xb0c
  4009fa:	4d39      	ldr	r5, [pc, #228]	; (400ae0 <main+0x318>)
  4009fc:	f605 6618 	addw	r6, r5, #3608	; 0xe18
  400a00:	f505 7507 	add.w	r5, r5, #540	; 0x21c
	double dval = (double) in; // int32 -> double
  400a04:	f8df a0ec 	ldr.w	sl, [pc, #236]	; 400af4 <main+0x32c>
	dval /= frac_int2float;
  400a08:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 400af8 <main+0x330>
	return (float) dval; // double -> float
  400a0c:	f8df 80ec 	ldr.w	r8, [pc, #236]	; 400afc <main+0x334>
  400a10:	f8dd b00c 	ldr.w	fp, [sp, #12]
						else			{ TransmitBufL1[i] = ReceiveBufL2[i]; }
  400a14:	f854 3f04 	ldr.w	r3, [r4, #4]!
  400a18:	f847 3f04 	str.w	r3, [r7, #4]!
	double dval = (double) in; // int32 -> double
  400a1c:	f856 0f04 	ldr.w	r0, [r6, #4]!
  400a20:	47d0      	blx	sl
	dval /= frac_int2float;
  400a22:	2200      	movs	r2, #0
  400a24:	f04f 5378 	mov.w	r3, #1040187392	; 0x3e000000
  400a28:	47c8      	blx	r9
	return (float) dval; // double -> float
  400a2a:	47c0      	blx	r8
  400a2c:	f845 0b04 	str.w	r0, [r5], #4
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  400a30:	455c      	cmp	r4, fp
  400a32:	d1ef      	bne.n	400a14 <main+0x24c>
					convolve(transferBufInputR, transferBufOutputR, CHANNEL_R);
  400a34:	4e2a      	ldr	r6, [pc, #168]	; (400ae0 <main+0x318>)
  400a36:	f206 641c 	addw	r4, r6, #1564	; 0x61c
  400a3a:	2201      	movs	r2, #1
  400a3c:	4621      	mov	r1, r4
  400a3e:	f506 7007 	add.w	r0, r6, #540	; 0x21c
  400a42:	4b28      	ldr	r3, [pc, #160]	; (400ae4 <main+0x31c>)
  400a44:	4798      	blx	r3
  400a46:	4b1d      	ldr	r3, [pc, #116]	; (400abc <main+0x2f4>)
  400a48:	f203 750c 	addw	r5, r3, #1804	; 0x70c
  400a4c:	f606 261c 	addw	r6, r6, #2588	; 0xa1c
	double dval = (double) fl; // float -> double
  400a50:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 400b00 <main+0x338>
	dval *= frac_int2float;
  400a54:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 400af8 <main+0x330>
	return (int32_t) dval; // double -> int32
  400a58:	4f23      	ldr	r7, [pc, #140]	; (400ae8 <main+0x320>)
	double dval = (double) fl; // float -> double
  400a5a:	f854 0b04 	ldr.w	r0, [r4], #4
  400a5e:	47c8      	blx	r9
	dval *= frac_int2float;
  400a60:	2200      	movs	r2, #0
  400a62:	4b22      	ldr	r3, [pc, #136]	; (400aec <main+0x324>)
  400a64:	47c0      	blx	r8
	return (int32_t) dval; // double -> int32
  400a66:	47b8      	blx	r7
  400a68:	f845 0f04 	str.w	r0, [r5, #4]!
					for (uint16_t i = 0; i < I2SC_BUFFSZ; i++){
  400a6c:	42b4      	cmp	r4, r6
  400a6e:	d1f4      	bne.n	400a5a <main+0x292>
  400a70:	e773      	b.n	40095a <main+0x192>
  400a72:	bf00      	nop
  400a74:	004003fd 	.word	0x004003fd
  400a78:	004004f1 	.word	0x004004f1
  400a7c:	04000500 	.word	0x04000500
  400a80:	400e0a00 	.word	0x400e0a00
  400a84:	a5000008 	.word	0xa5000008
  400a88:	400e0400 	.word	0x400e0400
  400a8c:	0e4d3f01 	.word	0x0e4d3f01
  400a90:	400e1410 	.word	0x400e1410
  400a94:	400e1450 	.word	0x400e1450
  400a98:	00400ccd 	.word	0x00400ccd
  400a9c:	00400c55 	.word	0x00400c55
  400aa0:	00400f01 	.word	0x00400f01
  400aa4:	00400bf1 	.word	0x00400bf1
  400aa8:	00400e35 	.word	0x00400e35
  400aac:	00400175 	.word	0x00400175
  400ab0:	e000ed88 	.word	0xe000ed88
  400ab4:	00406c1c 	.word	0x00406c1c
  400ab8:	00400fd5 	.word	0x00400fd5
  400abc:	200019c8 	.word	0x200019c8
  400ac0:	00400459 	.word	0x00400459
  400ac4:	00406c28 	.word	0x00406c28
  400ac8:	00400fa9 	.word	0x00400fa9
  400acc:	00406c58 	.word	0x00406c58
  400ad0:	00402829 	.word	0x00402829
  400ad4:	20003bb8 	.word	0x20003bb8
  400ad8:	004005b5 	.word	0x004005b5
  400adc:	20002cdc 	.word	0x20002cdc
  400ae0:	20002ac0 	.word	0x20002ac0
  400ae4:	004005ed 	.word	0x004005ed
  400ae8:	004025b1 	.word	0x004025b1
  400aec:	41e00000 	.word	0x41e00000
  400af0:	00401115 	.word	0x00401115
  400af4:	004020c1 	.word	0x004020c1
  400af8:	0040218d 	.word	0x0040218d
  400afc:	00402601 	.word	0x00402601
  400b00:	004020e5 	.word	0x004020e5

00400b04 <I2SC0_Handler>:


void I2SC0_Handler(void)
{
		
	if (channelCount == CHANNEL_L && (I2SC0 -> I2SC_SR & I2SC_SR_ENDTX) ) {
  400b04:	4b34      	ldr	r3, [pc, #208]	; (400bd8 <I2SC0_Handler+0xd4>)
  400b06:	f893 3524 	ldrb.w	r3, [r3, #1316]	; 0x524
  400b0a:	bb73      	cbnz	r3, 400b6a <I2SC0_Handler+0x66>
  400b0c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400b10:	689b      	ldr	r3, [r3, #8]
  400b12:	f013 0f80 	tst.w	r3, #128	; 0x80
  400b16:	d04c      	beq.n	400bb2 <I2SC0_Handler+0xae>

		if (PingPong == PING) {
  400b18:	4b30      	ldr	r3, [pc, #192]	; (400bdc <I2SC0_Handler+0xd8>)
  400b1a:	f893 3f11 	ldrb.w	r3, [r3, #3857]	; 0xf11
  400b1e:	b9ab      	cbnz	r3, 400b4c <I2SC0_Handler+0x48>
			I2SC0 -> I2SC_TNPR = (uint32_t)TransmitBufL1; //transmit buffer 1
  400b20:	4a2e      	ldr	r2, [pc, #184]	; (400bdc <I2SC0_Handler+0xd8>)
  400b22:	f502 6131 	add.w	r1, r2, #2832	; 0xb10
  400b26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400b2a:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
			I2SC0 -> I2SC_TNCR = I2SC_BUFFSZ;
  400b2e:	f44f 7180 	mov.w	r1, #256	; 0x100
  400b32:	f8c3 111c 	str.w	r1, [r3, #284]	; 0x11c
			
			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL1; //receive to buffer 1
  400b36:	f502 7244 	add.w	r2, r2, #784	; 0x310
  400b3a:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
  400b3e:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114

			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL2;		//read to buffer 2
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
		}

		channelCount = CHANNEL_R;
  400b42:	2201      	movs	r2, #1
  400b44:	4b24      	ldr	r3, [pc, #144]	; (400bd8 <I2SC0_Handler+0xd4>)
  400b46:	f883 2524 	strb.w	r2, [r3, #1316]	; 0x524
  400b4a:	4770      	bx	lr
			I2SC0 -> I2SC_TNPR = (uint32_t)TransmitBufL2;	//transmit buffer 2
  400b4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400b50:	4a23      	ldr	r2, [pc, #140]	; (400be0 <I2SC0_Handler+0xdc>)
  400b52:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			I2SC0 -> I2SC_TNCR = I2SC_BUFFSZ;
  400b56:	f44f 7280 	mov.w	r2, #256	; 0x100
  400b5a:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
			I2SC0 -> I2SC_RNPR = (uint32_t)ReceiveBufL2;		//read to buffer 2
  400b5e:	4921      	ldr	r1, [pc, #132]	; (400be4 <I2SC0_Handler+0xe0>)
  400b60:	f8c3 1110 	str.w	r1, [r3, #272]	; 0x110
			I2SC0 -> I2SC_RNCR = I2SC_BUFFSZ;
  400b64:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  400b68:	e7eb      	b.n	400b42 <I2SC0_Handler+0x3e>
		
	} else if (channelCount == CHANNEL_R && (I2SC0 -> I2SC_SR & I2SC_SR_ENDTX) ) {	
  400b6a:	2b01      	cmp	r3, #1
  400b6c:	d121      	bne.n	400bb2 <I2SC0_Handler+0xae>
  400b6e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  400b72:	689b      	ldr	r3, [r3, #8]
  400b74:	f013 0f80 	tst.w	r3, #128	; 0x80
  400b78:	d01b      	beq.n	400bb2 <I2SC0_Handler+0xae>
		
		if (PingPong == PING) {
  400b7a:	4b18      	ldr	r3, [pc, #96]	; (400bdc <I2SC0_Handler+0xd8>)
  400b7c:	f893 3f11 	ldrb.w	r3, [r3, #3857]	; 0xf11
  400b80:	b9c3      	cbnz	r3, 400bb4 <I2SC0_Handler+0xb0>
			I2SC0_2 -> PERIPH_TNPR = (uint32_t)TransmitBufR1;
  400b82:	4b19      	ldr	r3, [pc, #100]	; (400be8 <I2SC0_Handler+0xe4>)
  400b84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  400b86:	4a15      	ldr	r2, [pc, #84]	; (400bdc <I2SC0_Handler+0xd8>)
  400b88:	f502 61e2 	add.w	r1, r2, #1808	; 0x710
  400b8c:	6199      	str	r1, [r3, #24]
			I2SC0_2 -> PERIPH_TNCR = I2SC_BUFFSZ;
  400b8e:	f44f 7180 	mov.w	r1, #256	; 0x100
  400b92:	61d9      	str	r1, [r3, #28]

			I2SC0_2 -> PERIPH_RNPR = (uint32_t)ReceiveBufR1;
  400b94:	f1a2 00f0 	sub.w	r0, r2, #240	; 0xf0
  400b98:	6118      	str	r0, [r3, #16]
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
  400b9a:	6159      	str	r1, [r3, #20]

			PingPong = PONG; 
  400b9c:	2301      	movs	r3, #1
  400b9e:	f882 3f11 	strb.w	r3, [r2, #3857]	; 0xf11
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
			
			PingPong = PING;
		}
		
		channelCount = CHANNEL_L;
  400ba2:	2200      	movs	r2, #0
  400ba4:	4b0c      	ldr	r3, [pc, #48]	; (400bd8 <I2SC0_Handler+0xd4>)
  400ba6:	f883 2524 	strb.w	r2, [r3, #1316]	; 0x524
		newdata = 1;
  400baa:	2201      	movs	r2, #1
  400bac:	4b0b      	ldr	r3, [pc, #44]	; (400bdc <I2SC0_Handler+0xd8>)
  400bae:	f883 2f10 	strb.w	r2, [r3, #3856]	; 0xf10
  400bb2:	4770      	bx	lr
			I2SC0_2 -> PERIPH_TNPR = (uint32_t)TransmitBufR2;
  400bb4:	4b0c      	ldr	r3, [pc, #48]	; (400be8 <I2SC0_Handler+0xe4>)
  400bb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  400bb8:	4a0c      	ldr	r2, [pc, #48]	; (400bec <I2SC0_Handler+0xe8>)
  400bba:	f602 211c 	addw	r1, r2, #2588	; 0xa1c
  400bbe:	6199      	str	r1, [r3, #24]
			I2SC0_2 -> PERIPH_TNCR = I2SC_BUFFSZ;
  400bc0:	f44f 7180 	mov.w	r1, #256	; 0x100
  400bc4:	61d9      	str	r1, [r3, #28]
			I2SC0_2 -> PERIPH_RNPR = (uint32_t)ReceiveBufR2;
  400bc6:	f602 621c 	addw	r2, r2, #3612	; 0xe1c
  400bca:	611a      	str	r2, [r3, #16]
			I2SC0_2 -> PERIPH_RNCR = I2SC_BUFFSZ;
  400bcc:	6159      	str	r1, [r3, #20]
			PingPong = PING;
  400bce:	2200      	movs	r2, #0
  400bd0:	4b02      	ldr	r3, [pc, #8]	; (400bdc <I2SC0_Handler+0xd8>)
  400bd2:	f883 2f11 	strb.w	r2, [r3, #3857]	; 0xf11
  400bd6:	e7e4      	b.n	400ba2 <I2SC0_Handler+0x9e>
  400bd8:	20003bb8 	.word	0x20003bb8
  400bdc:	200019c8 	.word	0x200019c8
  400be0:	200028dc 	.word	0x200028dc
  400be4:	20003cdc 	.word	0x20003cdc
  400be8:	20000004 	.word	0x20000004
  400bec:	20002ac0 	.word	0x20002ac0

00400bf0 <Setup_Matrix>:


void Setup_Matrix(void)
{
	/* Setup MATRIX[1] (processor system bus) slave peripheral bridge (MATRIX[3]) */
	MATRIX -> MATRIX_WPMR &=~(MATRIX_WPMR_WPEN);
  400bf0:	4b06      	ldr	r3, [pc, #24]	; (400c0c <Setup_Matrix+0x1c>)
  400bf2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	; 0x1e4
  400bf6:	f022 0201 	bic.w	r2, r2, #1
  400bfa:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	MATRIX -> MATRIX_WPMR = (MATRIX_WPMR_WPKEY_PASSWD);
  400bfe:	4a04      	ldr	r2, [pc, #16]	; (400c10 <Setup_Matrix+0x20>)
  400c00:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	
	//set I2S clock
	MATRIX -> CCFG_I2SCLKSEL = CCFG_I2SCLKSEL_CLKSEL0; //run I2SC of PCK4
  400c04:	2201      	movs	r2, #1
  400c06:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
  400c0a:	4770      	bx	lr
  400c0c:	400e0200 	.word	0x400e0200
  400c10:	4d415400 	.word	0x4d415400

00400c14 <Led3State>:
	AK4558EN_PDN_State(1);
}

void Led3State(uint8_t state)
{
	if (state != 0) {
  400c14:	b928      	cbnz	r0, 400c22 <Led3State+0xe>
		/* light up LED */
		PIOA -> PIO_SODR	|= PIO_SODR_P28;		//Set output data register
	} else {
		PIOA -> PIO_CODR	|= PIO_CODR_P28;		//clear output data register
  400c16:	4a06      	ldr	r2, [pc, #24]	; (400c30 <Led3State+0x1c>)
  400c18:	6b53      	ldr	r3, [r2, #52]	; 0x34
  400c1a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  400c1e:	6353      	str	r3, [r2, #52]	; 0x34
  400c20:	4770      	bx	lr
		PIOA -> PIO_SODR	|= PIO_SODR_P28;		//Set output data register
  400c22:	4a03      	ldr	r2, [pc, #12]	; (400c30 <Led3State+0x1c>)
  400c24:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c26:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  400c2a:	6313      	str	r3, [r2, #48]	; 0x30
  400c2c:	4770      	bx	lr
  400c2e:	bf00      	nop
  400c30:	400e0e00 	.word	0x400e0e00

00400c34 <AK4558EN_PDN_State>:
	}
}

void AK4558EN_PDN_State(uint8_t state)
{
	if (state != 0) {
  400c34:	b928      	cbnz	r0, 400c42 <AK4558EN_PDN_State+0xe>
		/* set high */
		PIOA -> PIO_SODR	|= PIO_SODR_P27;		//Set output data register
		} else {
		PIOA -> PIO_CODR	|= PIO_CODR_P27;		//clear output data register
  400c36:	4a06      	ldr	r2, [pc, #24]	; (400c50 <AK4558EN_PDN_State+0x1c>)
  400c38:	6b53      	ldr	r3, [r2, #52]	; 0x34
  400c3a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
  400c3e:	6353      	str	r3, [r2, #52]	; 0x34
  400c40:	4770      	bx	lr
		PIOA -> PIO_SODR	|= PIO_SODR_P27;		//Set output data register
  400c42:	4a03      	ldr	r2, [pc, #12]	; (400c50 <AK4558EN_PDN_State+0x1c>)
  400c44:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c46:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
  400c4a:	6313      	str	r3, [r2, #48]	; 0x30
  400c4c:	4770      	bx	lr
  400c4e:	bf00      	nop
  400c50:	400e0e00 	.word	0x400e0e00

00400c54 <Init_PIO>:
{
  400c54:	b510      	push	{r4, lr}
	PIOA -> PIO_WPMR	&=~ PIO_WPMR_WPEN;
  400c56:	4b18      	ldr	r3, [pc, #96]	; (400cb8 <Init_PIO+0x64>)
  400c58:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400c5c:	f022 0201 	bic.w	r2, r2, #1
  400c60:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PIOA -> PIO_WPMR	|=  PIO_WPMR_WPKEY_PASSWD;
  400c64:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400c68:	4c14      	ldr	r4, [pc, #80]	; (400cbc <Init_PIO+0x68>)
  400c6a:	4322      	orrs	r2, r4
  400c6c:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PIOB -> PIO_WPMR	&=~ PIO_WPMR_WPEN;
  400c70:	4a13      	ldr	r2, [pc, #76]	; (400cc0 <Init_PIO+0x6c>)
  400c72:	f8d2 00e4 	ldr.w	r0, [r2, #228]	; 0xe4
  400c76:	f020 0001 	bic.w	r0, r0, #1
  400c7a:	f8c2 00e4 	str.w	r0, [r2, #228]	; 0xe4
	PIOB -> PIO_WPMR	|=  PIO_WPMR_WPKEY_PASSWD;
  400c7e:	f8d2 10e4 	ldr.w	r1, [r2, #228]	; 0xe4
  400c82:	4321      	orrs	r1, r4
  400c84:	f8c2 10e4 	str.w	r1, [r2, #228]	; 0xe4
	PIOA -> PIO_PDR	=	0xFFFFFFFF;
  400c88:	f04f 31ff 	mov.w	r1, #4294967295
  400c8c:	6059      	str	r1, [r3, #4]
	PIOB -> PIO_PDR	=	0xFFFFFFFF;
  400c8e:	6051      	str	r1, [r2, #4]
	PIOA -> PIO_PER		|=	PIO_PER_P27 | PIO_PER_P28 | PIO_PER_P29 | PIO_PER_P30;	//only pins I want to control through the PIO controller
  400c90:	681a      	ldr	r2, [r3, #0]
  400c92:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  400c96:	601a      	str	r2, [r3, #0]
	PIOA -> PIO_OER		|=	PIO_OER_P27 | PIO_OER_P28 | PIO_OER_P29 | PIO_PER_P30;
  400c98:	691a      	ldr	r2, [r3, #16]
  400c9a:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  400c9e:	611a      	str	r2, [r3, #16]
	PIOA -> PIO_CODR	|=	PIO_CODR_P27| PIO_CODR_P28| PIO_CODR_P29| PIO_PER_P30;
  400ca0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  400ca2:	f042 42f0 	orr.w	r2, r2, #2013265920	; 0x78000000
  400ca6:	635a      	str	r2, [r3, #52]	; 0x34
	Led3State(0);
  400ca8:	2000      	movs	r0, #0
  400caa:	4b06      	ldr	r3, [pc, #24]	; (400cc4 <Init_PIO+0x70>)
  400cac:	4798      	blx	r3
	AK4558EN_PDN_State(1);
  400cae:	2001      	movs	r0, #1
  400cb0:	4b05      	ldr	r3, [pc, #20]	; (400cc8 <Init_PIO+0x74>)
  400cb2:	4798      	blx	r3
  400cb4:	bd10      	pop	{r4, pc}
  400cb6:	bf00      	nop
  400cb8:	400e0e00 	.word	0x400e0e00
  400cbc:	50494f00 	.word	0x50494f00
  400cc0:	400e1000 	.word	0x400e1000
  400cc4:	00400c15 	.word	0x00400c15
  400cc8:	00400c35 	.word	0x00400c35

00400ccc <Setup_PMC>:
 */

void Setup_PMC(void)
{	
	/* Write Key */
	PMC -> PMC_WPMR  &=~PMC_WPMR_WPEN;
  400ccc:	4b1f      	ldr	r3, [pc, #124]	; (400d4c <Setup_PMC+0x80>)
  400cce:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400cd2:	f022 0201 	bic.w	r2, r2, #1
  400cd6:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PMC -> PMC_WPMR  |= PMC_WPMR_WPKEY_PASSWD;
  400cda:	f8d3 10e4 	ldr.w	r1, [r3, #228]	; 0xe4
  400cde:	4a1c      	ldr	r2, [pc, #112]	; (400d50 <Setup_PMC+0x84>)
  400ce0:	430a      	orrs	r2, r1
  400ce2:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
			
	/* Init IO ports */
	PMC -> PMC_PCER0	=	PMC_PCER0_PID8		//enable FLEXCOM_0 for TWI0
  400ce6:	4a1b      	ldr	r2, [pc, #108]	; (400d54 <Setup_PMC+0x88>)
  400ce8:	611a      	str	r2, [r3, #16]
						|	PMC_PCER0_PID11		//enable PIOA peripheral clock
						|	PMC_PCER0_PID12		//enable PIOB peripheral clock
						|	PMC_PCER0_PID16;	//enable I2SC0 peripheral clock
	
	/* Setup PCK1 for output on led, output freq of 800.000 Hz */
	PMC -> PMC_SCDR		= PMC_SCDR_PCK1;					//disable system clock 6 (FLEXCOM 0/1/2/3)
  400cea:	f44f 7200 	mov.w	r2, #512	; 0x200
  400cee:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[1]	= PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val) | PMC_PCK_PRES(0);	//use master clock with prescaler(149 + 1)
  400cf0:	2204      	movs	r2, #4
  400cf2:	645a      	str	r2, [r3, #68]	; 0x44
	while(!((PMC -> PMC_SR & PMC_SR_PCKRDY1)));				//wait for programmable clock to be ready
  400cf4:	461a      	mov	r2, r3
  400cf6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400cf8:	f413 7f00 	tst.w	r3, #512	; 0x200
  400cfc:	d0fb      	beq.n	400cf6 <Setup_PMC+0x2a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK1;					//enable PCK1
  400cfe:	4b13      	ldr	r3, [pc, #76]	; (400d4c <Setup_PMC+0x80>)
  400d00:	681a      	ldr	r2, [r3, #0]
  400d02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  400d06:	601a      	str	r2, [r3, #0]
		
	/* Setup PCK4 for I2SC */
	PMC -> PMC_SCDR		|= PMC_SCDR_PCK4;	//disable clock before setup
  400d08:	685a      	ldr	r2, [r3, #4]
  400d0a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  400d0e:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[4]	 = PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val)| PMC_PCK_PRES(4); //120.000.000 / 4 = 30.000.000 clock
  400d10:	2244      	movs	r2, #68	; 0x44
  400d12:	651a      	str	r2, [r3, #80]	; 0x50
	while (!(PMC -> PMC_SR & (PMC_SR_PCKRDY4)));
  400d14:	461a      	mov	r2, r3
  400d16:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d18:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  400d1c:	d0fb      	beq.n	400d16 <Setup_PMC+0x4a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK4; //enable PCK4
  400d1e:	4b0b      	ldr	r3, [pc, #44]	; (400d4c <Setup_PMC+0x80>)
  400d20:	681a      	ldr	r2, [r3, #0]
  400d22:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  400d26:	601a      	str	r2, [r3, #0]
	
	/* Setup PCK6 for TWI, output freq of 800.000 Hz */
	PMC -> PMC_SCDR		= PMC_SCDR_PCK6;					//disable system clock 6 (FLEXCOM 0/1/2/3)
  400d28:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400d2c:	605a      	str	r2, [r3, #4]
	PMC -> PMC_PCK[6]	= PMC_PCK_CSS(PMC_PCK_CSS_MCK_Val) | PMC_PCK_PRES(149);	//use master clock with prescaler(149 + 1)
  400d2e:	f640 1254 	movw	r2, #2388	; 0x954
  400d32:	659a      	str	r2, [r3, #88]	; 0x58
	while(!((PMC -> PMC_SR & PMC_SR_PCKRDY6)));				//wait for programmable clock to be ready
  400d34:	461a      	mov	r2, r3
  400d36:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d38:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  400d3c:	d0fb      	beq.n	400d36 <Setup_PMC+0x6a>
	PMC -> PMC_SCER		|= PMC_SCER_PCK6;					//enable PCK6
  400d3e:	4a03      	ldr	r2, [pc, #12]	; (400d4c <Setup_PMC+0x80>)
  400d40:	6813      	ldr	r3, [r2, #0]
  400d42:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  400d46:	6013      	str	r3, [r2, #0]
  400d48:	4770      	bx	lr
  400d4a:	bf00      	nop
  400d4c:	400e0400 	.word	0x400e0400
  400d50:	504d4300 	.word	0x504d4300
  400d54:	00011b00 	.word	0x00011b00

00400d58 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400d58:	4b0a      	ldr	r3, [pc, #40]	; (400d84 <_sbrk+0x2c>)
  400d5a:	681b      	ldr	r3, [r3, #0]
  400d5c:	b153      	cbz	r3, 400d74 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400d5e:	4b09      	ldr	r3, [pc, #36]	; (400d84 <_sbrk+0x2c>)
  400d60:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400d62:	181a      	adds	r2, r3, r0
  400d64:	4908      	ldr	r1, [pc, #32]	; (400d88 <_sbrk+0x30>)
  400d66:	4291      	cmp	r1, r2
  400d68:	db08      	blt.n	400d7c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400d6a:	4610      	mov	r0, r2
  400d6c:	4a05      	ldr	r2, [pc, #20]	; (400d84 <_sbrk+0x2c>)
  400d6e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400d70:	4618      	mov	r0, r3
  400d72:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400d74:	4a05      	ldr	r2, [pc, #20]	; (400d8c <_sbrk+0x34>)
  400d76:	4b03      	ldr	r3, [pc, #12]	; (400d84 <_sbrk+0x2c>)
  400d78:	601a      	str	r2, [r3, #0]
  400d7a:	e7f0      	b.n	400d5e <_sbrk+0x6>
		return (caddr_t) -1;	
  400d7c:	f04f 30ff 	mov.w	r0, #4294967295
}
  400d80:	4770      	bx	lr
  400d82:	bf00      	nop
  400d84:	2000e8e0 	.word	0x2000e8e0
  400d88:	20027ffc 	.word	0x20027ffc
  400d8c:	2000ef80 	.word	0x2000ef80

00400d90 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400d90:	f04f 30ff 	mov.w	r0, #4294967295
  400d94:	4770      	bx	lr

00400d96 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400d96:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400d9a:	604b      	str	r3, [r1, #4]

	return 0;
}
  400d9c:	2000      	movs	r0, #0
  400d9e:	4770      	bx	lr

00400da0 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400da0:	2001      	movs	r0, #1
  400da2:	4770      	bx	lr

00400da4 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400da4:	2000      	movs	r0, #0
  400da6:	4770      	bx	lr

00400da8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400da8:	3801      	subs	r0, #1
  400daa:	2802      	cmp	r0, #2
  400dac:	d815      	bhi.n	400dda <_write+0x32>
{
  400dae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400db2:	460e      	mov	r6, r1
  400db4:	4614      	mov	r4, r2
		return -1;
	}
	for (; len != 0; --len) {
  400db6:	b19a      	cbz	r2, 400de0 <_write+0x38>
  400db8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400dba:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400df4 <_write+0x4c>
  400dbe:	4f0c      	ldr	r7, [pc, #48]	; (400df0 <_write+0x48>)
  400dc0:	f8d8 0000 	ldr.w	r0, [r8]
  400dc4:	f815 1b01 	ldrb.w	r1, [r5], #1
  400dc8:	683b      	ldr	r3, [r7, #0]
  400dca:	4798      	blx	r3
  400dcc:	2800      	cmp	r0, #0
  400dce:	db0a      	blt.n	400de6 <_write+0x3e>
  400dd0:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400dd2:	3c01      	subs	r4, #1
  400dd4:	d1f4      	bne.n	400dc0 <_write+0x18>
  400dd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400dda:	f04f 30ff 	mov.w	r0, #4294967295
  400dde:	4770      	bx	lr
	for (; len != 0; --len) {
  400de0:	4610      	mov	r0, r2
  400de2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400de6:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}

	return nChars;
}
  400dea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400dee:	bf00      	nop
  400df0:	2000e950 	.word	0x2000e950
  400df4:	2000e954 	.word	0x2000e954

00400df8 <_read>:

void (*ptr_get)(void volatile*, char*);

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400dfc:	b980      	cbnz	r0, 400e20 <_read+0x28>
  400dfe:	460c      	mov	r4, r1
  400e00:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400e02:	2a00      	cmp	r2, #0
  400e04:	dd0f      	ble.n	400e26 <_read+0x2e>
  400e06:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400e08:	4e08      	ldr	r6, [pc, #32]	; (400e2c <_read+0x34>)
  400e0a:	4d09      	ldr	r5, [pc, #36]	; (400e30 <_read+0x38>)
  400e0c:	6830      	ldr	r0, [r6, #0]
  400e0e:	4621      	mov	r1, r4
  400e10:	682b      	ldr	r3, [r5, #0]
  400e12:	4798      	blx	r3
		ptr++;
  400e14:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400e16:	42bc      	cmp	r4, r7
  400e18:	d1f8      	bne.n	400e0c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400e1a:	4640      	mov	r0, r8
  400e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400e20:	f04f 38ff 	mov.w	r8, #4294967295
  400e24:	e7f9      	b.n	400e1a <_read+0x22>
	for (; len > 0; --len) {
  400e26:	4680      	mov	r8, r0
  400e28:	e7f7      	b.n	400e1a <_read+0x22>
  400e2a:	bf00      	nop
  400e2c:	2000e954 	.word	0x2000e954
  400e30:	2000e94c 	.word	0x2000e94c

00400e34 <Init_TWI>:
 * Clock_In = (120.000.000 / 150 = 800.000)
 * 400.000 = 800.000 / 2
 * CLKDIV * 2^(CKDIV) = 8
 */
void Init_TWI(void)
{
  400e34:	b508      	push	{r3, lr}


static void TWI_PioSetup(void)
{
	/* enable internal pull up on TWI pins PA9 (SCL) & PA10 (SDA) */
	PIOA -> PIO_PPDDR	|= PIO_PPDDR_P9 | PIO_PPDDR_P10;	//first disable internal pull down
  400e36:	4b19      	ldr	r3, [pc, #100]	; (400e9c <Init_TWI+0x68>)
  400e38:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
  400e3c:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400e40:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	PIOA -> PIO_PUER	|= PIO_PUSR_P9 | PIO_PUSR_P10;		//enable internal pull up
  400e44:	6e5a      	ldr	r2, [r3, #100]	; 0x64
  400e46:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400e4a:	665a      	str	r2, [r3, #100]	; 0x64
	
	//enable peripheral control of IO pins
	PIOA -> PIO_PDR	|=	PIO_PDR_P9		//SCL
  400e4c:	685a      	ldr	r2, [r3, #4]
  400e4e:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
  400e52:	605a      	str	r2, [r3, #4]
					|	PIO_PDR_P10;	//SDA
	
	//PA9 & PA10 to peripheral A (both bits should be zero)
	PIOA -> PIO_ABCDSR[0] &= ~(0x03 << 9);
  400e54:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400e56:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
  400e5a:	671a      	str	r2, [r3, #112]	; 0x70
	PIOA -> PIO_ABCDSR[1] &= ~(0x03 << 9);
  400e5c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400e5e:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
  400e62:	675a      	str	r2, [r3, #116]	; 0x74
	FLEXCOM0 -> FLEXCOM_MR = FLEXCOM_MR_OPMODE_TWI;
  400e64:	2203      	movs	r2, #3
  400e66:	4b0e      	ldr	r3, [pc, #56]	; (400ea0 <Init_TWI+0x6c>)
  400e68:	601a      	str	r2, [r3, #0]
	TWI0 -> TWI_WPMR &= ~(TWI_WPMR_WPEN);
  400e6a:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
  400e6e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400e72:	f022 0201 	bic.w	r2, r2, #1
  400e76:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	TWI0 -> TWI_WPMR = TWI_WPMR_WPKEY_PASSWD;
  400e7a:	4a0a      	ldr	r2, [pc, #40]	; (400ea4 <Init_TWI+0x70>)
  400e7c:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	TWI0 -> TWI_CWGR	=	TWI_CWGR_CLDIV(0x01)
  400e80:	4a09      	ldr	r2, [pc, #36]	; (400ea8 <Init_TWI+0x74>)
  400e82:	611a      	str	r2, [r3, #16]
	TWI0 -> TWI_CR		=	TWI_CR_MSEN		//master mode
  400e84:	4a09      	ldr	r2, [pc, #36]	; (400eac <Init_TWI+0x78>)
  400e86:	601a      	str	r2, [r3, #0]
	TWI0 -> TWI_FILTR	=	TWI_FILTR_PADFEN; //pad filter enable, must be enabled in high-speed mode		
  400e88:	2202      	movs	r2, #2
  400e8a:	645a      	str	r2, [r3, #68]	; 0x44
	TWI0 -> TWI_MMR		=	TWI_MMR_IADRSZ_NONE	//no internal device address
  400e8c:	f44f 1298 	mov.w	r2, #1245184	; 0x130000
  400e90:	605a      	str	r2, [r3, #4]
	UART_Puts("TWI Initialized\r\n");	
  400e92:	4807      	ldr	r0, [pc, #28]	; (400eb0 <Init_TWI+0x7c>)
  400e94:	4b07      	ldr	r3, [pc, #28]	; (400eb4 <Init_TWI+0x80>)
  400e96:	4798      	blx	r3
  400e98:	bd08      	pop	{r3, pc}
  400e9a:	bf00      	nop
  400e9c:	400e0e00 	.word	0x400e0e00
  400ea0:	4000c000 	.word	0x4000c000
  400ea4:	54574900 	.word	0x54574900
  400ea8:	00130101 	.word	0x00130101
  400eac:	01000024 	.word	0x01000024
  400eb0:	00406c7c 	.word	0x00406c7c
  400eb4:	00400fa9 	.word	0x00400fa9

00400eb8 <Ctrl_putchar>:
}


static inline int Ctrl_putchar(void volatile* usart, const char c)
{
	USART1 -> US_THR = (c & 0xFF);
  400eb8:	4b04      	ldr	r3, [pc, #16]	; (400ecc <Ctrl_putchar+0x14>)
  400eba:	61d9      	str	r1, [r3, #28]
	while (!(((USART1 -> US_CSR) & US_CSR_TXRDY_Msk) == US_CSR_TXRDY_Msk));	//wait for character to shift out
  400ebc:	461a      	mov	r2, r3
  400ebe:	6953      	ldr	r3, [r2, #20]
  400ec0:	f013 0f02 	tst.w	r3, #2
  400ec4:	d0fb      	beq.n	400ebe <Ctrl_putchar+0x6>
	return 0;
}
  400ec6:	2000      	movs	r0, #0
  400ec8:	4770      	bx	lr
  400eca:	bf00      	nop
  400ecc:	40020200 	.word	0x40020200

00400ed0 <convert>:
	}
	va_end(arg);
}

char* convert(unsigned int num, int base)
{
  400ed0:	b410      	push	{r4}
  400ed2:	4603      	mov	r3, r0
	static char Representation[17]= "0123456789ABCDEF";
	static char buffer[50];
	char *ptr;

	ptr = &buffer[49];
	*ptr = '\0';
  400ed4:	4808      	ldr	r0, [pc, #32]	; (400ef8 <convert+0x28>)
  400ed6:	2200      	movs	r2, #0
  400ed8:	f800 2f31 	strb.w	r2, [r0, #49]!

	do {
		*--ptr = Representation[num%base];
  400edc:	4c07      	ldr	r4, [pc, #28]	; (400efc <convert+0x2c>)
  400ede:	fbb3 f2f1 	udiv	r2, r3, r1
  400ee2:	fb01 3312 	mls	r3, r1, r2, r3
  400ee6:	5ce3      	ldrb	r3, [r4, r3]
  400ee8:	f800 3d01 	strb.w	r3, [r0, #-1]!
		num /= base;
  400eec:	4613      	mov	r3, r2
	}
	while(num != 0);
  400eee:	2a00      	cmp	r2, #0
  400ef0:	d1f5      	bne.n	400ede <convert+0xe>
	
	return (ptr);
}
  400ef2:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ef6:	4770      	bx	lr
  400ef8:	2000e8e4 	.word	0x2000e8e4
  400efc:	00406c90 	.word	0x00406c90

00400f00 <Init_UART>:
{	
  400f00:	b538      	push	{r3, r4, r5, lr}
	PIOB -> PIO_PDR	|=	PIO_PDR_P2	//Rx
  400f02:	4b1a      	ldr	r3, [pc, #104]	; (400f6c <Init_UART+0x6c>)
  400f04:	685a      	ldr	r2, [r3, #4]
  400f06:	f042 020c 	orr.w	r2, r2, #12
  400f0a:	605a      	str	r2, [r3, #4]
	PIOB -> PIO_ABCDSR[0] &= ~(0x03 << 2);
  400f0c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400f0e:	f022 020c 	bic.w	r2, r2, #12
  400f12:	671a      	str	r2, [r3, #112]	; 0x70
	PIOB -> PIO_ABCDSR[1] &= ~(0x03 << 2);
  400f14:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400f16:	f022 020c 	bic.w	r2, r2, #12
  400f1a:	675a      	str	r2, [r3, #116]	; 0x74
	FLEXCOM1 -> FLEXCOM_MR = FLEXCOM_MR_OPMODE_USART;
  400f1c:	2201      	movs	r2, #1
  400f1e:	f5a3 2341 	sub.w	r3, r3, #790528	; 0xc1000
  400f22:	601a      	str	r2, [r3, #0]
	USART1 -> US_WPMR &= ~(US_WPMR_WPEN);
  400f24:	f503 7300 	add.w	r3, r3, #512	; 0x200
  400f28:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400f2c:	f022 0201 	bic.w	r2, r2, #1
  400f30:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	USART1 -> US_WPMR = US_WPMR_WPKEY_PASSWD;
  400f34:	4a0e      	ldr	r2, [pc, #56]	; (400f70 <Init_UART+0x70>)
  400f36:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	USART1 -> US_BRGR	=	US_BRGR_CD(130);	//CLKDIV
  400f3a:	2282      	movs	r2, #130	; 0x82
  400f3c:	621a      	str	r2, [r3, #32]
	USART1 -> US_MR	=	US_MR_USART_MODE_NORMAL
  400f3e:	4a0d      	ldr	r2, [pc, #52]	; (400f74 <Init_UART+0x74>)
  400f40:	605a      	str	r2, [r3, #4]
	USART1 -> US_CR	=	US_CR_RXEN	//enable receiver
  400f42:	2250      	movs	r2, #80	; 0x50
  400f44:	601a      	str	r2, [r3, #0]
	stdio_base = (void *)USART1;
  400f46:	4a0c      	ldr	r2, [pc, #48]	; (400f78 <Init_UART+0x78>)
  400f48:	6013      	str	r3, [r2, #0]
	ptr_put = (int (*)(void volatile*,char))&Ctrl_putchar;
  400f4a:	4a0c      	ldr	r2, [pc, #48]	; (400f7c <Init_UART+0x7c>)
  400f4c:	4b0c      	ldr	r3, [pc, #48]	; (400f80 <Init_UART+0x80>)
  400f4e:	601a      	str	r2, [r3, #0]
	setbuf(stdout, NULL);	//dont buffer stdout
  400f50:	4d0c      	ldr	r5, [pc, #48]	; (400f84 <Init_UART+0x84>)
  400f52:	682b      	ldr	r3, [r5, #0]
  400f54:	2100      	movs	r1, #0
  400f56:	6898      	ldr	r0, [r3, #8]
  400f58:	4c0b      	ldr	r4, [pc, #44]	; (400f88 <Init_UART+0x88>)
  400f5a:	47a0      	blx	r4
	setbuf(stdin, NULL);	//dont buffer stdin
  400f5c:	682b      	ldr	r3, [r5, #0]
  400f5e:	2100      	movs	r1, #0
  400f60:	6858      	ldr	r0, [r3, #4]
  400f62:	47a0      	blx	r4
	printf("UART Initialized\r\n");	
  400f64:	4809      	ldr	r0, [pc, #36]	; (400f8c <Init_UART+0x8c>)
  400f66:	4b0a      	ldr	r3, [pc, #40]	; (400f90 <Init_UART+0x90>)
  400f68:	4798      	blx	r3
  400f6a:	bd38      	pop	{r3, r4, r5, pc}
  400f6c:	400e1000 	.word	0x400e1000
  400f70:	55534100 	.word	0x55534100
  400f74:	000808c0 	.word	0x000808c0
  400f78:	2000e954 	.word	0x2000e954
  400f7c:	00400eb9 	.word	0x00400eb9
  400f80:	2000e950 	.word	0x2000e950
  400f84:	20000070 	.word	0x20000070
  400f88:	00402839 	.word	0x00402839
  400f8c:	00406ca4 	.word	0x00406ca4
  400f90:	00402829 	.word	0x00402829

00400f94 <UART_Putchar>:
	USART1 -> US_THR = (c & 0xFF);
  400f94:	4b03      	ldr	r3, [pc, #12]	; (400fa4 <UART_Putchar+0x10>)
  400f96:	61d8      	str	r0, [r3, #28]
	while (!(((USART1 -> US_CSR) & US_CSR_TXRDY_Msk) == US_CSR_TXRDY_Msk));	//wait for character to shift out
  400f98:	461a      	mov	r2, r3
  400f9a:	6953      	ldr	r3, [r2, #20]
  400f9c:	f013 0f02 	tst.w	r3, #2
  400fa0:	d0fb      	beq.n	400f9a <UART_Putchar+0x6>
}
  400fa2:	4770      	bx	lr
  400fa4:	40020200 	.word	0x40020200

00400fa8 <UART_Puts>:
{
  400fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400fac:	4606      	mov	r6, r0
	for (uint8_t i = 0; i < strlen(str); i++) {
  400fae:	2400      	movs	r4, #0
  400fb0:	4f06      	ldr	r7, [pc, #24]	; (400fcc <UART_Puts+0x24>)
		UART_Putchar(str[i]);
  400fb2:	f8df 801c 	ldr.w	r8, [pc, #28]	; 400fd0 <UART_Puts+0x28>
	for (uint8_t i = 0; i < strlen(str); i++) {
  400fb6:	e001      	b.n	400fbc <UART_Puts+0x14>
		UART_Putchar(str[i]);
  400fb8:	5d70      	ldrb	r0, [r6, r5]
  400fba:	47c0      	blx	r8
  400fbc:	b2e5      	uxtb	r5, r4
	for (uint8_t i = 0; i < strlen(str); i++) {
  400fbe:	4630      	mov	r0, r6
  400fc0:	47b8      	blx	r7
  400fc2:	3401      	adds	r4, #1
  400fc4:	42a8      	cmp	r0, r5
  400fc6:	d8f7      	bhi.n	400fb8 <UART_Puts+0x10>
}
  400fc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400fcc:	00402a01 	.word	0x00402a01
  400fd0:	00400f95 	.word	0x00400f95

00400fd4 <UART_Printf>:
{
  400fd4:	b40f      	push	{r0, r1, r2, r3}
  400fd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400fda:	b082      	sub	sp, #8
  400fdc:	ab08      	add	r3, sp, #32
  400fde:	f853 4b04 	ldr.w	r4, [r3], #4
	va_start(arg, format);
  400fe2:	9301      	str	r3, [sp, #4]
	for (traverse = format; *traverse != '\0'; traverse++) {
  400fe4:	7823      	ldrb	r3, [r4, #0]
  400fe6:	b1bb      	cbz	r3, 401018 <UART_Printf+0x44>
			UART_Putchar(*traverse);
  400fe8:	4d47      	ldr	r5, [pc, #284]	; (401108 <UART_Printf+0x134>)
				char *CapitalHex = convert(i, 16);
  400fea:	f8df 8124 	ldr.w	r8, [pc, #292]	; 401110 <UART_Printf+0x13c>
				UART_Puts(CapitalHex + 0x41);
  400fee:	4f47      	ldr	r7, [pc, #284]	; (40110c <UART_Printf+0x138>)
  400ff0:	e007      	b.n	401002 <UART_Printf+0x2e>
				i = va_arg(arg,int);
  400ff2:	9b01      	ldr	r3, [sp, #4]
  400ff4:	1d1a      	adds	r2, r3, #4
  400ff6:	9201      	str	r2, [sp, #4]
				UART_Putchar(i);
  400ff8:	7818      	ldrb	r0, [r3, #0]
  400ffa:	47a8      	blx	r5
	for (traverse = format; *traverse != '\0'; traverse++) {
  400ffc:	1cb4      	adds	r4, r6, #2
  400ffe:	78b3      	ldrb	r3, [r6, #2]
  401000:	b153      	cbz	r3, 401018 <UART_Printf+0x44>
		while (*traverse != '%' && *traverse != '\0') {
  401002:	7820      	ldrb	r0, [r4, #0]
  401004:	2825      	cmp	r0, #37	; 0x25
  401006:	d07d      	beq.n	401104 <UART_Printf+0x130>
  401008:	b130      	cbz	r0, 401018 <UART_Printf+0x44>
			UART_Putchar(*traverse);
  40100a:	47a8      	blx	r5
		while (*traverse != '%' && *traverse != '\0') {
  40100c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  401010:	2825      	cmp	r0, #37	; 0x25
  401012:	d02d      	beq.n	401070 <UART_Printf+0x9c>
  401014:	2800      	cmp	r0, #0
  401016:	d1f8      	bne.n	40100a <UART_Printf+0x36>
}
  401018:	b002      	add	sp, #8
  40101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40101e:	b004      	add	sp, #16
  401020:	4770      	bx	lr
				i = va_arg(arg,int);
  401022:	9b01      	ldr	r3, [sp, #4]
  401024:	1d1a      	adds	r2, r3, #4
  401026:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 10));
  401028:	210a      	movs	r1, #10
  40102a:	6818      	ldr	r0, [r3, #0]
  40102c:	47c0      	blx	r8
  40102e:	47b8      	blx	r7
				break;
  401030:	e7e4      	b.n	400ffc <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  401032:	9b01      	ldr	r3, [sp, #4]
  401034:	1d1a      	adds	r2, r3, #4
  401036:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 8));
  401038:	2108      	movs	r1, #8
  40103a:	6818      	ldr	r0, [r3, #0]
  40103c:	47c0      	blx	r8
  40103e:	47b8      	blx	r7
				break;
  401040:	e7dc      	b.n	400ffc <UART_Printf+0x28>
			case 's': s = va_arg(arg, char*);
  401042:	9b01      	ldr	r3, [sp, #4]
  401044:	1d1a      	adds	r2, r3, #4
  401046:	9201      	str	r2, [sp, #4]
				UART_Puts(s);
  401048:	6818      	ldr	r0, [r3, #0]
  40104a:	47b8      	blx	r7
				break;
  40104c:	e7d6      	b.n	400ffc <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  40104e:	9b01      	ldr	r3, [sp, #4]
  401050:	1d1a      	adds	r2, r3, #4
  401052:	9201      	str	r2, [sp, #4]
				UART_Puts(convert(i, 16));
  401054:	2110      	movs	r1, #16
  401056:	6818      	ldr	r0, [r3, #0]
  401058:	47c0      	blx	r8
  40105a:	47b8      	blx	r7
				break;
  40105c:	e7ce      	b.n	400ffc <UART_Printf+0x28>
				i = va_arg(arg, unsigned int);
  40105e:	9b01      	ldr	r3, [sp, #4]
  401060:	1d1a      	adds	r2, r3, #4
  401062:	9201      	str	r2, [sp, #4]
				char *CapitalHex = convert(i, 16);
  401064:	2110      	movs	r1, #16
  401066:	6818      	ldr	r0, [r3, #0]
  401068:	47c0      	blx	r8
				UART_Puts(CapitalHex + 0x41);
  40106a:	3041      	adds	r0, #65	; 0x41
  40106c:	47b8      	blx	r7
				break;
  40106e:	e7c5      	b.n	400ffc <UART_Printf+0x28>
			traverse++;
  401070:	4626      	mov	r6, r4
		switch (*traverse) {
  401072:	7873      	ldrb	r3, [r6, #1]
  401074:	3b58      	subs	r3, #88	; 0x58
  401076:	2b20      	cmp	r3, #32
  401078:	d8c0      	bhi.n	400ffc <UART_Printf+0x28>
  40107a:	a201      	add	r2, pc, #4	; (adr r2, 401080 <UART_Printf+0xac>)
  40107c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401080:	0040105f 	.word	0x0040105f
  401084:	00400ffd 	.word	0x00400ffd
  401088:	00400ffd 	.word	0x00400ffd
  40108c:	00400ffd 	.word	0x00400ffd
  401090:	00400ffd 	.word	0x00400ffd
  401094:	00400ffd 	.word	0x00400ffd
  401098:	00400ffd 	.word	0x00400ffd
  40109c:	00400ffd 	.word	0x00400ffd
  4010a0:	00400ffd 	.word	0x00400ffd
  4010a4:	00400ffd 	.word	0x00400ffd
  4010a8:	00400ffd 	.word	0x00400ffd
  4010ac:	00400ff3 	.word	0x00400ff3
  4010b0:	00401023 	.word	0x00401023
  4010b4:	00400ffd 	.word	0x00400ffd
  4010b8:	00400ffd 	.word	0x00400ffd
  4010bc:	00400ffd 	.word	0x00400ffd
  4010c0:	00400ffd 	.word	0x00400ffd
  4010c4:	00400ffd 	.word	0x00400ffd
  4010c8:	00400ffd 	.word	0x00400ffd
  4010cc:	00400ffd 	.word	0x00400ffd
  4010d0:	00400ffd 	.word	0x00400ffd
  4010d4:	00400ffd 	.word	0x00400ffd
  4010d8:	00400ffd 	.word	0x00400ffd
  4010dc:	00401033 	.word	0x00401033
  4010e0:	00400ffd 	.word	0x00400ffd
  4010e4:	00400ffd 	.word	0x00400ffd
  4010e8:	00400ffd 	.word	0x00400ffd
  4010ec:	00401043 	.word	0x00401043
  4010f0:	00400ffd 	.word	0x00400ffd
  4010f4:	00400ffd 	.word	0x00400ffd
  4010f8:	00400ffd 	.word	0x00400ffd
  4010fc:	00400ffd 	.word	0x00400ffd
  401100:	0040104f 	.word	0x0040104f
		while (*traverse != '%' && *traverse != '\0') {
  401104:	4626      	mov	r6, r4
  401106:	e7b4      	b.n	401072 <UART_Printf+0x9e>
  401108:	00400f95 	.word	0x00400f95
  40110c:	00400fa9 	.word	0x00400fa9
  401110:	00400ed1 	.word	0x00400ed1

00401114 <UART_Getchar>:
	

char UART_Getchar(void)
{
	//while (!(((USART1 -> US_CSR) & US_CSR_RXRDY_Msk) == US_CSR_RXRDY_Msk));
	return USART1 -> US_RHR;
  401114:	4b01      	ldr	r3, [pc, #4]	; (40111c <UART_Getchar+0x8>)
  401116:	6998      	ldr	r0, [r3, #24]
}
  401118:	b2c0      	uxtb	r0, r0
  40111a:	4770      	bx	lr
  40111c:	40020200 	.word	0x40020200

00401120 <arm_cfft_radix8by2_f32>:
  401120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401124:	ed2d 8b08 	vpush	{d8-d11}
  401128:	4607      	mov	r7, r0
  40112a:	4608      	mov	r0, r1
  40112c:	f8b7 c000 	ldrh.w	ip, [r7]
  401130:	687a      	ldr	r2, [r7, #4]
  401132:	ea4f 015c 	mov.w	r1, ip, lsr #1
  401136:	eb00 088c 	add.w	r8, r0, ip, lsl #2
  40113a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40113e:	f000 80b0 	beq.w	4012a2 <arm_cfft_radix8by2_f32+0x182>
  401142:	008c      	lsls	r4, r1, #2
  401144:	3410      	adds	r4, #16
  401146:	f100 0310 	add.w	r3, r0, #16
  40114a:	1906      	adds	r6, r0, r4
  40114c:	3210      	adds	r2, #16
  40114e:	4444      	add	r4, r8
  401150:	eb03 1c0c 	add.w	ip, r3, ip, lsl #4
  401154:	f108 0510 	add.w	r5, r8, #16
  401158:	ed15 2a04 	vldr	s4, [r5, #-16]
  40115c:	ed55 2a03 	vldr	s5, [r5, #-12]
  401160:	ed54 4a04 	vldr	s9, [r4, #-16]
  401164:	ed14 4a03 	vldr	s8, [r4, #-12]
  401168:	ed14 6a02 	vldr	s12, [r4, #-8]
  40116c:	ed54 5a01 	vldr	s11, [r4, #-4]
  401170:	ed53 3a04 	vldr	s7, [r3, #-16]
  401174:	ed15 0a02 	vldr	s0, [r5, #-8]
  401178:	ed55 0a01 	vldr	s1, [r5, #-4]
  40117c:	ed56 6a04 	vldr	s13, [r6, #-16]
  401180:	ed16 3a03 	vldr	s6, [r6, #-12]
  401184:	ed13 7a03 	vldr	s14, [r3, #-12]
  401188:	ed13 5a02 	vldr	s10, [r3, #-8]
  40118c:	ed53 7a01 	vldr	s15, [r3, #-4]
  401190:	ed16 1a02 	vldr	s2, [r6, #-8]
  401194:	ed56 1a01 	vldr	s3, [r6, #-4]
  401198:	ee73 ba82 	vadd.f32	s23, s7, s4
  40119c:	ee37 ba22 	vadd.f32	s22, s14, s5
  4011a0:	ee76 9aa4 	vadd.f32	s19, s13, s9
  4011a4:	ee33 9a04 	vadd.f32	s18, s6, s8
  4011a8:	ee31 8aa5 	vadd.f32	s16, s3, s11
  4011ac:	ee75 aa00 	vadd.f32	s21, s10, s0
  4011b0:	ee37 aaa0 	vadd.f32	s20, s15, s1
  4011b4:	ee71 8a06 	vadd.f32	s17, s2, s12
  4011b8:	ed43 ba04 	vstr	s23, [r3, #-16]
  4011bc:	ed03 ba03 	vstr	s22, [r3, #-12]
  4011c0:	ed43 aa02 	vstr	s21, [r3, #-8]
  4011c4:	ed03 aa01 	vstr	s20, [r3, #-4]
  4011c8:	ed06 8a01 	vstr	s16, [r6, #-4]
  4011cc:	ed46 9a04 	vstr	s19, [r6, #-16]
  4011d0:	ed06 9a03 	vstr	s18, [r6, #-12]
  4011d4:	ed46 8a02 	vstr	s17, [r6, #-8]
  4011d8:	ee37 7a62 	vsub.f32	s14, s14, s5
  4011dc:	ee74 4ae6 	vsub.f32	s9, s9, s13
  4011e0:	ee34 4a43 	vsub.f32	s8, s8, s6
  4011e4:	ed52 6a03 	vldr	s13, [r2, #-12]
  4011e8:	ed12 3a04 	vldr	s6, [r2, #-16]
  4011ec:	ee73 3ac2 	vsub.f32	s7, s7, s4
  4011f0:	ee27 8a26 	vmul.f32	s16, s14, s13
  4011f4:	ee64 2aa6 	vmul.f32	s5, s9, s13
  4011f8:	ee23 2a83 	vmul.f32	s4, s7, s6
  4011fc:	ee64 4a83 	vmul.f32	s9, s9, s6
  401200:	ee63 3aa6 	vmul.f32	s7, s7, s13
  401204:	ee27 7a03 	vmul.f32	s14, s14, s6
  401208:	ee64 6a26 	vmul.f32	s13, s8, s13
  40120c:	ee24 4a03 	vmul.f32	s8, s8, s6
  401210:	ee37 7a63 	vsub.f32	s14, s14, s7
  401214:	ee76 6aa4 	vadd.f32	s13, s13, s9
  401218:	ee32 4ac4 	vsub.f32	s8, s5, s8
  40121c:	ee32 3a08 	vadd.f32	s6, s4, s16
  401220:	ed05 7a03 	vstr	s14, [r5, #-12]
  401224:	ed05 3a04 	vstr	s6, [r5, #-16]
  401228:	ed04 4a04 	vstr	s8, [r4, #-16]
  40122c:	ed44 6a03 	vstr	s13, [r4, #-12]
  401230:	ed12 7a01 	vldr	s14, [r2, #-4]
  401234:	ee76 6a41 	vsub.f32	s13, s12, s2
  401238:	ee35 5a40 	vsub.f32	s10, s10, s0
  40123c:	ee35 6ae1 	vsub.f32	s12, s11, s3
  401240:	ee77 7ae0 	vsub.f32	s15, s15, s1
  401244:	ed52 5a02 	vldr	s11, [r2, #-8]
  401248:	ee67 3a87 	vmul.f32	s7, s15, s14
  40124c:	ee66 4a87 	vmul.f32	s9, s13, s14
  401250:	ee25 4a25 	vmul.f32	s8, s10, s11
  401254:	ee67 7aa5 	vmul.f32	s15, s15, s11
  401258:	ee25 5a07 	vmul.f32	s10, s10, s14
  40125c:	ee66 6aa5 	vmul.f32	s13, s13, s11
  401260:	ee26 7a07 	vmul.f32	s14, s12, s14
  401264:	ee26 6a25 	vmul.f32	s12, s12, s11
  401268:	ee77 7ac5 	vsub.f32	s15, s15, s10
  40126c:	ee74 5a23 	vadd.f32	s11, s8, s7
  401270:	ee34 6ac6 	vsub.f32	s12, s9, s12
  401274:	ee37 7a26 	vadd.f32	s14, s14, s13
  401278:	3310      	adds	r3, #16
  40127a:	4563      	cmp	r3, ip
  40127c:	ed45 5a02 	vstr	s11, [r5, #-8]
  401280:	f106 0610 	add.w	r6, r6, #16
  401284:	ed45 7a01 	vstr	s15, [r5, #-4]
  401288:	f102 0210 	add.w	r2, r2, #16
  40128c:	ed04 6a02 	vstr	s12, [r4, #-8]
  401290:	ed04 7a01 	vstr	s14, [r4, #-4]
  401294:	f105 0510 	add.w	r5, r5, #16
  401298:	f104 0410 	add.w	r4, r4, #16
  40129c:	f47f af5c 	bne.w	401158 <arm_cfft_radix8by2_f32+0x38>
  4012a0:	687a      	ldr	r2, [r7, #4]
  4012a2:	b28c      	uxth	r4, r1
  4012a4:	4621      	mov	r1, r4
  4012a6:	2302      	movs	r3, #2
  4012a8:	f000 faf8 	bl	40189c <arm_radix8_butterfly_f32>
  4012ac:	ecbd 8b08 	vpop	{d8-d11}
  4012b0:	4621      	mov	r1, r4
  4012b2:	687a      	ldr	r2, [r7, #4]
  4012b4:	4640      	mov	r0, r8
  4012b6:	2302      	movs	r3, #2
  4012b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4012bc:	f000 baee 	b.w	40189c <arm_radix8_butterfly_f32>

004012c0 <arm_cfft_radix8by4_f32>:
  4012c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4012c4:	ed2d 8b0a 	vpush	{d8-d12}
  4012c8:	b08d      	sub	sp, #52	; 0x34
  4012ca:	460d      	mov	r5, r1
  4012cc:	910b      	str	r1, [sp, #44]	; 0x2c
  4012ce:	8801      	ldrh	r1, [r0, #0]
  4012d0:	6842      	ldr	r2, [r0, #4]
  4012d2:	900a      	str	r0, [sp, #40]	; 0x28
  4012d4:	0849      	lsrs	r1, r1, #1
  4012d6:	008b      	lsls	r3, r1, #2
  4012d8:	18ee      	adds	r6, r5, r3
  4012da:	18f0      	adds	r0, r6, r3
  4012dc:	edd0 5a00 	vldr	s11, [r0]
  4012e0:	edd5 7a00 	vldr	s15, [r5]
  4012e4:	ed96 7a00 	vldr	s14, [r6]
  4012e8:	edd0 3a01 	vldr	s7, [r0, #4]
  4012ec:	ed96 4a01 	vldr	s8, [r6, #4]
  4012f0:	ed95 5a01 	vldr	s10, [r5, #4]
  4012f4:	9008      	str	r0, [sp, #32]
  4012f6:	ee37 6aa5 	vadd.f32	s12, s15, s11
  4012fa:	18c7      	adds	r7, r0, r3
  4012fc:	edd7 4a00 	vldr	s9, [r7]
  401300:	ed97 3a01 	vldr	s6, [r7, #4]
  401304:	9701      	str	r7, [sp, #4]
  401306:	ee77 6a06 	vadd.f32	s13, s14, s12
  40130a:	462c      	mov	r4, r5
  40130c:	ee76 6aa4 	vadd.f32	s13, s13, s9
  401310:	ee77 7ae5 	vsub.f32	s15, s15, s11
  401314:	ee16 ca90 	vmov	ip, s13
  401318:	f844 cb08 	str.w	ip, [r4], #8
  40131c:	ee75 6a23 	vadd.f32	s13, s10, s7
  401320:	edd6 5a01 	vldr	s11, [r6, #4]
  401324:	edd7 2a01 	vldr	s5, [r7, #4]
  401328:	9404      	str	r4, [sp, #16]
  40132a:	ee35 5a63 	vsub.f32	s10, s10, s7
  40132e:	ee74 3a27 	vadd.f32	s7, s8, s15
  401332:	ee36 6a47 	vsub.f32	s12, s12, s14
  401336:	ee76 5aa5 	vadd.f32	s11, s13, s11
  40133a:	ee73 3ac3 	vsub.f32	s7, s7, s6
  40133e:	0849      	lsrs	r1, r1, #1
  401340:	f102 0e08 	add.w	lr, r2, #8
  401344:	ee76 6ac4 	vsub.f32	s13, s13, s8
  401348:	ee77 7ac4 	vsub.f32	s15, s15, s8
  40134c:	9109      	str	r1, [sp, #36]	; 0x24
  40134e:	ee35 4a47 	vsub.f32	s8, s10, s14
  401352:	f1a1 0902 	sub.w	r9, r1, #2
  401356:	f8cd e00c 	str.w	lr, [sp, #12]
  40135a:	4631      	mov	r1, r6
  40135c:	ee13 ea90 	vmov	lr, s7
  401360:	ee36 6a64 	vsub.f32	s12, s12, s9
  401364:	ee75 5aa2 	vadd.f32	s11, s11, s5
  401368:	4604      	mov	r4, r0
  40136a:	edc5 5a01 	vstr	s11, [r5, #4]
  40136e:	ee37 7a05 	vadd.f32	s14, s14, s10
  401372:	f841 eb08 	str.w	lr, [r1], #8
  401376:	ee34 5a24 	vadd.f32	s10, s8, s9
  40137a:	ee16 ea10 	vmov	lr, s12
  40137e:	ed86 5a01 	vstr	s10, [r6, #4]
  401382:	ee76 6ac3 	vsub.f32	s13, s13, s6
  401386:	f844 eb08 	str.w	lr, [r4], #8
  40138a:	ee77 7a83 	vadd.f32	s15, s15, s6
  40138e:	edc0 6a01 	vstr	s13, [r0, #4]
  401392:	9405      	str	r4, [sp, #20]
  401394:	4604      	mov	r4, r0
  401396:	ee17 0a90 	vmov	r0, s15
  40139a:	9106      	str	r1, [sp, #24]
  40139c:	ee37 7a64 	vsub.f32	s14, s14, s9
  4013a0:	f102 0110 	add.w	r1, r2, #16
  4013a4:	46bc      	mov	ip, r7
  4013a6:	9100      	str	r1, [sp, #0]
  4013a8:	f847 0b08 	str.w	r0, [r7], #8
  4013ac:	f102 0118 	add.w	r1, r2, #24
  4013b0:	ea5f 0059 	movs.w	r0, r9, lsr #1
  4013b4:	9102      	str	r1, [sp, #8]
  4013b6:	ed8c 7a01 	vstr	s14, [ip, #4]
  4013ba:	9007      	str	r0, [sp, #28]
  4013bc:	f000 8134 	beq.w	401628 <arm_cfft_radix8by4_f32+0x368>
  4013c0:	f102 0920 	add.w	r9, r2, #32
  4013c4:	f102 0830 	add.w	r8, r2, #48	; 0x30
  4013c8:	9a01      	ldr	r2, [sp, #4]
  4013ca:	f8dd a000 	ldr.w	sl, [sp]
  4013ce:	3b0c      	subs	r3, #12
  4013d0:	4683      	mov	fp, r0
  4013d2:	4463      	add	r3, ip
  4013d4:	f105 0e10 	add.w	lr, r5, #16
  4013d8:	f1a4 010c 	sub.w	r1, r4, #12
  4013dc:	f104 0510 	add.w	r5, r4, #16
  4013e0:	f1a6 0c0c 	sub.w	ip, r6, #12
  4013e4:	f1a2 040c 	sub.w	r4, r2, #12
  4013e8:	f106 0010 	add.w	r0, r6, #16
  4013ec:	3210      	adds	r2, #16
  4013ee:	ed1e 5a02 	vldr	s10, [lr, #-8]
  4013f2:	ed55 5a02 	vldr	s11, [r5, #-8]
  4013f6:	ed50 7a02 	vldr	s15, [r0, #-8]
  4013fa:	ed52 1a02 	vldr	s3, [r2, #-8]
  4013fe:	ed55 6a01 	vldr	s13, [r5, #-4]
  401402:	ed1e 0a01 	vldr	s0, [lr, #-4]
  401406:	ed12 1a01 	vldr	s2, [r2, #-4]
  40140a:	ed10 8a01 	vldr	s16, [r0, #-4]
  40140e:	ee35 4a25 	vadd.f32	s8, s10, s11
  401412:	ee30 6a26 	vadd.f32	s12, s0, s13
  401416:	ee37 7a84 	vadd.f32	s14, s15, s8
  40141a:	ee30 0a66 	vsub.f32	s0, s0, s13
  40141e:	ee37 7a21 	vadd.f32	s14, s14, s3
  401422:	ee75 5a65 	vsub.f32	s11, s10, s11
  401426:	ed0e 7a02 	vstr	s14, [lr, #-8]
  40142a:	ed10 7a01 	vldr	s14, [r0, #-4]
  40142e:	ed52 6a01 	vldr	s13, [r2, #-4]
  401432:	ee36 7a07 	vadd.f32	s14, s12, s14
  401436:	ee78 aa25 	vadd.f32	s21, s16, s11
  40143a:	ee37 7a26 	vadd.f32	s14, s14, s13
  40143e:	ee70 3a67 	vsub.f32	s7, s0, s15
  401442:	ed0e 7a01 	vstr	s14, [lr, #-4]
  401446:	ed94 7a02 	vldr	s14, [r4, #8]
  40144a:	ed9c 2a02 	vldr	s4, [ip, #8]
  40144e:	ed91 ba02 	vldr	s22, [r1, #8]
  401452:	edd3 9a02 	vldr	s19, [r3, #8]
  401456:	edd4 2a01 	vldr	s5, [r4, #4]
  40145a:	ed9c 9a01 	vldr	s18, [ip, #4]
  40145e:	ed93 5a01 	vldr	s10, [r3, #4]
  401462:	edd1 0a01 	vldr	s1, [r1, #4]
  401466:	ee72 6a07 	vadd.f32	s13, s4, s14
  40146a:	ee32 2a47 	vsub.f32	s4, s4, s14
  40146e:	ee7b 8a26 	vadd.f32	s17, s22, s13
  401472:	ee79 4a22 	vadd.f32	s9, s18, s5
  401476:	ee38 7aa9 	vadd.f32	s14, s17, s19
  40147a:	ee79 2a62 	vsub.f32	s5, s18, s5
  40147e:	ed8c 7a02 	vstr	s14, [ip, #8]
  401482:	ed91 7a01 	vldr	s14, [r1, #4]
  401486:	edd3 8a01 	vldr	s17, [r3, #4]
  40148a:	ee34 7a87 	vadd.f32	s14, s9, s14
  40148e:	ee3b 3a69 	vsub.f32	s6, s22, s19
  401492:	ee37 7a28 	vadd.f32	s14, s14, s17
  401496:	ee32 9a60 	vsub.f32	s18, s4, s1
  40149a:	ed8c 7a01 	vstr	s14, [ip, #4]
  40149e:	ed1a 7a01 	vldr	s14, [sl, #-4]
  4014a2:	ed1a aa02 	vldr	s20, [sl, #-8]
  4014a6:	ee73 8a22 	vadd.f32	s17, s6, s5
  4014aa:	ee39 9a05 	vadd.f32	s18, s18, s10
  4014ae:	ee7a aac1 	vsub.f32	s21, s21, s2
  4014b2:	ee73 3aa1 	vadd.f32	s7, s7, s3
  4014b6:	ee2a ca8a 	vmul.f32	s24, s21, s20
  4014ba:	ee69 ba07 	vmul.f32	s23, s18, s14
  4014be:	ee6a aa87 	vmul.f32	s21, s21, s14
  4014c2:	ee29 9a0a 	vmul.f32	s18, s18, s20
  4014c6:	ee63 ca87 	vmul.f32	s25, s7, s14
  4014ca:	ee63 3a8a 	vmul.f32	s7, s7, s20
  4014ce:	ee28 aa8a 	vmul.f32	s20, s17, s20
  4014d2:	ee68 8a87 	vmul.f32	s17, s17, s14
  4014d6:	ee73 3aea 	vsub.f32	s7, s7, s21
  4014da:	ee78 8a89 	vadd.f32	s17, s17, s18
  4014de:	ee3c 7a2c 	vadd.f32	s14, s24, s25
  4014e2:	ee3b aaca 	vsub.f32	s20, s23, s20
  4014e6:	ee34 4a67 	vsub.f32	s8, s8, s15
  4014ea:	ee76 6acb 	vsub.f32	s13, s13, s22
  4014ee:	ee36 6a48 	vsub.f32	s12, s12, s16
  4014f2:	ee74 4ae0 	vsub.f32	s9, s9, s1
  4014f6:	ed00 7a02 	vstr	s14, [r0, #-8]
  4014fa:	ed40 3a01 	vstr	s7, [r0, #-4]
  4014fe:	edc1 8a01 	vstr	s17, [r1, #4]
  401502:	ed81 aa02 	vstr	s20, [r1, #8]
  401506:	ed59 3a04 	vldr	s7, [r9, #-16]
  40150a:	ee36 7ae9 	vsub.f32	s14, s13, s19
  40150e:	ee74 4ac5 	vsub.f32	s9, s9, s10
  401512:	ed59 6a03 	vldr	s13, [r9, #-12]
  401516:	ee34 4a61 	vsub.f32	s8, s8, s3
  40151a:	ee36 6a41 	vsub.f32	s12, s12, s2
  40151e:	ee67 8a63 	vnmul.f32	s17, s14, s7
  401522:	ee66 9a26 	vmul.f32	s19, s12, s13
  401526:	ee24 9a23 	vmul.f32	s18, s8, s7
  40152a:	ee26 6a23 	vmul.f32	s12, s12, s7
  40152e:	ee24 4a26 	vmul.f32	s8, s8, s13
  401532:	ee27 7a26 	vmul.f32	s14, s14, s13
  401536:	ee64 6aa6 	vmul.f32	s13, s9, s13
  40153a:	ee64 4aa3 	vmul.f32	s9, s9, s7
  40153e:	ee36 6a44 	vsub.f32	s12, s12, s8
  401542:	ee37 7a64 	vsub.f32	s14, s14, s9
  401546:	ee38 4ae6 	vsub.f32	s8, s17, s13
  40154a:	ee79 3a29 	vadd.f32	s7, s18, s19
  40154e:	ee75 6a60 	vsub.f32	s13, s10, s1
  401552:	ee75 5ac8 	vsub.f32	s11, s11, s16
  401556:	ee77 7a80 	vadd.f32	s15, s15, s0
  40155a:	ed45 3a02 	vstr	s7, [r5, #-8]
  40155e:	ed05 6a01 	vstr	s12, [r5, #-4]
  401562:	ed84 7a01 	vstr	s14, [r4, #4]
  401566:	ed84 4a02 	vstr	s8, [r4, #8]
  40156a:	ee35 6a81 	vadd.f32	s12, s11, s2
  40156e:	ee36 7ac2 	vsub.f32	s14, s13, s4
  401572:	ed58 5a06 	vldr	s11, [r8, #-24]	; 0xffffffe8
  401576:	ed58 6a05 	vldr	s13, [r8, #-20]	; 0xffffffec
  40157a:	ee33 3a62 	vsub.f32	s6, s6, s5
  40157e:	ee77 7ae1 	vsub.f32	s15, s15, s3
  401582:	ee67 2a26 	vmul.f32	s5, s14, s13
  401586:	ee67 4aa6 	vmul.f32	s9, s15, s13
  40158a:	ee26 5a25 	vmul.f32	s10, s12, s11
  40158e:	ee67 7aa5 	vmul.f32	s15, s15, s11
  401592:	ee26 6a26 	vmul.f32	s12, s12, s13
  401596:	ee27 7a25 	vmul.f32	s14, s14, s11
  40159a:	ee63 6a26 	vmul.f32	s13, s6, s13
  40159e:	ee23 3a25 	vmul.f32	s6, s6, s11
  4015a2:	ee77 7ac6 	vsub.f32	s15, s15, s12
  4015a6:	ee75 5a24 	vadd.f32	s11, s10, s9
  4015aa:	ee32 3ac3 	vsub.f32	s6, s5, s6
  4015ae:	ee36 7a87 	vadd.f32	s14, s13, s14
  4015b2:	f1bb 0b01 	subs.w	fp, fp, #1
  4015b6:	ed42 5a02 	vstr	s11, [r2, #-8]
  4015ba:	ed42 7a01 	vstr	s15, [r2, #-4]
  4015be:	f10e 0e08 	add.w	lr, lr, #8
  4015c2:	ed83 3a02 	vstr	s6, [r3, #8]
  4015c6:	ed83 7a01 	vstr	s14, [r3, #4]
  4015ca:	f1ac 0c08 	sub.w	ip, ip, #8
  4015ce:	f10a 0a08 	add.w	sl, sl, #8
  4015d2:	f100 0008 	add.w	r0, r0, #8
  4015d6:	f1a1 0108 	sub.w	r1, r1, #8
  4015da:	f109 0910 	add.w	r9, r9, #16
  4015de:	f105 0508 	add.w	r5, r5, #8
  4015e2:	f1a4 0408 	sub.w	r4, r4, #8
  4015e6:	f108 0818 	add.w	r8, r8, #24
  4015ea:	f102 0208 	add.w	r2, r2, #8
  4015ee:	f1a3 0308 	sub.w	r3, r3, #8
  4015f2:	f47f aefc 	bne.w	4013ee <arm_cfft_radix8by4_f32+0x12e>
  4015f6:	9907      	ldr	r1, [sp, #28]
  4015f8:	9800      	ldr	r0, [sp, #0]
  4015fa:	00cb      	lsls	r3, r1, #3
  4015fc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
  401600:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  401604:	9100      	str	r1, [sp, #0]
  401606:	9904      	ldr	r1, [sp, #16]
  401608:	4419      	add	r1, r3
  40160a:	9104      	str	r1, [sp, #16]
  40160c:	9903      	ldr	r1, [sp, #12]
  40160e:	4419      	add	r1, r3
  401610:	9103      	str	r1, [sp, #12]
  401612:	9906      	ldr	r1, [sp, #24]
  401614:	4419      	add	r1, r3
  401616:	9106      	str	r1, [sp, #24]
  401618:	9905      	ldr	r1, [sp, #20]
  40161a:	441f      	add	r7, r3
  40161c:	4419      	add	r1, r3
  40161e:	9b02      	ldr	r3, [sp, #8]
  401620:	9105      	str	r1, [sp, #20]
  401622:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  401626:	9302      	str	r3, [sp, #8]
  401628:	9904      	ldr	r1, [sp, #16]
  40162a:	9805      	ldr	r0, [sp, #20]
  40162c:	ed91 4a00 	vldr	s8, [r1]
  401630:	edd0 6a00 	vldr	s13, [r0]
  401634:	9b06      	ldr	r3, [sp, #24]
  401636:	ed97 3a00 	vldr	s6, [r7]
  40163a:	edd3 7a00 	vldr	s15, [r3]
  40163e:	edd0 4a01 	vldr	s9, [r0, #4]
  401642:	edd1 3a01 	vldr	s7, [r1, #4]
  401646:	ed97 2a01 	vldr	s4, [r7, #4]
  40164a:	ed93 7a01 	vldr	s14, [r3, #4]
  40164e:	9a03      	ldr	r2, [sp, #12]
  401650:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
  401654:	ee34 6a26 	vadd.f32	s12, s8, s13
  401658:	ee73 5aa4 	vadd.f32	s11, s7, s9
  40165c:	ee37 5a86 	vadd.f32	s10, s15, s12
  401660:	ee73 3ae4 	vsub.f32	s7, s7, s9
  401664:	ee35 5a03 	vadd.f32	s10, s10, s6
  401668:	ee74 6a66 	vsub.f32	s13, s8, s13
  40166c:	ed81 5a00 	vstr	s10, [r1]
  401670:	ed93 5a01 	vldr	s10, [r3, #4]
  401674:	edd7 4a01 	vldr	s9, [r7, #4]
  401678:	ee35 5a85 	vadd.f32	s10, s11, s10
  40167c:	ee37 4a26 	vadd.f32	s8, s14, s13
  401680:	ee35 5a24 	vadd.f32	s10, s10, s9
  401684:	ee73 4ae7 	vsub.f32	s9, s7, s15
  401688:	ed81 5a01 	vstr	s10, [r1, #4]
  40168c:	edd2 1a00 	vldr	s3, [r2]
  401690:	edd2 2a01 	vldr	s5, [r2, #4]
  401694:	ee34 5a83 	vadd.f32	s10, s9, s6
  401698:	ee34 4a42 	vsub.f32	s8, s8, s4
  40169c:	ee36 6a67 	vsub.f32	s12, s12, s15
  4016a0:	ee64 4a21 	vmul.f32	s9, s8, s3
  4016a4:	ee24 4a22 	vmul.f32	s8, s8, s5
  4016a8:	ee65 2a22 	vmul.f32	s5, s10, s5
  4016ac:	ee25 5a21 	vmul.f32	s10, s10, s3
  4016b0:	ee74 2aa2 	vadd.f32	s5, s9, s5
  4016b4:	ee35 5a44 	vsub.f32	s10, s10, s8
  4016b8:	edc3 2a00 	vstr	s5, [r3]
  4016bc:	ed83 5a01 	vstr	s10, [r3, #4]
  4016c0:	ee75 5ac7 	vsub.f32	s11, s11, s14
  4016c4:	9b00      	ldr	r3, [sp, #0]
  4016c6:	ee36 6a43 	vsub.f32	s12, s12, s6
  4016ca:	ed93 4a01 	vldr	s8, [r3, #4]
  4016ce:	ed93 5a00 	vldr	s10, [r3]
  4016d2:	9b02      	ldr	r3, [sp, #8]
  4016d4:	ee75 5ac2 	vsub.f32	s11, s11, s4
  4016d8:	ee66 4a05 	vmul.f32	s9, s12, s10
  4016dc:	ee25 5a85 	vmul.f32	s10, s11, s10
  4016e0:	ee26 6a04 	vmul.f32	s12, s12, s8
  4016e4:	ee65 5a84 	vmul.f32	s11, s11, s8
  4016e8:	ee35 6a46 	vsub.f32	s12, s10, s12
  4016ec:	ee74 5aa5 	vadd.f32	s11, s9, s11
  4016f0:	ee77 7aa3 	vadd.f32	s15, s15, s7
  4016f4:	ee36 7ac7 	vsub.f32	s14, s13, s14
  4016f8:	ed80 6a01 	vstr	s12, [r0, #4]
  4016fc:	edc0 5a00 	vstr	s11, [r0]
  401700:	edd3 5a01 	vldr	s11, [r3, #4]
  401704:	edd3 6a00 	vldr	s13, [r3]
  401708:	ee37 7a02 	vadd.f32	s14, s14, s4
  40170c:	ee77 7ac3 	vsub.f32	s15, s15, s6
  401710:	ee27 6a26 	vmul.f32	s12, s14, s13
  401714:	ee67 6aa6 	vmul.f32	s13, s15, s13
  401718:	ee27 7a25 	vmul.f32	s14, s14, s11
  40171c:	ee67 7aa5 	vmul.f32	s15, s15, s11
  401720:	ee36 7ac7 	vsub.f32	s14, s13, s14
  401724:	ee76 7a27 	vadd.f32	s15, s12, s15
  401728:	ed87 7a01 	vstr	s14, [r7, #4]
  40172c:	edc7 7a00 	vstr	s15, [r7]
  401730:	e9dd 500a 	ldrd	r5, r0, [sp, #40]	; 0x28
  401734:	4621      	mov	r1, r4
  401736:	686a      	ldr	r2, [r5, #4]
  401738:	2304      	movs	r3, #4
  40173a:	f000 f8af 	bl	40189c <arm_radix8_butterfly_f32>
  40173e:	4630      	mov	r0, r6
  401740:	4621      	mov	r1, r4
  401742:	686a      	ldr	r2, [r5, #4]
  401744:	2304      	movs	r3, #4
  401746:	f000 f8a9 	bl	40189c <arm_radix8_butterfly_f32>
  40174a:	9808      	ldr	r0, [sp, #32]
  40174c:	686a      	ldr	r2, [r5, #4]
  40174e:	4621      	mov	r1, r4
  401750:	2304      	movs	r3, #4
  401752:	f000 f8a3 	bl	40189c <arm_radix8_butterfly_f32>
  401756:	686a      	ldr	r2, [r5, #4]
  401758:	9801      	ldr	r0, [sp, #4]
  40175a:	4621      	mov	r1, r4
  40175c:	2304      	movs	r3, #4
  40175e:	b00d      	add	sp, #52	; 0x34
  401760:	ecbd 8b0a 	vpop	{d8-d12}
  401764:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401768:	f000 b898 	b.w	40189c <arm_radix8_butterfly_f32>

0040176c <arm_cfft_f32>:
  40176c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401770:	2a01      	cmp	r2, #1
  401772:	4606      	mov	r6, r0
  401774:	4617      	mov	r7, r2
  401776:	460c      	mov	r4, r1
  401778:	4698      	mov	r8, r3
  40177a:	8805      	ldrh	r5, [r0, #0]
  40177c:	d056      	beq.n	40182c <arm_cfft_f32+0xc0>
  40177e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
  401782:	d063      	beq.n	40184c <arm_cfft_f32+0xe0>
  401784:	d916      	bls.n	4017b4 <arm_cfft_f32+0x48>
  401786:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
  40178a:	d01a      	beq.n	4017c2 <arm_cfft_f32+0x56>
  40178c:	d947      	bls.n	40181e <arm_cfft_f32+0xb2>
  40178e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
  401792:	d05b      	beq.n	40184c <arm_cfft_f32+0xe0>
  401794:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
  401798:	d105      	bne.n	4017a6 <arm_cfft_f32+0x3a>
  40179a:	2301      	movs	r3, #1
  40179c:	6872      	ldr	r2, [r6, #4]
  40179e:	4629      	mov	r1, r5
  4017a0:	4620      	mov	r0, r4
  4017a2:	f000 f87b 	bl	40189c <arm_radix8_butterfly_f32>
  4017a6:	f1b8 0f00 	cmp.w	r8, #0
  4017aa:	d111      	bne.n	4017d0 <arm_cfft_f32+0x64>
  4017ac:	2f01      	cmp	r7, #1
  4017ae:	d016      	beq.n	4017de <arm_cfft_f32+0x72>
  4017b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4017b4:	2d20      	cmp	r5, #32
  4017b6:	d049      	beq.n	40184c <arm_cfft_f32+0xe0>
  4017b8:	d935      	bls.n	401826 <arm_cfft_f32+0xba>
  4017ba:	2d40      	cmp	r5, #64	; 0x40
  4017bc:	d0ed      	beq.n	40179a <arm_cfft_f32+0x2e>
  4017be:	2d80      	cmp	r5, #128	; 0x80
  4017c0:	d1f1      	bne.n	4017a6 <arm_cfft_f32+0x3a>
  4017c2:	4621      	mov	r1, r4
  4017c4:	4630      	mov	r0, r6
  4017c6:	f7ff fcab 	bl	401120 <arm_cfft_radix8by2_f32>
  4017ca:	f1b8 0f00 	cmp.w	r8, #0
  4017ce:	d0ed      	beq.n	4017ac <arm_cfft_f32+0x40>
  4017d0:	68b2      	ldr	r2, [r6, #8]
  4017d2:	89b1      	ldrh	r1, [r6, #12]
  4017d4:	4620      	mov	r0, r4
  4017d6:	f000 f841 	bl	40185c <arm_bitreversal_32>
  4017da:	2f01      	cmp	r7, #1
  4017dc:	d1e8      	bne.n	4017b0 <arm_cfft_f32+0x44>
  4017de:	ee07 5a90 	vmov	s15, r5
  4017e2:	eef8 7a67 	vcvt.f32.u32	s15, s15
  4017e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
  4017ea:	eec7 6a27 	vdiv.f32	s13, s14, s15
  4017ee:	2d00      	cmp	r5, #0
  4017f0:	d0de      	beq.n	4017b0 <arm_cfft_f32+0x44>
  4017f2:	f104 0108 	add.w	r1, r4, #8
  4017f6:	2300      	movs	r3, #0
  4017f8:	3301      	adds	r3, #1
  4017fa:	429d      	cmp	r5, r3
  4017fc:	f101 0108 	add.w	r1, r1, #8
  401800:	ed11 7a04 	vldr	s14, [r1, #-16]
  401804:	ed51 7a03 	vldr	s15, [r1, #-12]
  401808:	ee27 7a26 	vmul.f32	s14, s14, s13
  40180c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
  401810:	ed01 7a04 	vstr	s14, [r1, #-16]
  401814:	ed41 7a03 	vstr	s15, [r1, #-12]
  401818:	d1ee      	bne.n	4017f8 <arm_cfft_f32+0x8c>
  40181a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40181e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
  401822:	d0ba      	beq.n	40179a <arm_cfft_f32+0x2e>
  401824:	e7bf      	b.n	4017a6 <arm_cfft_f32+0x3a>
  401826:	2d10      	cmp	r5, #16
  401828:	d0cb      	beq.n	4017c2 <arm_cfft_f32+0x56>
  40182a:	e7bc      	b.n	4017a6 <arm_cfft_f32+0x3a>
  40182c:	b19d      	cbz	r5, 401856 <arm_cfft_f32+0xea>
  40182e:	f101 030c 	add.w	r3, r1, #12
  401832:	2200      	movs	r2, #0
  401834:	ed53 7a02 	vldr	s15, [r3, #-8]
  401838:	3201      	adds	r2, #1
  40183a:	eef1 7a67 	vneg.f32	s15, s15
  40183e:	4295      	cmp	r5, r2
  401840:	ed43 7a02 	vstr	s15, [r3, #-8]
  401844:	f103 0308 	add.w	r3, r3, #8
  401848:	d1f4      	bne.n	401834 <arm_cfft_f32+0xc8>
  40184a:	e798      	b.n	40177e <arm_cfft_f32+0x12>
  40184c:	4621      	mov	r1, r4
  40184e:	4630      	mov	r0, r6
  401850:	f7ff fd36 	bl	4012c0 <arm_cfft_radix8by4_f32>
  401854:	e7a7      	b.n	4017a6 <arm_cfft_f32+0x3a>
  401856:	2b00      	cmp	r3, #0
  401858:	d0aa      	beq.n	4017b0 <arm_cfft_f32+0x44>
  40185a:	e7b9      	b.n	4017d0 <arm_cfft_f32+0x64>

0040185c <arm_bitreversal_32>:
  40185c:	b1e9      	cbz	r1, 40189a <arm_bitreversal_32+0x3e>
  40185e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401860:	2500      	movs	r5, #0
  401862:	f102 0e02 	add.w	lr, r2, #2
  401866:	f83e 4015 	ldrh.w	r4, [lr, r5, lsl #1]
  40186a:	f832 3015 	ldrh.w	r3, [r2, r5, lsl #1]
  40186e:	08a4      	lsrs	r4, r4, #2
  401870:	089b      	lsrs	r3, r3, #2
  401872:	f850 6024 	ldr.w	r6, [r0, r4, lsl #2]
  401876:	f850 c023 	ldr.w	ip, [r0, r3, lsl #2]
  40187a:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
  40187e:	00a6      	lsls	r6, r4, #2
  401880:	009b      	lsls	r3, r3, #2
  401882:	f840 c024 	str.w	ip, [r0, r4, lsl #2]
  401886:	3304      	adds	r3, #4
  401888:	1d34      	adds	r4, r6, #4
  40188a:	3502      	adds	r5, #2
  40188c:	58c6      	ldr	r6, [r0, r3]
  40188e:	5907      	ldr	r7, [r0, r4]
  401890:	50c7      	str	r7, [r0, r3]
  401892:	428d      	cmp	r5, r1
  401894:	5106      	str	r6, [r0, r4]
  401896:	d3e6      	bcc.n	401866 <arm_bitreversal_32+0xa>
  401898:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40189a:	4770      	bx	lr

0040189c <arm_radix8_butterfly_f32>:
  40189c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018a0:	ed2d 8b10 	vpush	{d8-d15}
  4018a4:	b095      	sub	sp, #84	; 0x54
  4018a6:	e9cd 3210 	strd	r3, r2, [sp, #64]	; 0x40
  4018aa:	4603      	mov	r3, r0
  4018ac:	3304      	adds	r3, #4
  4018ae:	ed9f bab9 	vldr	s22, [pc, #740]	; 401b94 <arm_radix8_butterfly_f32+0x2f8>
  4018b2:	9012      	str	r0, [sp, #72]	; 0x48
  4018b4:	468b      	mov	fp, r1
  4018b6:	9313      	str	r3, [sp, #76]	; 0x4c
  4018b8:	4689      	mov	r9, r1
  4018ba:	ea4f 06db 	mov.w	r6, fp, lsr #3
  4018be:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4018c0:	960f      	str	r6, [sp, #60]	; 0x3c
  4018c2:	ea4f 1846 	mov.w	r8, r6, lsl #5
  4018c6:	ea4f 0ec6 	mov.w	lr, r6, lsl #3
  4018ca:	eb03 0508 	add.w	r5, r3, r8
  4018ce:	ea4f 0a86 	mov.w	sl, r6, lsl #2
  4018d2:	eb05 040e 	add.w	r4, r5, lr
  4018d6:	0137      	lsls	r7, r6, #4
  4018d8:	eba6 030a 	sub.w	r3, r6, sl
  4018dc:	eb04 000e 	add.w	r0, r4, lr
  4018e0:	44b2      	add	sl, r6
  4018e2:	1d3a      	adds	r2, r7, #4
  4018e4:	9702      	str	r7, [sp, #8]
  4018e6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  4018ea:	ea4f 07ca 	mov.w	r7, sl, lsl #3
  4018ee:	ebae 0c06 	sub.w	ip, lr, r6
  4018f2:	9703      	str	r7, [sp, #12]
  4018f4:	eb03 0708 	add.w	r7, r3, r8
  4018f8:	9701      	str	r7, [sp, #4]
  4018fa:	ea4f 07cc 	mov.w	r7, ip, lsl #3
  4018fe:	9706      	str	r7, [sp, #24]
  401900:	9f12      	ldr	r7, [sp, #72]	; 0x48
  401902:	eb06 0646 	add.w	r6, r6, r6, lsl #1
  401906:	f10e 0104 	add.w	r1, lr, #4
  40190a:	4439      	add	r1, r7
  40190c:	443a      	add	r2, r7
  40190e:	0137      	lsls	r7, r6, #4
  401910:	00f6      	lsls	r6, r6, #3
  401912:	9704      	str	r7, [sp, #16]
  401914:	9605      	str	r6, [sp, #20]
  401916:	9f01      	ldr	r7, [sp, #4]
  401918:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  40191a:	ea4f 0acb 	mov.w	sl, fp, lsl #3
  40191e:	f04f 0c00 	mov.w	ip, #0
  401922:	edd4 6a00 	vldr	s13, [r4]
  401926:	edd7 1a00 	vldr	s3, [r7]
  40192a:	ed16 aa01 	vldr	s20, [r6, #-4]
  40192e:	edd5 5a00 	vldr	s11, [r5]
  401932:	ed52 9a01 	vldr	s19, [r2, #-4]
  401936:	ed90 6a00 	vldr	s12, [r0]
  40193a:	ed51 7a01 	vldr	s15, [r1, #-4]
  40193e:	ed93 3a00 	vldr	s6, [r3]
  401942:	ee39 0a86 	vadd.f32	s0, s19, s12
  401946:	ee33 2a21 	vadd.f32	s4, s6, s3
  40194a:	ee37 5aa6 	vadd.f32	s10, s15, s13
  40194e:	ee7a 4a25 	vadd.f32	s9, s20, s11
  401952:	ee35 7a02 	vadd.f32	s14, s10, s4
  401956:	ee34 4a80 	vadd.f32	s8, s9, s0
  40195a:	ee77 7ae6 	vsub.f32	s15, s15, s13
  40195e:	ee74 6a07 	vadd.f32	s13, s8, s14
  401962:	ee34 4a47 	vsub.f32	s8, s8, s14
  401966:	ed46 6a01 	vstr	s13, [r6, #-4]
  40196a:	ed85 4a00 	vstr	s8, [r5]
  40196e:	edd1 6a00 	vldr	s13, [r1]
  401972:	ed94 9a01 	vldr	s18, [r4, #4]
  401976:	edd3 2a01 	vldr	s5, [r3, #4]
  40197a:	edd7 8a01 	vldr	s17, [r7, #4]
  40197e:	edd6 0a00 	vldr	s1, [r6]
  401982:	edd5 3a01 	vldr	s7, [r5, #4]
  401986:	ed90 8a01 	vldr	s16, [r0, #4]
  40198a:	ed92 7a00 	vldr	s14, [r2]
  40198e:	ee33 3a61 	vsub.f32	s6, s6, s3
  401992:	ee36 4ac9 	vsub.f32	s8, s13, s18
  401996:	ee72 aae8 	vsub.f32	s21, s5, s17
  40199a:	ee77 1ac3 	vsub.f32	s3, s15, s6
  40199e:	ee34 1a2a 	vadd.f32	s2, s8, s21
  4019a2:	ee77 7a83 	vadd.f32	s15, s15, s6
  4019a6:	ee34 4a6a 	vsub.f32	s8, s8, s21
  4019aa:	ee30 3aa3 	vadd.f32	s6, s1, s7
  4019ae:	ee39 6ac6 	vsub.f32	s12, s19, s12
  4019b2:	ee70 3ae3 	vsub.f32	s7, s1, s7
  4019b6:	ee72 2aa8 	vadd.f32	s5, s5, s17
  4019ba:	ee77 0a08 	vadd.f32	s1, s14, s16
  4019be:	ee21 1a0b 	vmul.f32	s2, s2, s22
  4019c2:	ee37 7a48 	vsub.f32	s14, s14, s16
  4019c6:	ee61 1a8b 	vmul.f32	s3, s3, s22
  4019ca:	ee7a 5a65 	vsub.f32	s11, s20, s11
  4019ce:	ee76 6a89 	vadd.f32	s13, s13, s18
  4019d2:	ee24 4a0b 	vmul.f32	s8, s8, s22
  4019d6:	ee67 7a8b 	vmul.f32	s15, s15, s22
  4019da:	ee74 4ac0 	vsub.f32	s9, s9, s0
  4019de:	ee35 5a42 	vsub.f32	s10, s10, s4
  4019e2:	ee36 0aa2 	vadd.f32	s0, s13, s5
  4019e6:	ee33 2a20 	vadd.f32	s4, s6, s1
  4019ea:	ee76 6ae2 	vsub.f32	s13, s13, s5
  4019ee:	ee33 3a60 	vsub.f32	s6, s6, s1
  4019f2:	ee75 2aa1 	vadd.f32	s5, s11, s3
  4019f6:	ee77 0a01 	vadd.f32	s1, s14, s2
  4019fa:	ee75 5ae1 	vsub.f32	s11, s11, s3
  4019fe:	ee37 7a41 	vsub.f32	s14, s14, s2
  401a02:	ee73 1a84 	vadd.f32	s3, s7, s8
  401a06:	ee33 4ac4 	vsub.f32	s8, s7, s8
  401a0a:	ee76 3a27 	vadd.f32	s7, s12, s15
  401a0e:	ee76 7a67 	vsub.f32	s15, s12, s15
  401a12:	ee32 8a00 	vadd.f32	s16, s4, s0
  401a16:	ee33 1a45 	vsub.f32	s2, s6, s10
  401a1a:	ee32 2a40 	vsub.f32	s4, s4, s0
  401a1e:	ee35 5a03 	vadd.f32	s10, s10, s6
  401a22:	ee34 0aa6 	vadd.f32	s0, s9, s13
  401a26:	ee32 3aa0 	vadd.f32	s6, s5, s1
  401a2a:	ee74 6ae6 	vsub.f32	s13, s9, s13
  401a2e:	ee34 6a67 	vsub.f32	s12, s8, s15
  401a32:	ee75 4a87 	vadd.f32	s9, s11, s14
  401a36:	ee72 2ae0 	vsub.f32	s5, s5, s1
  401a3a:	ee35 7ac7 	vsub.f32	s14, s11, s14
  401a3e:	ee77 7a84 	vadd.f32	s15, s15, s8
  401a42:	ee71 5ae3 	vsub.f32	s11, s3, s7
  401a46:	44dc      	add	ip, fp
  401a48:	ee73 3aa1 	vadd.f32	s7, s7, s3
  401a4c:	45e1      	cmp	r9, ip
  401a4e:	ed86 8a00 	vstr	s16, [r6]
  401a52:	ed85 2a01 	vstr	s4, [r5, #4]
  401a56:	4456      	add	r6, sl
  401a58:	ed02 0a01 	vstr	s0, [r2, #-4]
  401a5c:	4455      	add	r5, sl
  401a5e:	edc0 6a00 	vstr	s13, [r0]
  401a62:	ed82 1a00 	vstr	s2, [r2]
  401a66:	ed80 5a01 	vstr	s10, [r0, #4]
  401a6a:	4452      	add	r2, sl
  401a6c:	ed01 3a01 	vstr	s6, [r1, #-4]
  401a70:	4450      	add	r0, sl
  401a72:	edc7 2a00 	vstr	s5, [r7]
  401a76:	edc4 4a00 	vstr	s9, [r4]
  401a7a:	ed83 7a00 	vstr	s14, [r3]
  401a7e:	edc1 5a00 	vstr	s11, [r1]
  401a82:	edc7 3a01 	vstr	s7, [r7, #4]
  401a86:	4451      	add	r1, sl
  401a88:	ed84 6a01 	vstr	s12, [r4, #4]
  401a8c:	4457      	add	r7, sl
  401a8e:	edc3 7a01 	vstr	s15, [r3, #4]
  401a92:	4454      	add	r4, sl
  401a94:	4453      	add	r3, sl
  401a96:	f63f af44 	bhi.w	401922 <arm_radix8_butterfly_f32+0x86>
  401a9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a9c:	2b07      	cmp	r3, #7
  401a9e:	f240 81b7 	bls.w	401e10 <arm_radix8_butterfly_f32+0x574>
  401aa2:	9b06      	ldr	r3, [sp, #24]
  401aa4:	9903      	ldr	r1, [sp, #12]
  401aa6:	9812      	ldr	r0, [sp, #72]	; 0x48
  401aa8:	9e05      	ldr	r6, [sp, #20]
  401aaa:	9a04      	ldr	r2, [sp, #16]
  401aac:	f103 0c08 	add.w	ip, r3, #8
  401ab0:	9b02      	ldr	r3, [sp, #8]
  401ab2:	3108      	adds	r1, #8
  401ab4:	f108 0808 	add.w	r8, r8, #8
  401ab8:	1841      	adds	r1, r0, r1
  401aba:	3608      	adds	r6, #8
  401abc:	330c      	adds	r3, #12
  401abe:	4604      	mov	r4, r0
  401ac0:	4444      	add	r4, r8
  401ac2:	18c3      	adds	r3, r0, r3
  401ac4:	9109      	str	r1, [sp, #36]	; 0x24
  401ac6:	1981      	adds	r1, r0, r6
  401ac8:	f10e 0e08 	add.w	lr, lr, #8
  401acc:	3208      	adds	r2, #8
  401ace:	940b      	str	r4, [sp, #44]	; 0x2c
  401ad0:	9107      	str	r1, [sp, #28]
  401ad2:	4604      	mov	r4, r0
  401ad4:	4601      	mov	r1, r0
  401ad6:	9304      	str	r3, [sp, #16]
  401ad8:	f100 030c 	add.w	r3, r0, #12
  401adc:	4474      	add	r4, lr
  401ade:	f04f 0801 	mov.w	r8, #1
  401ae2:	1882      	adds	r2, r0, r2
  401ae4:	4461      	add	r1, ip
  401ae6:	9305      	str	r3, [sp, #20]
  401ae8:	464b      	mov	r3, r9
  401aea:	940a      	str	r4, [sp, #40]	; 0x28
  401aec:	46c1      	mov	r9, r8
  401aee:	9208      	str	r2, [sp, #32]
  401af0:	46d8      	mov	r8, fp
  401af2:	9106      	str	r1, [sp, #24]
  401af4:	f04f 0e00 	mov.w	lr, #0
  401af8:	469b      	mov	fp, r3
  401afa:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401afc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401afe:	449e      	add	lr, r3
  401b00:	ea4f 03ce 	mov.w	r3, lr, lsl #3
  401b04:	441a      	add	r2, r3
  401b06:	920e      	str	r2, [sp, #56]	; 0x38
  401b08:	441a      	add	r2, r3
  401b0a:	18d4      	adds	r4, r2, r3
  401b0c:	18e5      	adds	r5, r4, r3
  401b0e:	18ee      	adds	r6, r5, r3
  401b10:	18f7      	adds	r7, r6, r3
  401b12:	eb07 0c03 	add.w	ip, r7, r3
  401b16:	920d      	str	r2, [sp, #52]	; 0x34
  401b18:	ebae 028e 	sub.w	r2, lr, lr, lsl #2
  401b1c:	eb0c 1102 	add.w	r1, ip, r2, lsl #4
  401b20:	910c      	str	r1, [sp, #48]	; 0x30
  401b22:	4419      	add	r1, r3
  401b24:	9103      	str	r1, [sp, #12]
  401b26:	4419      	add	r1, r3
  401b28:	18ca      	adds	r2, r1, r3
  401b2a:	9202      	str	r2, [sp, #8]
  401b2c:	441a      	add	r2, r3
  401b2e:	18d0      	adds	r0, r2, r3
  401b30:	ed92 ea01 	vldr	s28, [r2, #4]
  401b34:	9a02      	ldr	r2, [sp, #8]
  401b36:	edd4 7a00 	vldr	s15, [r4]
  401b3a:	edd2 da01 	vldr	s27, [r2, #4]
  401b3e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  401b40:	ed91 da01 	vldr	s26, [r1, #4]
  401b44:	ed92 ca01 	vldr	s24, [r2, #4]
  401b48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401b4a:	9903      	ldr	r1, [sp, #12]
  401b4c:	edcd 7a03 	vstr	s15, [sp, #12]
  401b50:	edd2 7a00 	vldr	s15, [r2]
  401b54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401b56:	edcd 7a02 	vstr	s15, [sp, #8]
  401b5a:	edd2 7a00 	vldr	s15, [r2]
  401b5e:	edd0 ea01 	vldr	s29, [r0, #4]
  401b62:	edd1 ca01 	vldr	s25, [r1, #4]
  401b66:	eddc ba00 	vldr	s23, [ip]
  401b6a:	edd7 aa00 	vldr	s21, [r7]
  401b6e:	ed96 aa00 	vldr	s20, [r6]
  401b72:	edd5 9a00 	vldr	s19, [r5]
  401b76:	edcd 7a01 	vstr	s15, [sp, #4]
  401b7a:	4403      	add	r3, r0
  401b7c:	ed93 fa01 	vldr	s30, [r3, #4]
  401b80:	e9dd 7604 	ldrd	r7, r6, [sp, #16]
  401b84:	e9dd 5406 	ldrd	r5, r4, [sp, #24]
  401b88:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  401b8c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  401b90:	46cc      	mov	ip, r9
  401b92:	e001      	b.n	401b98 <arm_radix8_butterfly_f32+0x2fc>
  401b94:	3f3504f3 	.word	0x3f3504f3
  401b98:	ed91 6a00 	vldr	s12, [r1]
  401b9c:	ed93 5a00 	vldr	s10, [r3]
  401ba0:	edd0 fa00 	vldr	s31, [r0]
  401ba4:	edd4 7a00 	vldr	s15, [r4]
  401ba8:	ed95 7a00 	vldr	s14, [r5]
  401bac:	ed56 3a01 	vldr	s7, [r6, #-4]
  401bb0:	ed17 3a01 	vldr	s6, [r7, #-4]
  401bb4:	ed92 2a00 	vldr	s4, [r2]
  401bb8:	ed96 0a00 	vldr	s0, [r6]
  401bbc:	ee33 8a85 	vadd.f32	s16, s7, s10
  401bc0:	ee32 1a06 	vadd.f32	s2, s4, s12
  401bc4:	ee33 4a2f 	vadd.f32	s8, s6, s31
  401bc8:	ee77 4a87 	vadd.f32	s9, s15, s14
  401bcc:	ee78 1a04 	vadd.f32	s3, s16, s8
  401bd0:	ee71 6a24 	vadd.f32	s13, s2, s9
  401bd4:	ee32 2a46 	vsub.f32	s4, s4, s12
  401bd8:	ee31 6aa6 	vadd.f32	s12, s3, s13
  401bdc:	ee77 7ac7 	vsub.f32	s15, s15, s14
  401be0:	ed06 6a01 	vstr	s12, [r6, #-4]
  401be4:	edd4 8a01 	vldr	s17, [r4, #4]
  401be8:	ed92 9a01 	vldr	s18, [r2, #4]
  401bec:	edd7 0a00 	vldr	s1, [r7]
  401bf0:	edd1 2a01 	vldr	s5, [r1, #4]
  401bf4:	ed95 7a01 	vldr	s14, [r5, #4]
  401bf8:	ed93 6a01 	vldr	s12, [r3, #4]
  401bfc:	edd0 5a01 	vldr	s11, [r0, #4]
  401c00:	ee73 3ac5 	vsub.f32	s7, s7, s10
  401c04:	ee33 3a6f 	vsub.f32	s6, s6, s31
  401c08:	ee39 5a62 	vsub.f32	s10, s18, s5
  401c0c:	ee78 fac7 	vsub.f32	s31, s17, s14
  401c10:	ee38 4a44 	vsub.f32	s8, s16, s8
  401c14:	ee38 7a87 	vadd.f32	s14, s17, s14
  401c18:	ee30 8aa5 	vadd.f32	s16, s1, s11
  401c1c:	ee79 2a22 	vadd.f32	s5, s18, s5
  401c20:	ee32 9a27 	vadd.f32	s18, s4, s15
  401c24:	ee72 7a67 	vsub.f32	s15, s4, s15
  401c28:	ee30 2a06 	vadd.f32	s4, s0, s12
  401c2c:	ee75 8a6f 	vsub.f32	s17, s10, s31
  401c30:	ee71 4a64 	vsub.f32	s9, s2, s9
  401c34:	ee35 5a2f 	vadd.f32	s10, s10, s31
  401c38:	ee32 1a08 	vadd.f32	s2, s4, s16
  401c3c:	ee72 fa87 	vadd.f32	s31, s5, s14
  401c40:	ee32 2a48 	vsub.f32	s4, s4, s16
  401c44:	ee68 8a8b 	vmul.f32	s17, s17, s22
  401c48:	ee25 5a0b 	vmul.f32	s10, s10, s22
  401c4c:	ee70 5ae5 	vsub.f32	s11, s1, s11
  401c50:	ee72 2ac7 	vsub.f32	s5, s5, s14
  401c54:	ee71 6ae6 	vsub.f32	s13, s3, s13
  401c58:	ee29 9a0b 	vmul.f32	s18, s18, s22
  401c5c:	ee71 1a6f 	vsub.f32	s3, s2, s31
  401c60:	ee67 7a8b 	vmul.f32	s15, s15, s22
  401c64:	ee30 6a46 	vsub.f32	s12, s0, s12
  401c68:	ee74 0a22 	vadd.f32	s1, s8, s5
  401c6c:	ee36 0a28 	vadd.f32	s0, s12, s17
  401c70:	ee74 2a62 	vsub.f32	s5, s8, s5
  401c74:	ee36 6a68 	vsub.f32	s12, s12, s17
  401c78:	ee32 4a64 	vsub.f32	s8, s4, s9
  401c7c:	ee73 8a09 	vadd.f32	s17, s6, s18
  401c80:	ee74 4a82 	vadd.f32	s9, s9, s4
  401c84:	ee33 9a49 	vsub.f32	s18, s6, s18
  401c88:	ee2d 2aa1 	vmul.f32	s4, s27, s3
  401c8c:	ee35 3a85 	vadd.f32	s6, s11, s10
  401c90:	ee75 5ac5 	vsub.f32	s11, s11, s10
  401c94:	ee33 5aa7 	vadd.f32	s10, s7, s15
  401c98:	ee73 7ae7 	vsub.f32	s15, s7, s15
  401c9c:	ee69 3aa6 	vmul.f32	s7, s19, s13
  401ca0:	ee30 7a68 	vsub.f32	s14, s0, s17
  401ca4:	ee35 8a03 	vadd.f32	s16, s10, s6
  401ca8:	ee38 0a80 	vadd.f32	s0, s17, s0
  401cac:	ee73 3a82 	vadd.f32	s7, s7, s4
  401cb0:	ee69 8aa1 	vmul.f32	s17, s19, s3
  401cb4:	ed9d 2a01 	vldr	s4, [sp, #4]
  401cb8:	eddd 1a02 	vldr	s3, [sp, #8]
  401cbc:	ee35 5a43 	vsub.f32	s10, s10, s6
  401cc0:	ee71 fa2f 	vadd.f32	s31, s2, s31
  401cc4:	ee37 3aa5 	vadd.f32	s6, s15, s11
  401cc8:	ee21 1aa0 	vmul.f32	s2, s3, s1
  401ccc:	ee77 7ae5 	vsub.f32	s15, s15, s11
  401cd0:	ee6d 6aa6 	vmul.f32	s13, s27, s13
  401cd4:	ee76 5a49 	vsub.f32	s11, s12, s18
  401cd8:	ee6c 0aa0 	vmul.f32	s1, s25, s1
  401cdc:	ee39 6a06 	vadd.f32	s12, s18, s12
  401ce0:	ee2c 9a84 	vmul.f32	s18, s25, s8
  401ce4:	ee21 4a84 	vmul.f32	s8, s3, s8
  401ce8:	ee6c 1a07 	vmul.f32	s3, s24, s14
  401cec:	ee22 7a07 	vmul.f32	s14, s4, s14
  401cf0:	ee22 2a08 	vmul.f32	s4, s4, s16
  401cf4:	ee2c 8a08 	vmul.f32	s16, s24, s16
  401cf8:	ee78 6ae6 	vsub.f32	s13, s17, s13
  401cfc:	ee31 1a09 	vadd.f32	s2, s2, s18
  401d00:	ee6a 8aa2 	vmul.f32	s17, s21, s5
  401d04:	ee2e 9aa4 	vmul.f32	s18, s29, s9
  401d08:	ee74 0a60 	vsub.f32	s1, s8, s1
  401d0c:	ee37 7a48 	vsub.f32	s14, s14, s16
  401d10:	ee2f 4a00 	vmul.f32	s8, s30, s0
  401d14:	ee2b 8a85 	vmul.f32	s16, s23, s10
  401d18:	ee72 1a21 	vadd.f32	s3, s4, s3
  401d1c:	ee6a 4aa4 	vmul.f32	s9, s21, s9
  401d20:	ee38 2a89 	vadd.f32	s4, s17, s18
  401d24:	ee2f 5a05 	vmul.f32	s10, s30, s10
  401d28:	ee38 8a04 	vadd.f32	s16, s16, s8
  401d2c:	ee2e 9a25 	vmul.f32	s18, s28, s11
  401d30:	ee2a 4a25 	vmul.f32	s8, s20, s11
  401d34:	ee6e 2aa2 	vmul.f32	s5, s29, s5
  401d38:	eddd 5a03 	vldr	s11, [sp, #12]
  401d3c:	edc6 fa00 	vstr	s31, [r6]
  401d40:	ee2b 0a80 	vmul.f32	s0, s23, s0
  401d44:	ee74 2ae2 	vsub.f32	s5, s9, s5
  401d48:	ee30 0a45 	vsub.f32	s0, s0, s10
  401d4c:	ee6a 4a03 	vmul.f32	s9, s20, s6
  401d50:	ee65 8aa7 	vmul.f32	s17, s11, s15
  401d54:	ee2d 5a06 	vmul.f32	s10, s26, s12
  401d58:	ee2e 3a03 	vmul.f32	s6, s28, s6
  401d5c:	ee6d 7a27 	vmul.f32	s15, s26, s15
  401d60:	ee25 6a86 	vmul.f32	s12, s11, s12
  401d64:	ee74 4a89 	vadd.f32	s9, s9, s18
  401d68:	ee34 3a43 	vsub.f32	s6, s8, s6
  401d6c:	ee78 8a85 	vadd.f32	s17, s17, s10
  401d70:	ee36 6a67 	vsub.f32	s12, s12, s15
  401d74:	44c4      	add	ip, r8
  401d76:	45e3      	cmp	fp, ip
  401d78:	edc3 3a00 	vstr	s7, [r3]
  401d7c:	edc3 6a01 	vstr	s13, [r3, #4]
  401d80:	4456      	add	r6, sl
  401d82:	ed07 1a01 	vstr	s2, [r7, #-4]
  401d86:	edc7 0a00 	vstr	s1, [r7]
  401d8a:	4453      	add	r3, sl
  401d8c:	ed80 2a00 	vstr	s4, [r0]
  401d90:	edc0 2a01 	vstr	s5, [r0, #4]
  401d94:	4457      	add	r7, sl
  401d96:	edc2 1a00 	vstr	s3, [r2]
  401d9a:	ed82 7a01 	vstr	s14, [r2, #4]
  401d9e:	4450      	add	r0, sl
  401da0:	ed85 8a00 	vstr	s16, [r5]
  401da4:	ed85 0a01 	vstr	s0, [r5, #4]
  401da8:	4452      	add	r2, sl
  401daa:	edc1 4a00 	vstr	s9, [r1]
  401dae:	4455      	add	r5, sl
  401db0:	ed81 3a01 	vstr	s6, [r1, #4]
  401db4:	edc4 8a00 	vstr	s17, [r4]
  401db8:	ed84 6a01 	vstr	s12, [r4, #4]
  401dbc:	4451      	add	r1, sl
  401dbe:	4454      	add	r4, sl
  401dc0:	f63f aeea 	bhi.w	401b98 <arm_radix8_butterfly_f32+0x2fc>
  401dc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401dc6:	3308      	adds	r3, #8
  401dc8:	930b      	str	r3, [sp, #44]	; 0x2c
  401dca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401dcc:	3308      	adds	r3, #8
  401dce:	930a      	str	r3, [sp, #40]	; 0x28
  401dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dd2:	3308      	adds	r3, #8
  401dd4:	9309      	str	r3, [sp, #36]	; 0x24
  401dd6:	9b08      	ldr	r3, [sp, #32]
  401dd8:	3308      	adds	r3, #8
  401dda:	9308      	str	r3, [sp, #32]
  401ddc:	9b07      	ldr	r3, [sp, #28]
  401dde:	3308      	adds	r3, #8
  401de0:	9307      	str	r3, [sp, #28]
  401de2:	9b06      	ldr	r3, [sp, #24]
  401de4:	3308      	adds	r3, #8
  401de6:	9306      	str	r3, [sp, #24]
  401de8:	9b05      	ldr	r3, [sp, #20]
  401dea:	3308      	adds	r3, #8
  401dec:	9305      	str	r3, [sp, #20]
  401dee:	9b04      	ldr	r3, [sp, #16]
  401df0:	3308      	adds	r3, #8
  401df2:	9304      	str	r3, [sp, #16]
  401df4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401df6:	f109 0901 	add.w	r9, r9, #1
  401dfa:	454b      	cmp	r3, r9
  401dfc:	f47f ae7d 	bne.w	401afa <arm_radix8_butterfly_f32+0x25e>
  401e00:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401e02:	00db      	lsls	r3, r3, #3
  401e04:	b29b      	uxth	r3, r3
  401e06:	46d9      	mov	r9, fp
  401e08:	9310      	str	r3, [sp, #64]	; 0x40
  401e0a:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
  401e0e:	e554      	b.n	4018ba <arm_radix8_butterfly_f32+0x1e>
  401e10:	b015      	add	sp, #84	; 0x54
  401e12:	ecbd 8b10 	vpop	{d8-d15}
  401e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e1a:	bf00      	nop

00401e1c <__aeabi_drsub>:
  401e1c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401e20:	e002      	b.n	401e28 <__adddf3>
  401e22:	bf00      	nop

00401e24 <__aeabi_dsub>:
  401e24:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401e28 <__adddf3>:
  401e28:	b530      	push	{r4, r5, lr}
  401e2a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401e2e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401e32:	ea94 0f05 	teq	r4, r5
  401e36:	bf08      	it	eq
  401e38:	ea90 0f02 	teqeq	r0, r2
  401e3c:	bf1f      	itttt	ne
  401e3e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401e42:	ea55 0c02 	orrsne.w	ip, r5, r2
  401e46:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401e4a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401e4e:	f000 80e2 	beq.w	402016 <__adddf3+0x1ee>
  401e52:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401e56:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401e5a:	bfb8      	it	lt
  401e5c:	426d      	neglt	r5, r5
  401e5e:	dd0c      	ble.n	401e7a <__adddf3+0x52>
  401e60:	442c      	add	r4, r5
  401e62:	ea80 0202 	eor.w	r2, r0, r2
  401e66:	ea81 0303 	eor.w	r3, r1, r3
  401e6a:	ea82 0000 	eor.w	r0, r2, r0
  401e6e:	ea83 0101 	eor.w	r1, r3, r1
  401e72:	ea80 0202 	eor.w	r2, r0, r2
  401e76:	ea81 0303 	eor.w	r3, r1, r3
  401e7a:	2d36      	cmp	r5, #54	; 0x36
  401e7c:	bf88      	it	hi
  401e7e:	bd30      	pophi	{r4, r5, pc}
  401e80:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401e84:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401e88:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401e8c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401e90:	d002      	beq.n	401e98 <__adddf3+0x70>
  401e92:	4240      	negs	r0, r0
  401e94:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401e98:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401e9c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401ea0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401ea4:	d002      	beq.n	401eac <__adddf3+0x84>
  401ea6:	4252      	negs	r2, r2
  401ea8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401eac:	ea94 0f05 	teq	r4, r5
  401eb0:	f000 80a7 	beq.w	402002 <__adddf3+0x1da>
  401eb4:	f1a4 0401 	sub.w	r4, r4, #1
  401eb8:	f1d5 0e20 	rsbs	lr, r5, #32
  401ebc:	db0d      	blt.n	401eda <__adddf3+0xb2>
  401ebe:	fa02 fc0e 	lsl.w	ip, r2, lr
  401ec2:	fa22 f205 	lsr.w	r2, r2, r5
  401ec6:	1880      	adds	r0, r0, r2
  401ec8:	f141 0100 	adc.w	r1, r1, #0
  401ecc:	fa03 f20e 	lsl.w	r2, r3, lr
  401ed0:	1880      	adds	r0, r0, r2
  401ed2:	fa43 f305 	asr.w	r3, r3, r5
  401ed6:	4159      	adcs	r1, r3
  401ed8:	e00e      	b.n	401ef8 <__adddf3+0xd0>
  401eda:	f1a5 0520 	sub.w	r5, r5, #32
  401ede:	f10e 0e20 	add.w	lr, lr, #32
  401ee2:	2a01      	cmp	r2, #1
  401ee4:	fa03 fc0e 	lsl.w	ip, r3, lr
  401ee8:	bf28      	it	cs
  401eea:	f04c 0c02 	orrcs.w	ip, ip, #2
  401eee:	fa43 f305 	asr.w	r3, r3, r5
  401ef2:	18c0      	adds	r0, r0, r3
  401ef4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401ef8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401efc:	d507      	bpl.n	401f0e <__adddf3+0xe6>
  401efe:	f04f 0e00 	mov.w	lr, #0
  401f02:	f1dc 0c00 	rsbs	ip, ip, #0
  401f06:	eb7e 0000 	sbcs.w	r0, lr, r0
  401f0a:	eb6e 0101 	sbc.w	r1, lr, r1
  401f0e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401f12:	d31b      	bcc.n	401f4c <__adddf3+0x124>
  401f14:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401f18:	d30c      	bcc.n	401f34 <__adddf3+0x10c>
  401f1a:	0849      	lsrs	r1, r1, #1
  401f1c:	ea5f 0030 	movs.w	r0, r0, rrx
  401f20:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401f24:	f104 0401 	add.w	r4, r4, #1
  401f28:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401f2c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401f30:	f080 809a 	bcs.w	402068 <__adddf3+0x240>
  401f34:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401f38:	bf08      	it	eq
  401f3a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401f3e:	f150 0000 	adcs.w	r0, r0, #0
  401f42:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401f46:	ea41 0105 	orr.w	r1, r1, r5
  401f4a:	bd30      	pop	{r4, r5, pc}
  401f4c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401f50:	4140      	adcs	r0, r0
  401f52:	eb41 0101 	adc.w	r1, r1, r1
  401f56:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401f5a:	f1a4 0401 	sub.w	r4, r4, #1
  401f5e:	d1e9      	bne.n	401f34 <__adddf3+0x10c>
  401f60:	f091 0f00 	teq	r1, #0
  401f64:	bf04      	itt	eq
  401f66:	4601      	moveq	r1, r0
  401f68:	2000      	moveq	r0, #0
  401f6a:	fab1 f381 	clz	r3, r1
  401f6e:	bf08      	it	eq
  401f70:	3320      	addeq	r3, #32
  401f72:	f1a3 030b 	sub.w	r3, r3, #11
  401f76:	f1b3 0220 	subs.w	r2, r3, #32
  401f7a:	da0c      	bge.n	401f96 <__adddf3+0x16e>
  401f7c:	320c      	adds	r2, #12
  401f7e:	dd08      	ble.n	401f92 <__adddf3+0x16a>
  401f80:	f102 0c14 	add.w	ip, r2, #20
  401f84:	f1c2 020c 	rsb	r2, r2, #12
  401f88:	fa01 f00c 	lsl.w	r0, r1, ip
  401f8c:	fa21 f102 	lsr.w	r1, r1, r2
  401f90:	e00c      	b.n	401fac <__adddf3+0x184>
  401f92:	f102 0214 	add.w	r2, r2, #20
  401f96:	bfd8      	it	le
  401f98:	f1c2 0c20 	rsble	ip, r2, #32
  401f9c:	fa01 f102 	lsl.w	r1, r1, r2
  401fa0:	fa20 fc0c 	lsr.w	ip, r0, ip
  401fa4:	bfdc      	itt	le
  401fa6:	ea41 010c 	orrle.w	r1, r1, ip
  401faa:	4090      	lslle	r0, r2
  401fac:	1ae4      	subs	r4, r4, r3
  401fae:	bfa2      	ittt	ge
  401fb0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401fb4:	4329      	orrge	r1, r5
  401fb6:	bd30      	popge	{r4, r5, pc}
  401fb8:	ea6f 0404 	mvn.w	r4, r4
  401fbc:	3c1f      	subs	r4, #31
  401fbe:	da1c      	bge.n	401ffa <__adddf3+0x1d2>
  401fc0:	340c      	adds	r4, #12
  401fc2:	dc0e      	bgt.n	401fe2 <__adddf3+0x1ba>
  401fc4:	f104 0414 	add.w	r4, r4, #20
  401fc8:	f1c4 0220 	rsb	r2, r4, #32
  401fcc:	fa20 f004 	lsr.w	r0, r0, r4
  401fd0:	fa01 f302 	lsl.w	r3, r1, r2
  401fd4:	ea40 0003 	orr.w	r0, r0, r3
  401fd8:	fa21 f304 	lsr.w	r3, r1, r4
  401fdc:	ea45 0103 	orr.w	r1, r5, r3
  401fe0:	bd30      	pop	{r4, r5, pc}
  401fe2:	f1c4 040c 	rsb	r4, r4, #12
  401fe6:	f1c4 0220 	rsb	r2, r4, #32
  401fea:	fa20 f002 	lsr.w	r0, r0, r2
  401fee:	fa01 f304 	lsl.w	r3, r1, r4
  401ff2:	ea40 0003 	orr.w	r0, r0, r3
  401ff6:	4629      	mov	r1, r5
  401ff8:	bd30      	pop	{r4, r5, pc}
  401ffa:	fa21 f004 	lsr.w	r0, r1, r4
  401ffe:	4629      	mov	r1, r5
  402000:	bd30      	pop	{r4, r5, pc}
  402002:	f094 0f00 	teq	r4, #0
  402006:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40200a:	bf06      	itte	eq
  40200c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402010:	3401      	addeq	r4, #1
  402012:	3d01      	subne	r5, #1
  402014:	e74e      	b.n	401eb4 <__adddf3+0x8c>
  402016:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40201a:	bf18      	it	ne
  40201c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402020:	d029      	beq.n	402076 <__adddf3+0x24e>
  402022:	ea94 0f05 	teq	r4, r5
  402026:	bf08      	it	eq
  402028:	ea90 0f02 	teqeq	r0, r2
  40202c:	d005      	beq.n	40203a <__adddf3+0x212>
  40202e:	ea54 0c00 	orrs.w	ip, r4, r0
  402032:	bf04      	itt	eq
  402034:	4619      	moveq	r1, r3
  402036:	4610      	moveq	r0, r2
  402038:	bd30      	pop	{r4, r5, pc}
  40203a:	ea91 0f03 	teq	r1, r3
  40203e:	bf1e      	ittt	ne
  402040:	2100      	movne	r1, #0
  402042:	2000      	movne	r0, #0
  402044:	bd30      	popne	{r4, r5, pc}
  402046:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40204a:	d105      	bne.n	402058 <__adddf3+0x230>
  40204c:	0040      	lsls	r0, r0, #1
  40204e:	4149      	adcs	r1, r1
  402050:	bf28      	it	cs
  402052:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  402056:	bd30      	pop	{r4, r5, pc}
  402058:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40205c:	bf3c      	itt	cc
  40205e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402062:	bd30      	popcc	{r4, r5, pc}
  402064:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402068:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40206c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402070:	f04f 0000 	mov.w	r0, #0
  402074:	bd30      	pop	{r4, r5, pc}
  402076:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40207a:	bf1a      	itte	ne
  40207c:	4619      	movne	r1, r3
  40207e:	4610      	movne	r0, r2
  402080:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402084:	bf1c      	itt	ne
  402086:	460b      	movne	r3, r1
  402088:	4602      	movne	r2, r0
  40208a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40208e:	bf06      	itte	eq
  402090:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402094:	ea91 0f03 	teqeq	r1, r3
  402098:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40209c:	bd30      	pop	{r4, r5, pc}
  40209e:	bf00      	nop

004020a0 <__aeabi_ui2d>:
  4020a0:	f090 0f00 	teq	r0, #0
  4020a4:	bf04      	itt	eq
  4020a6:	2100      	moveq	r1, #0
  4020a8:	4770      	bxeq	lr
  4020aa:	b530      	push	{r4, r5, lr}
  4020ac:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4020b0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4020b4:	f04f 0500 	mov.w	r5, #0
  4020b8:	f04f 0100 	mov.w	r1, #0
  4020bc:	e750      	b.n	401f60 <__adddf3+0x138>
  4020be:	bf00      	nop

004020c0 <__aeabi_i2d>:
  4020c0:	f090 0f00 	teq	r0, #0
  4020c4:	bf04      	itt	eq
  4020c6:	2100      	moveq	r1, #0
  4020c8:	4770      	bxeq	lr
  4020ca:	b530      	push	{r4, r5, lr}
  4020cc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4020d0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4020d4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4020d8:	bf48      	it	mi
  4020da:	4240      	negmi	r0, r0
  4020dc:	f04f 0100 	mov.w	r1, #0
  4020e0:	e73e      	b.n	401f60 <__adddf3+0x138>
  4020e2:	bf00      	nop

004020e4 <__aeabi_f2d>:
  4020e4:	0042      	lsls	r2, r0, #1
  4020e6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4020ea:	ea4f 0131 	mov.w	r1, r1, rrx
  4020ee:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4020f2:	bf1f      	itttt	ne
  4020f4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4020f8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4020fc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  402100:	4770      	bxne	lr
  402102:	f092 0f00 	teq	r2, #0
  402106:	bf14      	ite	ne
  402108:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40210c:	4770      	bxeq	lr
  40210e:	b530      	push	{r4, r5, lr}
  402110:	f44f 7460 	mov.w	r4, #896	; 0x380
  402114:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402118:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40211c:	e720      	b.n	401f60 <__adddf3+0x138>
  40211e:	bf00      	nop

00402120 <__aeabi_ul2d>:
  402120:	ea50 0201 	orrs.w	r2, r0, r1
  402124:	bf08      	it	eq
  402126:	4770      	bxeq	lr
  402128:	b530      	push	{r4, r5, lr}
  40212a:	f04f 0500 	mov.w	r5, #0
  40212e:	e00a      	b.n	402146 <__aeabi_l2d+0x16>

00402130 <__aeabi_l2d>:
  402130:	ea50 0201 	orrs.w	r2, r0, r1
  402134:	bf08      	it	eq
  402136:	4770      	bxeq	lr
  402138:	b530      	push	{r4, r5, lr}
  40213a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40213e:	d502      	bpl.n	402146 <__aeabi_l2d+0x16>
  402140:	4240      	negs	r0, r0
  402142:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402146:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40214a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40214e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  402152:	f43f aedc 	beq.w	401f0e <__adddf3+0xe6>
  402156:	f04f 0203 	mov.w	r2, #3
  40215a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40215e:	bf18      	it	ne
  402160:	3203      	addne	r2, #3
  402162:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  402166:	bf18      	it	ne
  402168:	3203      	addne	r2, #3
  40216a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40216e:	f1c2 0320 	rsb	r3, r2, #32
  402172:	fa00 fc03 	lsl.w	ip, r0, r3
  402176:	fa20 f002 	lsr.w	r0, r0, r2
  40217a:	fa01 fe03 	lsl.w	lr, r1, r3
  40217e:	ea40 000e 	orr.w	r0, r0, lr
  402182:	fa21 f102 	lsr.w	r1, r1, r2
  402186:	4414      	add	r4, r2
  402188:	e6c1      	b.n	401f0e <__adddf3+0xe6>
  40218a:	bf00      	nop

0040218c <__aeabi_dmul>:
  40218c:	b570      	push	{r4, r5, r6, lr}
  40218e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402192:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402196:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40219a:	bf1d      	ittte	ne
  40219c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4021a0:	ea94 0f0c 	teqne	r4, ip
  4021a4:	ea95 0f0c 	teqne	r5, ip
  4021a8:	f000 f8de 	bleq	402368 <__aeabi_dmul+0x1dc>
  4021ac:	442c      	add	r4, r5
  4021ae:	ea81 0603 	eor.w	r6, r1, r3
  4021b2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4021b6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4021ba:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4021be:	bf18      	it	ne
  4021c0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4021c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4021c8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4021cc:	d038      	beq.n	402240 <__aeabi_dmul+0xb4>
  4021ce:	fba0 ce02 	umull	ip, lr, r0, r2
  4021d2:	f04f 0500 	mov.w	r5, #0
  4021d6:	fbe1 e502 	umlal	lr, r5, r1, r2
  4021da:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4021de:	fbe0 e503 	umlal	lr, r5, r0, r3
  4021e2:	f04f 0600 	mov.w	r6, #0
  4021e6:	fbe1 5603 	umlal	r5, r6, r1, r3
  4021ea:	f09c 0f00 	teq	ip, #0
  4021ee:	bf18      	it	ne
  4021f0:	f04e 0e01 	orrne.w	lr, lr, #1
  4021f4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4021f8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4021fc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  402200:	d204      	bcs.n	40220c <__aeabi_dmul+0x80>
  402202:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  402206:	416d      	adcs	r5, r5
  402208:	eb46 0606 	adc.w	r6, r6, r6
  40220c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  402210:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  402214:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  402218:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  40221c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  402220:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402224:	bf88      	it	hi
  402226:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40222a:	d81e      	bhi.n	40226a <__aeabi_dmul+0xde>
  40222c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  402230:	bf08      	it	eq
  402232:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  402236:	f150 0000 	adcs.w	r0, r0, #0
  40223a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40223e:	bd70      	pop	{r4, r5, r6, pc}
  402240:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  402244:	ea46 0101 	orr.w	r1, r6, r1
  402248:	ea40 0002 	orr.w	r0, r0, r2
  40224c:	ea81 0103 	eor.w	r1, r1, r3
  402250:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  402254:	bfc2      	ittt	gt
  402256:	ebd4 050c 	rsbsgt	r5, r4, ip
  40225a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40225e:	bd70      	popgt	{r4, r5, r6, pc}
  402260:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402264:	f04f 0e00 	mov.w	lr, #0
  402268:	3c01      	subs	r4, #1
  40226a:	f300 80ab 	bgt.w	4023c4 <__aeabi_dmul+0x238>
  40226e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  402272:	bfde      	ittt	le
  402274:	2000      	movle	r0, #0
  402276:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40227a:	bd70      	pople	{r4, r5, r6, pc}
  40227c:	f1c4 0400 	rsb	r4, r4, #0
  402280:	3c20      	subs	r4, #32
  402282:	da35      	bge.n	4022f0 <__aeabi_dmul+0x164>
  402284:	340c      	adds	r4, #12
  402286:	dc1b      	bgt.n	4022c0 <__aeabi_dmul+0x134>
  402288:	f104 0414 	add.w	r4, r4, #20
  40228c:	f1c4 0520 	rsb	r5, r4, #32
  402290:	fa00 f305 	lsl.w	r3, r0, r5
  402294:	fa20 f004 	lsr.w	r0, r0, r4
  402298:	fa01 f205 	lsl.w	r2, r1, r5
  40229c:	ea40 0002 	orr.w	r0, r0, r2
  4022a0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4022a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4022a8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4022ac:	fa21 f604 	lsr.w	r6, r1, r4
  4022b0:	eb42 0106 	adc.w	r1, r2, r6
  4022b4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4022b8:	bf08      	it	eq
  4022ba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4022be:	bd70      	pop	{r4, r5, r6, pc}
  4022c0:	f1c4 040c 	rsb	r4, r4, #12
  4022c4:	f1c4 0520 	rsb	r5, r4, #32
  4022c8:	fa00 f304 	lsl.w	r3, r0, r4
  4022cc:	fa20 f005 	lsr.w	r0, r0, r5
  4022d0:	fa01 f204 	lsl.w	r2, r1, r4
  4022d4:	ea40 0002 	orr.w	r0, r0, r2
  4022d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4022dc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4022e0:	f141 0100 	adc.w	r1, r1, #0
  4022e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4022e8:	bf08      	it	eq
  4022ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4022ee:	bd70      	pop	{r4, r5, r6, pc}
  4022f0:	f1c4 0520 	rsb	r5, r4, #32
  4022f4:	fa00 f205 	lsl.w	r2, r0, r5
  4022f8:	ea4e 0e02 	orr.w	lr, lr, r2
  4022fc:	fa20 f304 	lsr.w	r3, r0, r4
  402300:	fa01 f205 	lsl.w	r2, r1, r5
  402304:	ea43 0302 	orr.w	r3, r3, r2
  402308:	fa21 f004 	lsr.w	r0, r1, r4
  40230c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402310:	fa21 f204 	lsr.w	r2, r1, r4
  402314:	ea20 0002 	bic.w	r0, r0, r2
  402318:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  40231c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402320:	bf08      	it	eq
  402322:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402326:	bd70      	pop	{r4, r5, r6, pc}
  402328:	f094 0f00 	teq	r4, #0
  40232c:	d10f      	bne.n	40234e <__aeabi_dmul+0x1c2>
  40232e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  402332:	0040      	lsls	r0, r0, #1
  402334:	eb41 0101 	adc.w	r1, r1, r1
  402338:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40233c:	bf08      	it	eq
  40233e:	3c01      	subeq	r4, #1
  402340:	d0f7      	beq.n	402332 <__aeabi_dmul+0x1a6>
  402342:	ea41 0106 	orr.w	r1, r1, r6
  402346:	f095 0f00 	teq	r5, #0
  40234a:	bf18      	it	ne
  40234c:	4770      	bxne	lr
  40234e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402352:	0052      	lsls	r2, r2, #1
  402354:	eb43 0303 	adc.w	r3, r3, r3
  402358:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40235c:	bf08      	it	eq
  40235e:	3d01      	subeq	r5, #1
  402360:	d0f7      	beq.n	402352 <__aeabi_dmul+0x1c6>
  402362:	ea43 0306 	orr.w	r3, r3, r6
  402366:	4770      	bx	lr
  402368:	ea94 0f0c 	teq	r4, ip
  40236c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402370:	bf18      	it	ne
  402372:	ea95 0f0c 	teqne	r5, ip
  402376:	d00c      	beq.n	402392 <__aeabi_dmul+0x206>
  402378:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40237c:	bf18      	it	ne
  40237e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402382:	d1d1      	bne.n	402328 <__aeabi_dmul+0x19c>
  402384:	ea81 0103 	eor.w	r1, r1, r3
  402388:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40238c:	f04f 0000 	mov.w	r0, #0
  402390:	bd70      	pop	{r4, r5, r6, pc}
  402392:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402396:	bf06      	itte	eq
  402398:	4610      	moveq	r0, r2
  40239a:	4619      	moveq	r1, r3
  40239c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4023a0:	d019      	beq.n	4023d6 <__aeabi_dmul+0x24a>
  4023a2:	ea94 0f0c 	teq	r4, ip
  4023a6:	d102      	bne.n	4023ae <__aeabi_dmul+0x222>
  4023a8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4023ac:	d113      	bne.n	4023d6 <__aeabi_dmul+0x24a>
  4023ae:	ea95 0f0c 	teq	r5, ip
  4023b2:	d105      	bne.n	4023c0 <__aeabi_dmul+0x234>
  4023b4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4023b8:	bf1c      	itt	ne
  4023ba:	4610      	movne	r0, r2
  4023bc:	4619      	movne	r1, r3
  4023be:	d10a      	bne.n	4023d6 <__aeabi_dmul+0x24a>
  4023c0:	ea81 0103 	eor.w	r1, r1, r3
  4023c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4023c8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4023cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4023d0:	f04f 0000 	mov.w	r0, #0
  4023d4:	bd70      	pop	{r4, r5, r6, pc}
  4023d6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4023da:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4023de:	bd70      	pop	{r4, r5, r6, pc}

004023e0 <__aeabi_ddiv>:
  4023e0:	b570      	push	{r4, r5, r6, lr}
  4023e2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4023e6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4023ea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4023ee:	bf1d      	ittte	ne
  4023f0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4023f4:	ea94 0f0c 	teqne	r4, ip
  4023f8:	ea95 0f0c 	teqne	r5, ip
  4023fc:	f000 f8a7 	bleq	40254e <__aeabi_ddiv+0x16e>
  402400:	eba4 0405 	sub.w	r4, r4, r5
  402404:	ea81 0e03 	eor.w	lr, r1, r3
  402408:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40240c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402410:	f000 8088 	beq.w	402524 <__aeabi_ddiv+0x144>
  402414:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402418:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  40241c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  402420:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  402424:	ea4f 2202 	mov.w	r2, r2, lsl #8
  402428:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  40242c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402430:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402434:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  402438:	429d      	cmp	r5, r3
  40243a:	bf08      	it	eq
  40243c:	4296      	cmpeq	r6, r2
  40243e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402442:	f504 7440 	add.w	r4, r4, #768	; 0x300
  402446:	d202      	bcs.n	40244e <__aeabi_ddiv+0x6e>
  402448:	085b      	lsrs	r3, r3, #1
  40244a:	ea4f 0232 	mov.w	r2, r2, rrx
  40244e:	1ab6      	subs	r6, r6, r2
  402450:	eb65 0503 	sbc.w	r5, r5, r3
  402454:	085b      	lsrs	r3, r3, #1
  402456:	ea4f 0232 	mov.w	r2, r2, rrx
  40245a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40245e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402462:	ebb6 0e02 	subs.w	lr, r6, r2
  402466:	eb75 0e03 	sbcs.w	lr, r5, r3
  40246a:	bf22      	ittt	cs
  40246c:	1ab6      	subcs	r6, r6, r2
  40246e:	4675      	movcs	r5, lr
  402470:	ea40 000c 	orrcs.w	r0, r0, ip
  402474:	085b      	lsrs	r3, r3, #1
  402476:	ea4f 0232 	mov.w	r2, r2, rrx
  40247a:	ebb6 0e02 	subs.w	lr, r6, r2
  40247e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402482:	bf22      	ittt	cs
  402484:	1ab6      	subcs	r6, r6, r2
  402486:	4675      	movcs	r5, lr
  402488:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40248c:	085b      	lsrs	r3, r3, #1
  40248e:	ea4f 0232 	mov.w	r2, r2, rrx
  402492:	ebb6 0e02 	subs.w	lr, r6, r2
  402496:	eb75 0e03 	sbcs.w	lr, r5, r3
  40249a:	bf22      	ittt	cs
  40249c:	1ab6      	subcs	r6, r6, r2
  40249e:	4675      	movcs	r5, lr
  4024a0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4024a4:	085b      	lsrs	r3, r3, #1
  4024a6:	ea4f 0232 	mov.w	r2, r2, rrx
  4024aa:	ebb6 0e02 	subs.w	lr, r6, r2
  4024ae:	eb75 0e03 	sbcs.w	lr, r5, r3
  4024b2:	bf22      	ittt	cs
  4024b4:	1ab6      	subcs	r6, r6, r2
  4024b6:	4675      	movcs	r5, lr
  4024b8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4024bc:	ea55 0e06 	orrs.w	lr, r5, r6
  4024c0:	d018      	beq.n	4024f4 <__aeabi_ddiv+0x114>
  4024c2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4024c6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4024ca:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4024ce:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4024d2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4024d6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4024da:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4024de:	d1c0      	bne.n	402462 <__aeabi_ddiv+0x82>
  4024e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4024e4:	d10b      	bne.n	4024fe <__aeabi_ddiv+0x11e>
  4024e6:	ea41 0100 	orr.w	r1, r1, r0
  4024ea:	f04f 0000 	mov.w	r0, #0
  4024ee:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4024f2:	e7b6      	b.n	402462 <__aeabi_ddiv+0x82>
  4024f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4024f8:	bf04      	itt	eq
  4024fa:	4301      	orreq	r1, r0
  4024fc:	2000      	moveq	r0, #0
  4024fe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402502:	bf88      	it	hi
  402504:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402508:	f63f aeaf 	bhi.w	40226a <__aeabi_dmul+0xde>
  40250c:	ebb5 0c03 	subs.w	ip, r5, r3
  402510:	bf04      	itt	eq
  402512:	ebb6 0c02 	subseq.w	ip, r6, r2
  402516:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40251a:	f150 0000 	adcs.w	r0, r0, #0
  40251e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402522:	bd70      	pop	{r4, r5, r6, pc}
  402524:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  402528:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40252c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402530:	bfc2      	ittt	gt
  402532:	ebd4 050c 	rsbsgt	r5, r4, ip
  402536:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40253a:	bd70      	popgt	{r4, r5, r6, pc}
  40253c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402540:	f04f 0e00 	mov.w	lr, #0
  402544:	3c01      	subs	r4, #1
  402546:	e690      	b.n	40226a <__aeabi_dmul+0xde>
  402548:	ea45 0e06 	orr.w	lr, r5, r6
  40254c:	e68d      	b.n	40226a <__aeabi_dmul+0xde>
  40254e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402552:	ea94 0f0c 	teq	r4, ip
  402556:	bf08      	it	eq
  402558:	ea95 0f0c 	teqeq	r5, ip
  40255c:	f43f af3b 	beq.w	4023d6 <__aeabi_dmul+0x24a>
  402560:	ea94 0f0c 	teq	r4, ip
  402564:	d10a      	bne.n	40257c <__aeabi_ddiv+0x19c>
  402566:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40256a:	f47f af34 	bne.w	4023d6 <__aeabi_dmul+0x24a>
  40256e:	ea95 0f0c 	teq	r5, ip
  402572:	f47f af25 	bne.w	4023c0 <__aeabi_dmul+0x234>
  402576:	4610      	mov	r0, r2
  402578:	4619      	mov	r1, r3
  40257a:	e72c      	b.n	4023d6 <__aeabi_dmul+0x24a>
  40257c:	ea95 0f0c 	teq	r5, ip
  402580:	d106      	bne.n	402590 <__aeabi_ddiv+0x1b0>
  402582:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402586:	f43f aefd 	beq.w	402384 <__aeabi_dmul+0x1f8>
  40258a:	4610      	mov	r0, r2
  40258c:	4619      	mov	r1, r3
  40258e:	e722      	b.n	4023d6 <__aeabi_dmul+0x24a>
  402590:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402594:	bf18      	it	ne
  402596:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40259a:	f47f aec5 	bne.w	402328 <__aeabi_dmul+0x19c>
  40259e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4025a2:	f47f af0d 	bne.w	4023c0 <__aeabi_dmul+0x234>
  4025a6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4025aa:	f47f aeeb 	bne.w	402384 <__aeabi_dmul+0x1f8>
  4025ae:	e712      	b.n	4023d6 <__aeabi_dmul+0x24a>

004025b0 <__aeabi_d2iz>:
  4025b0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4025b4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4025b8:	d215      	bcs.n	4025e6 <__aeabi_d2iz+0x36>
  4025ba:	d511      	bpl.n	4025e0 <__aeabi_d2iz+0x30>
  4025bc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4025c0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4025c4:	d912      	bls.n	4025ec <__aeabi_d2iz+0x3c>
  4025c6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4025ca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4025ce:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4025d2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4025d6:	fa23 f002 	lsr.w	r0, r3, r2
  4025da:	bf18      	it	ne
  4025dc:	4240      	negne	r0, r0
  4025de:	4770      	bx	lr
  4025e0:	f04f 0000 	mov.w	r0, #0
  4025e4:	4770      	bx	lr
  4025e6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4025ea:	d105      	bne.n	4025f8 <__aeabi_d2iz+0x48>
  4025ec:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4025f0:	bf08      	it	eq
  4025f2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4025f6:	4770      	bx	lr
  4025f8:	f04f 0000 	mov.w	r0, #0
  4025fc:	4770      	bx	lr
  4025fe:	bf00      	nop

00402600 <__aeabi_d2f>:
  402600:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402604:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  402608:	bf24      	itt	cs
  40260a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  40260e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  402612:	d90d      	bls.n	402630 <__aeabi_d2f+0x30>
  402614:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  402618:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  40261c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  402620:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  402624:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  402628:	bf08      	it	eq
  40262a:	f020 0001 	biceq.w	r0, r0, #1
  40262e:	4770      	bx	lr
  402630:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  402634:	d121      	bne.n	40267a <__aeabi_d2f+0x7a>
  402636:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  40263a:	bfbc      	itt	lt
  40263c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  402640:	4770      	bxlt	lr
  402642:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402646:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40264a:	f1c2 0218 	rsb	r2, r2, #24
  40264e:	f1c2 0c20 	rsb	ip, r2, #32
  402652:	fa10 f30c 	lsls.w	r3, r0, ip
  402656:	fa20 f002 	lsr.w	r0, r0, r2
  40265a:	bf18      	it	ne
  40265c:	f040 0001 	orrne.w	r0, r0, #1
  402660:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402664:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  402668:	fa03 fc0c 	lsl.w	ip, r3, ip
  40266c:	ea40 000c 	orr.w	r0, r0, ip
  402670:	fa23 f302 	lsr.w	r3, r3, r2
  402674:	ea4f 0343 	mov.w	r3, r3, lsl #1
  402678:	e7cc      	b.n	402614 <__aeabi_d2f+0x14>
  40267a:	ea7f 5362 	mvns.w	r3, r2, asr #21
  40267e:	d107      	bne.n	402690 <__aeabi_d2f+0x90>
  402680:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  402684:	bf1e      	ittt	ne
  402686:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  40268a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  40268e:	4770      	bxne	lr
  402690:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  402694:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402698:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40269c:	4770      	bx	lr
  40269e:	bf00      	nop

004026a0 <__libc_init_array>:
  4026a0:	b570      	push	{r4, r5, r6, lr}
  4026a2:	4e0f      	ldr	r6, [pc, #60]	; (4026e0 <__libc_init_array+0x40>)
  4026a4:	4d0f      	ldr	r5, [pc, #60]	; (4026e4 <__libc_init_array+0x44>)
  4026a6:	1b76      	subs	r6, r6, r5
  4026a8:	10b6      	asrs	r6, r6, #2
  4026aa:	bf18      	it	ne
  4026ac:	2400      	movne	r4, #0
  4026ae:	d005      	beq.n	4026bc <__libc_init_array+0x1c>
  4026b0:	3401      	adds	r4, #1
  4026b2:	f855 3b04 	ldr.w	r3, [r5], #4
  4026b6:	4798      	blx	r3
  4026b8:	42a6      	cmp	r6, r4
  4026ba:	d1f9      	bne.n	4026b0 <__libc_init_array+0x10>
  4026bc:	4e0a      	ldr	r6, [pc, #40]	; (4026e8 <__libc_init_array+0x48>)
  4026be:	4d0b      	ldr	r5, [pc, #44]	; (4026ec <__libc_init_array+0x4c>)
  4026c0:	1b76      	subs	r6, r6, r5
  4026c2:	f005 fcc3 	bl	40804c <_init>
  4026c6:	10b6      	asrs	r6, r6, #2
  4026c8:	bf18      	it	ne
  4026ca:	2400      	movne	r4, #0
  4026cc:	d006      	beq.n	4026dc <__libc_init_array+0x3c>
  4026ce:	3401      	adds	r4, #1
  4026d0:	f855 3b04 	ldr.w	r3, [r5], #4
  4026d4:	4798      	blx	r3
  4026d6:	42a6      	cmp	r6, r4
  4026d8:	d1f9      	bne.n	4026ce <__libc_init_array+0x2e>
  4026da:	bd70      	pop	{r4, r5, r6, pc}
  4026dc:	bd70      	pop	{r4, r5, r6, pc}
  4026de:	bf00      	nop
  4026e0:	00408058 	.word	0x00408058
  4026e4:	00408058 	.word	0x00408058
  4026e8:	00408060 	.word	0x00408060
  4026ec:	00408058 	.word	0x00408058

004026f0 <memset>:
  4026f0:	b470      	push	{r4, r5, r6}
  4026f2:	0786      	lsls	r6, r0, #30
  4026f4:	d046      	beq.n	402784 <memset+0x94>
  4026f6:	1e54      	subs	r4, r2, #1
  4026f8:	2a00      	cmp	r2, #0
  4026fa:	d041      	beq.n	402780 <memset+0x90>
  4026fc:	b2ca      	uxtb	r2, r1
  4026fe:	4603      	mov	r3, r0
  402700:	e002      	b.n	402708 <memset+0x18>
  402702:	f114 34ff 	adds.w	r4, r4, #4294967295
  402706:	d33b      	bcc.n	402780 <memset+0x90>
  402708:	f803 2b01 	strb.w	r2, [r3], #1
  40270c:	079d      	lsls	r5, r3, #30
  40270e:	d1f8      	bne.n	402702 <memset+0x12>
  402710:	2c03      	cmp	r4, #3
  402712:	d92e      	bls.n	402772 <memset+0x82>
  402714:	b2cd      	uxtb	r5, r1
  402716:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40271a:	2c0f      	cmp	r4, #15
  40271c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402720:	d919      	bls.n	402756 <memset+0x66>
  402722:	f103 0210 	add.w	r2, r3, #16
  402726:	4626      	mov	r6, r4
  402728:	3e10      	subs	r6, #16
  40272a:	2e0f      	cmp	r6, #15
  40272c:	f842 5c10 	str.w	r5, [r2, #-16]
  402730:	f842 5c0c 	str.w	r5, [r2, #-12]
  402734:	f842 5c08 	str.w	r5, [r2, #-8]
  402738:	f842 5c04 	str.w	r5, [r2, #-4]
  40273c:	f102 0210 	add.w	r2, r2, #16
  402740:	d8f2      	bhi.n	402728 <memset+0x38>
  402742:	f1a4 0210 	sub.w	r2, r4, #16
  402746:	f022 020f 	bic.w	r2, r2, #15
  40274a:	f004 040f 	and.w	r4, r4, #15
  40274e:	3210      	adds	r2, #16
  402750:	2c03      	cmp	r4, #3
  402752:	4413      	add	r3, r2
  402754:	d90d      	bls.n	402772 <memset+0x82>
  402756:	461e      	mov	r6, r3
  402758:	4622      	mov	r2, r4
  40275a:	3a04      	subs	r2, #4
  40275c:	2a03      	cmp	r2, #3
  40275e:	f846 5b04 	str.w	r5, [r6], #4
  402762:	d8fa      	bhi.n	40275a <memset+0x6a>
  402764:	1f22      	subs	r2, r4, #4
  402766:	f022 0203 	bic.w	r2, r2, #3
  40276a:	3204      	adds	r2, #4
  40276c:	4413      	add	r3, r2
  40276e:	f004 0403 	and.w	r4, r4, #3
  402772:	b12c      	cbz	r4, 402780 <memset+0x90>
  402774:	b2c9      	uxtb	r1, r1
  402776:	441c      	add	r4, r3
  402778:	f803 1b01 	strb.w	r1, [r3], #1
  40277c:	429c      	cmp	r4, r3
  40277e:	d1fb      	bne.n	402778 <memset+0x88>
  402780:	bc70      	pop	{r4, r5, r6}
  402782:	4770      	bx	lr
  402784:	4614      	mov	r4, r2
  402786:	4603      	mov	r3, r0
  402788:	e7c2      	b.n	402710 <memset+0x20>
  40278a:	bf00      	nop

0040278c <_puts_r>:
  40278c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40278e:	4605      	mov	r5, r0
  402790:	b089      	sub	sp, #36	; 0x24
  402792:	4608      	mov	r0, r1
  402794:	460c      	mov	r4, r1
  402796:	f000 f933 	bl	402a00 <strlen>
  40279a:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40279c:	4f21      	ldr	r7, [pc, #132]	; (402824 <_puts_r+0x98>)
  40279e:	9404      	str	r4, [sp, #16]
  4027a0:	2601      	movs	r6, #1
  4027a2:	1c44      	adds	r4, r0, #1
  4027a4:	a904      	add	r1, sp, #16
  4027a6:	2202      	movs	r2, #2
  4027a8:	9403      	str	r4, [sp, #12]
  4027aa:	9005      	str	r0, [sp, #20]
  4027ac:	68ac      	ldr	r4, [r5, #8]
  4027ae:	9706      	str	r7, [sp, #24]
  4027b0:	9607      	str	r6, [sp, #28]
  4027b2:	9101      	str	r1, [sp, #4]
  4027b4:	9202      	str	r2, [sp, #8]
  4027b6:	b353      	cbz	r3, 40280e <_puts_r+0x82>
  4027b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4027ba:	f013 0f01 	tst.w	r3, #1
  4027be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4027c2:	b29a      	uxth	r2, r3
  4027c4:	d101      	bne.n	4027ca <_puts_r+0x3e>
  4027c6:	0590      	lsls	r0, r2, #22
  4027c8:	d525      	bpl.n	402816 <_puts_r+0x8a>
  4027ca:	0491      	lsls	r1, r2, #18
  4027cc:	d406      	bmi.n	4027dc <_puts_r+0x50>
  4027ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4027d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4027d4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  4027d8:	81a3      	strh	r3, [r4, #12]
  4027da:	6662      	str	r2, [r4, #100]	; 0x64
  4027dc:	4628      	mov	r0, r5
  4027de:	aa01      	add	r2, sp, #4
  4027e0:	4621      	mov	r1, r4
  4027e2:	f000 fc0b 	bl	402ffc <__sfvwrite_r>
  4027e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4027e8:	2800      	cmp	r0, #0
  4027ea:	bf0c      	ite	eq
  4027ec:	250a      	moveq	r5, #10
  4027ee:	f04f 35ff 	movne.w	r5, #4294967295
  4027f2:	07da      	lsls	r2, r3, #31
  4027f4:	d402      	bmi.n	4027fc <_puts_r+0x70>
  4027f6:	89a3      	ldrh	r3, [r4, #12]
  4027f8:	059b      	lsls	r3, r3, #22
  4027fa:	d502      	bpl.n	402802 <_puts_r+0x76>
  4027fc:	4628      	mov	r0, r5
  4027fe:	b009      	add	sp, #36	; 0x24
  402800:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402802:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402804:	f000 fda2 	bl	40334c <__retarget_lock_release_recursive>
  402808:	4628      	mov	r0, r5
  40280a:	b009      	add	sp, #36	; 0x24
  40280c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40280e:	4628      	mov	r0, r5
  402810:	f000 fa6c 	bl	402cec <__sinit>
  402814:	e7d0      	b.n	4027b8 <_puts_r+0x2c>
  402816:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402818:	f000 fd96 	bl	403348 <__retarget_lock_acquire_recursive>
  40281c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402820:	b29a      	uxth	r2, r3
  402822:	e7d2      	b.n	4027ca <_puts_r+0x3e>
  402824:	00406c24 	.word	0x00406c24

00402828 <puts>:
  402828:	4b02      	ldr	r3, [pc, #8]	; (402834 <puts+0xc>)
  40282a:	4601      	mov	r1, r0
  40282c:	6818      	ldr	r0, [r3, #0]
  40282e:	f7ff bfad 	b.w	40278c <_puts_r>
  402832:	bf00      	nop
  402834:	20000070 	.word	0x20000070

00402838 <setbuf>:
  402838:	2900      	cmp	r1, #0
  40283a:	bf0c      	ite	eq
  40283c:	2202      	moveq	r2, #2
  40283e:	2200      	movne	r2, #0
  402840:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402844:	f000 b800 	b.w	402848 <setvbuf>

00402848 <setvbuf>:
  402848:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40284c:	4c61      	ldr	r4, [pc, #388]	; (4029d4 <setvbuf+0x18c>)
  40284e:	6825      	ldr	r5, [r4, #0]
  402850:	b083      	sub	sp, #12
  402852:	4604      	mov	r4, r0
  402854:	460f      	mov	r7, r1
  402856:	4690      	mov	r8, r2
  402858:	461e      	mov	r6, r3
  40285a:	b115      	cbz	r5, 402862 <setvbuf+0x1a>
  40285c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40285e:	2b00      	cmp	r3, #0
  402860:	d064      	beq.n	40292c <setvbuf+0xe4>
  402862:	f1b8 0f02 	cmp.w	r8, #2
  402866:	d006      	beq.n	402876 <setvbuf+0x2e>
  402868:	f1b8 0f01 	cmp.w	r8, #1
  40286c:	f200 809f 	bhi.w	4029ae <setvbuf+0x166>
  402870:	2e00      	cmp	r6, #0
  402872:	f2c0 809c 	blt.w	4029ae <setvbuf+0x166>
  402876:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402878:	07d8      	lsls	r0, r3, #31
  40287a:	d534      	bpl.n	4028e6 <setvbuf+0x9e>
  40287c:	4621      	mov	r1, r4
  40287e:	4628      	mov	r0, r5
  402880:	f000 f9dc 	bl	402c3c <_fflush_r>
  402884:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402886:	b141      	cbz	r1, 40289a <setvbuf+0x52>
  402888:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40288c:	4299      	cmp	r1, r3
  40288e:	d002      	beq.n	402896 <setvbuf+0x4e>
  402890:	4628      	mov	r0, r5
  402892:	f000 facd 	bl	402e30 <_free_r>
  402896:	2300      	movs	r3, #0
  402898:	6323      	str	r3, [r4, #48]	; 0x30
  40289a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40289e:	2200      	movs	r2, #0
  4028a0:	61a2      	str	r2, [r4, #24]
  4028a2:	6062      	str	r2, [r4, #4]
  4028a4:	061a      	lsls	r2, r3, #24
  4028a6:	d43a      	bmi.n	40291e <setvbuf+0xd6>
  4028a8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4028ac:	f023 0303 	bic.w	r3, r3, #3
  4028b0:	f1b8 0f02 	cmp.w	r8, #2
  4028b4:	81a3      	strh	r3, [r4, #12]
  4028b6:	d01d      	beq.n	4028f4 <setvbuf+0xac>
  4028b8:	ab01      	add	r3, sp, #4
  4028ba:	466a      	mov	r2, sp
  4028bc:	4621      	mov	r1, r4
  4028be:	4628      	mov	r0, r5
  4028c0:	f000 fd46 	bl	403350 <__swhatbuf_r>
  4028c4:	89a3      	ldrh	r3, [r4, #12]
  4028c6:	4318      	orrs	r0, r3
  4028c8:	81a0      	strh	r0, [r4, #12]
  4028ca:	2e00      	cmp	r6, #0
  4028cc:	d132      	bne.n	402934 <setvbuf+0xec>
  4028ce:	9e00      	ldr	r6, [sp, #0]
  4028d0:	4630      	mov	r0, r6
  4028d2:	f000 fdb5 	bl	403440 <malloc>
  4028d6:	4607      	mov	r7, r0
  4028d8:	2800      	cmp	r0, #0
  4028da:	d06b      	beq.n	4029b4 <setvbuf+0x16c>
  4028dc:	89a3      	ldrh	r3, [r4, #12]
  4028de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4028e2:	81a3      	strh	r3, [r4, #12]
  4028e4:	e028      	b.n	402938 <setvbuf+0xf0>
  4028e6:	89a3      	ldrh	r3, [r4, #12]
  4028e8:	0599      	lsls	r1, r3, #22
  4028ea:	d4c7      	bmi.n	40287c <setvbuf+0x34>
  4028ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4028ee:	f000 fd2b 	bl	403348 <__retarget_lock_acquire_recursive>
  4028f2:	e7c3      	b.n	40287c <setvbuf+0x34>
  4028f4:	2500      	movs	r5, #0
  4028f6:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4028f8:	2600      	movs	r6, #0
  4028fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4028fe:	f043 0302 	orr.w	r3, r3, #2
  402902:	2001      	movs	r0, #1
  402904:	60a6      	str	r6, [r4, #8]
  402906:	07ce      	lsls	r6, r1, #31
  402908:	81a3      	strh	r3, [r4, #12]
  40290a:	6022      	str	r2, [r4, #0]
  40290c:	6122      	str	r2, [r4, #16]
  40290e:	6160      	str	r0, [r4, #20]
  402910:	d401      	bmi.n	402916 <setvbuf+0xce>
  402912:	0598      	lsls	r0, r3, #22
  402914:	d53e      	bpl.n	402994 <setvbuf+0x14c>
  402916:	4628      	mov	r0, r5
  402918:	b003      	add	sp, #12
  40291a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40291e:	6921      	ldr	r1, [r4, #16]
  402920:	4628      	mov	r0, r5
  402922:	f000 fa85 	bl	402e30 <_free_r>
  402926:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40292a:	e7bd      	b.n	4028a8 <setvbuf+0x60>
  40292c:	4628      	mov	r0, r5
  40292e:	f000 f9dd 	bl	402cec <__sinit>
  402932:	e796      	b.n	402862 <setvbuf+0x1a>
  402934:	2f00      	cmp	r7, #0
  402936:	d0cb      	beq.n	4028d0 <setvbuf+0x88>
  402938:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40293a:	2b00      	cmp	r3, #0
  40293c:	d033      	beq.n	4029a6 <setvbuf+0x15e>
  40293e:	9b00      	ldr	r3, [sp, #0]
  402940:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402944:	6027      	str	r7, [r4, #0]
  402946:	429e      	cmp	r6, r3
  402948:	bf1c      	itt	ne
  40294a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40294e:	81a2      	strhne	r2, [r4, #12]
  402950:	f1b8 0f01 	cmp.w	r8, #1
  402954:	bf04      	itt	eq
  402956:	f042 0201 	orreq.w	r2, r2, #1
  40295a:	81a2      	strheq	r2, [r4, #12]
  40295c:	b292      	uxth	r2, r2
  40295e:	f012 0308 	ands.w	r3, r2, #8
  402962:	6127      	str	r7, [r4, #16]
  402964:	6166      	str	r6, [r4, #20]
  402966:	d00e      	beq.n	402986 <setvbuf+0x13e>
  402968:	07d1      	lsls	r1, r2, #31
  40296a:	d51a      	bpl.n	4029a2 <setvbuf+0x15a>
  40296c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40296e:	4276      	negs	r6, r6
  402970:	2300      	movs	r3, #0
  402972:	f015 0501 	ands.w	r5, r5, #1
  402976:	61a6      	str	r6, [r4, #24]
  402978:	60a3      	str	r3, [r4, #8]
  40297a:	d009      	beq.n	402990 <setvbuf+0x148>
  40297c:	2500      	movs	r5, #0
  40297e:	4628      	mov	r0, r5
  402980:	b003      	add	sp, #12
  402982:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402986:	60a3      	str	r3, [r4, #8]
  402988:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40298a:	f015 0501 	ands.w	r5, r5, #1
  40298e:	d1f5      	bne.n	40297c <setvbuf+0x134>
  402990:	0593      	lsls	r3, r2, #22
  402992:	d4c0      	bmi.n	402916 <setvbuf+0xce>
  402994:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402996:	f000 fcd9 	bl	40334c <__retarget_lock_release_recursive>
  40299a:	4628      	mov	r0, r5
  40299c:	b003      	add	sp, #12
  40299e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4029a2:	60a6      	str	r6, [r4, #8]
  4029a4:	e7f0      	b.n	402988 <setvbuf+0x140>
  4029a6:	4628      	mov	r0, r5
  4029a8:	f000 f9a0 	bl	402cec <__sinit>
  4029ac:	e7c7      	b.n	40293e <setvbuf+0xf6>
  4029ae:	f04f 35ff 	mov.w	r5, #4294967295
  4029b2:	e7b0      	b.n	402916 <setvbuf+0xce>
  4029b4:	f8dd 9000 	ldr.w	r9, [sp]
  4029b8:	45b1      	cmp	r9, r6
  4029ba:	d004      	beq.n	4029c6 <setvbuf+0x17e>
  4029bc:	4648      	mov	r0, r9
  4029be:	f000 fd3f 	bl	403440 <malloc>
  4029c2:	4607      	mov	r7, r0
  4029c4:	b920      	cbnz	r0, 4029d0 <setvbuf+0x188>
  4029c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4029ca:	f04f 35ff 	mov.w	r5, #4294967295
  4029ce:	e792      	b.n	4028f6 <setvbuf+0xae>
  4029d0:	464e      	mov	r6, r9
  4029d2:	e783      	b.n	4028dc <setvbuf+0x94>
  4029d4:	20000070 	.word	0x20000070
	...

00402a00 <strlen>:
  402a00:	f890 f000 	pld	[r0]
  402a04:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402a08:	f020 0107 	bic.w	r1, r0, #7
  402a0c:	f06f 0c00 	mvn.w	ip, #0
  402a10:	f010 0407 	ands.w	r4, r0, #7
  402a14:	f891 f020 	pld	[r1, #32]
  402a18:	f040 8049 	bne.w	402aae <strlen+0xae>
  402a1c:	f04f 0400 	mov.w	r4, #0
  402a20:	f06f 0007 	mvn.w	r0, #7
  402a24:	e9d1 2300 	ldrd	r2, r3, [r1]
  402a28:	f891 f040 	pld	[r1, #64]	; 0x40
  402a2c:	f100 0008 	add.w	r0, r0, #8
  402a30:	fa82 f24c 	uadd8	r2, r2, ip
  402a34:	faa4 f28c 	sel	r2, r4, ip
  402a38:	fa83 f34c 	uadd8	r3, r3, ip
  402a3c:	faa2 f38c 	sel	r3, r2, ip
  402a40:	bb4b      	cbnz	r3, 402a96 <strlen+0x96>
  402a42:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402a46:	fa82 f24c 	uadd8	r2, r2, ip
  402a4a:	f100 0008 	add.w	r0, r0, #8
  402a4e:	faa4 f28c 	sel	r2, r4, ip
  402a52:	fa83 f34c 	uadd8	r3, r3, ip
  402a56:	faa2 f38c 	sel	r3, r2, ip
  402a5a:	b9e3      	cbnz	r3, 402a96 <strlen+0x96>
  402a5c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402a60:	fa82 f24c 	uadd8	r2, r2, ip
  402a64:	f100 0008 	add.w	r0, r0, #8
  402a68:	faa4 f28c 	sel	r2, r4, ip
  402a6c:	fa83 f34c 	uadd8	r3, r3, ip
  402a70:	faa2 f38c 	sel	r3, r2, ip
  402a74:	b97b      	cbnz	r3, 402a96 <strlen+0x96>
  402a76:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  402a7a:	f101 0120 	add.w	r1, r1, #32
  402a7e:	fa82 f24c 	uadd8	r2, r2, ip
  402a82:	f100 0008 	add.w	r0, r0, #8
  402a86:	faa4 f28c 	sel	r2, r4, ip
  402a8a:	fa83 f34c 	uadd8	r3, r3, ip
  402a8e:	faa2 f38c 	sel	r3, r2, ip
  402a92:	2b00      	cmp	r3, #0
  402a94:	d0c6      	beq.n	402a24 <strlen+0x24>
  402a96:	2a00      	cmp	r2, #0
  402a98:	bf04      	itt	eq
  402a9a:	3004      	addeq	r0, #4
  402a9c:	461a      	moveq	r2, r3
  402a9e:	ba12      	rev	r2, r2
  402aa0:	fab2 f282 	clz	r2, r2
  402aa4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  402aa8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  402aac:	4770      	bx	lr
  402aae:	e9d1 2300 	ldrd	r2, r3, [r1]
  402ab2:	f004 0503 	and.w	r5, r4, #3
  402ab6:	f1c4 0000 	rsb	r0, r4, #0
  402aba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  402abe:	f014 0f04 	tst.w	r4, #4
  402ac2:	f891 f040 	pld	[r1, #64]	; 0x40
  402ac6:	fa0c f505 	lsl.w	r5, ip, r5
  402aca:	ea62 0205 	orn	r2, r2, r5
  402ace:	bf1c      	itt	ne
  402ad0:	ea63 0305 	ornne	r3, r3, r5
  402ad4:	4662      	movne	r2, ip
  402ad6:	f04f 0400 	mov.w	r4, #0
  402ada:	e7a9      	b.n	402a30 <strlen+0x30>

00402adc <register_fini>:
  402adc:	4b02      	ldr	r3, [pc, #8]	; (402ae8 <register_fini+0xc>)
  402ade:	b113      	cbz	r3, 402ae6 <register_fini+0xa>
  402ae0:	4802      	ldr	r0, [pc, #8]	; (402aec <register_fini+0x10>)
  402ae2:	f000 b805 	b.w	402af0 <atexit>
  402ae6:	4770      	bx	lr
  402ae8:	00000000 	.word	0x00000000
  402aec:	00402d5d 	.word	0x00402d5d

00402af0 <atexit>:
  402af0:	2300      	movs	r3, #0
  402af2:	4601      	mov	r1, r0
  402af4:	461a      	mov	r2, r3
  402af6:	4618      	mov	r0, r3
  402af8:	f001 bb2a 	b.w	404150 <__register_exitproc>

00402afc <__sflush_r>:
  402afc:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402b00:	b29a      	uxth	r2, r3
  402b02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b06:	460d      	mov	r5, r1
  402b08:	0711      	lsls	r1, r2, #28
  402b0a:	4680      	mov	r8, r0
  402b0c:	d43a      	bmi.n	402b84 <__sflush_r+0x88>
  402b0e:	686a      	ldr	r2, [r5, #4]
  402b10:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402b14:	2a00      	cmp	r2, #0
  402b16:	81ab      	strh	r3, [r5, #12]
  402b18:	dd6f      	ble.n	402bfa <__sflush_r+0xfe>
  402b1a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402b1c:	2c00      	cmp	r4, #0
  402b1e:	d049      	beq.n	402bb4 <__sflush_r+0xb8>
  402b20:	2200      	movs	r2, #0
  402b22:	b29b      	uxth	r3, r3
  402b24:	f8d8 6000 	ldr.w	r6, [r8]
  402b28:	f8c8 2000 	str.w	r2, [r8]
  402b2c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402b30:	d067      	beq.n	402c02 <__sflush_r+0x106>
  402b32:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402b34:	075f      	lsls	r7, r3, #29
  402b36:	d505      	bpl.n	402b44 <__sflush_r+0x48>
  402b38:	6869      	ldr	r1, [r5, #4]
  402b3a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402b3c:	1a52      	subs	r2, r2, r1
  402b3e:	b10b      	cbz	r3, 402b44 <__sflush_r+0x48>
  402b40:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402b42:	1ad2      	subs	r2, r2, r3
  402b44:	2300      	movs	r3, #0
  402b46:	69e9      	ldr	r1, [r5, #28]
  402b48:	4640      	mov	r0, r8
  402b4a:	47a0      	blx	r4
  402b4c:	1c44      	adds	r4, r0, #1
  402b4e:	d03c      	beq.n	402bca <__sflush_r+0xce>
  402b50:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402b54:	692a      	ldr	r2, [r5, #16]
  402b56:	602a      	str	r2, [r5, #0]
  402b58:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402b5c:	2200      	movs	r2, #0
  402b5e:	81ab      	strh	r3, [r5, #12]
  402b60:	04db      	lsls	r3, r3, #19
  402b62:	606a      	str	r2, [r5, #4]
  402b64:	d447      	bmi.n	402bf6 <__sflush_r+0xfa>
  402b66:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402b68:	f8c8 6000 	str.w	r6, [r8]
  402b6c:	b311      	cbz	r1, 402bb4 <__sflush_r+0xb8>
  402b6e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402b72:	4299      	cmp	r1, r3
  402b74:	d002      	beq.n	402b7c <__sflush_r+0x80>
  402b76:	4640      	mov	r0, r8
  402b78:	f000 f95a 	bl	402e30 <_free_r>
  402b7c:	2000      	movs	r0, #0
  402b7e:	6328      	str	r0, [r5, #48]	; 0x30
  402b80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b84:	692e      	ldr	r6, [r5, #16]
  402b86:	b1ae      	cbz	r6, 402bb4 <__sflush_r+0xb8>
  402b88:	682c      	ldr	r4, [r5, #0]
  402b8a:	602e      	str	r6, [r5, #0]
  402b8c:	0791      	lsls	r1, r2, #30
  402b8e:	bf0c      	ite	eq
  402b90:	696b      	ldreq	r3, [r5, #20]
  402b92:	2300      	movne	r3, #0
  402b94:	1ba4      	subs	r4, r4, r6
  402b96:	60ab      	str	r3, [r5, #8]
  402b98:	e00a      	b.n	402bb0 <__sflush_r+0xb4>
  402b9a:	4623      	mov	r3, r4
  402b9c:	4632      	mov	r2, r6
  402b9e:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402ba0:	69e9      	ldr	r1, [r5, #28]
  402ba2:	4640      	mov	r0, r8
  402ba4:	47b8      	blx	r7
  402ba6:	2800      	cmp	r0, #0
  402ba8:	eba4 0400 	sub.w	r4, r4, r0
  402bac:	4406      	add	r6, r0
  402bae:	dd04      	ble.n	402bba <__sflush_r+0xbe>
  402bb0:	2c00      	cmp	r4, #0
  402bb2:	dcf2      	bgt.n	402b9a <__sflush_r+0x9e>
  402bb4:	2000      	movs	r0, #0
  402bb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402bba:	89ab      	ldrh	r3, [r5, #12]
  402bbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402bc0:	81ab      	strh	r3, [r5, #12]
  402bc2:	f04f 30ff 	mov.w	r0, #4294967295
  402bc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402bca:	f8d8 4000 	ldr.w	r4, [r8]
  402bce:	2c1d      	cmp	r4, #29
  402bd0:	d8f3      	bhi.n	402bba <__sflush_r+0xbe>
  402bd2:	4b19      	ldr	r3, [pc, #100]	; (402c38 <__sflush_r+0x13c>)
  402bd4:	40e3      	lsrs	r3, r4
  402bd6:	43db      	mvns	r3, r3
  402bd8:	f013 0301 	ands.w	r3, r3, #1
  402bdc:	d1ed      	bne.n	402bba <__sflush_r+0xbe>
  402bde:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  402be2:	606b      	str	r3, [r5, #4]
  402be4:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  402be8:	6929      	ldr	r1, [r5, #16]
  402bea:	81ab      	strh	r3, [r5, #12]
  402bec:	04da      	lsls	r2, r3, #19
  402bee:	6029      	str	r1, [r5, #0]
  402bf0:	d5b9      	bpl.n	402b66 <__sflush_r+0x6a>
  402bf2:	2c00      	cmp	r4, #0
  402bf4:	d1b7      	bne.n	402b66 <__sflush_r+0x6a>
  402bf6:	6528      	str	r0, [r5, #80]	; 0x50
  402bf8:	e7b5      	b.n	402b66 <__sflush_r+0x6a>
  402bfa:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402bfc:	2a00      	cmp	r2, #0
  402bfe:	dc8c      	bgt.n	402b1a <__sflush_r+0x1e>
  402c00:	e7d8      	b.n	402bb4 <__sflush_r+0xb8>
  402c02:	2301      	movs	r3, #1
  402c04:	69e9      	ldr	r1, [r5, #28]
  402c06:	4640      	mov	r0, r8
  402c08:	47a0      	blx	r4
  402c0a:	1c43      	adds	r3, r0, #1
  402c0c:	4602      	mov	r2, r0
  402c0e:	d002      	beq.n	402c16 <__sflush_r+0x11a>
  402c10:	89ab      	ldrh	r3, [r5, #12]
  402c12:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402c14:	e78e      	b.n	402b34 <__sflush_r+0x38>
  402c16:	f8d8 3000 	ldr.w	r3, [r8]
  402c1a:	2b00      	cmp	r3, #0
  402c1c:	d0f8      	beq.n	402c10 <__sflush_r+0x114>
  402c1e:	2b1d      	cmp	r3, #29
  402c20:	d001      	beq.n	402c26 <__sflush_r+0x12a>
  402c22:	2b16      	cmp	r3, #22
  402c24:	d102      	bne.n	402c2c <__sflush_r+0x130>
  402c26:	f8c8 6000 	str.w	r6, [r8]
  402c2a:	e7c3      	b.n	402bb4 <__sflush_r+0xb8>
  402c2c:	89ab      	ldrh	r3, [r5, #12]
  402c2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402c32:	81ab      	strh	r3, [r5, #12]
  402c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402c38:	20400001 	.word	0x20400001

00402c3c <_fflush_r>:
  402c3c:	b538      	push	{r3, r4, r5, lr}
  402c3e:	460d      	mov	r5, r1
  402c40:	4604      	mov	r4, r0
  402c42:	b108      	cbz	r0, 402c48 <_fflush_r+0xc>
  402c44:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402c46:	b1bb      	cbz	r3, 402c78 <_fflush_r+0x3c>
  402c48:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  402c4c:	b188      	cbz	r0, 402c72 <_fflush_r+0x36>
  402c4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  402c50:	07db      	lsls	r3, r3, #31
  402c52:	d401      	bmi.n	402c58 <_fflush_r+0x1c>
  402c54:	0581      	lsls	r1, r0, #22
  402c56:	d517      	bpl.n	402c88 <_fflush_r+0x4c>
  402c58:	4620      	mov	r0, r4
  402c5a:	4629      	mov	r1, r5
  402c5c:	f7ff ff4e 	bl	402afc <__sflush_r>
  402c60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  402c62:	07da      	lsls	r2, r3, #31
  402c64:	4604      	mov	r4, r0
  402c66:	d402      	bmi.n	402c6e <_fflush_r+0x32>
  402c68:	89ab      	ldrh	r3, [r5, #12]
  402c6a:	059b      	lsls	r3, r3, #22
  402c6c:	d507      	bpl.n	402c7e <_fflush_r+0x42>
  402c6e:	4620      	mov	r0, r4
  402c70:	bd38      	pop	{r3, r4, r5, pc}
  402c72:	4604      	mov	r4, r0
  402c74:	4620      	mov	r0, r4
  402c76:	bd38      	pop	{r3, r4, r5, pc}
  402c78:	f000 f838 	bl	402cec <__sinit>
  402c7c:	e7e4      	b.n	402c48 <_fflush_r+0xc>
  402c7e:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402c80:	f000 fb64 	bl	40334c <__retarget_lock_release_recursive>
  402c84:	4620      	mov	r0, r4
  402c86:	bd38      	pop	{r3, r4, r5, pc}
  402c88:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402c8a:	f000 fb5d 	bl	403348 <__retarget_lock_acquire_recursive>
  402c8e:	e7e3      	b.n	402c58 <_fflush_r+0x1c>

00402c90 <_cleanup_r>:
  402c90:	4901      	ldr	r1, [pc, #4]	; (402c98 <_cleanup_r+0x8>)
  402c92:	f000 bb2b 	b.w	4032ec <_fwalk_reent>
  402c96:	bf00      	nop
  402c98:	00404239 	.word	0x00404239

00402c9c <std.isra.0>:
  402c9c:	b510      	push	{r4, lr}
  402c9e:	2300      	movs	r3, #0
  402ca0:	4604      	mov	r4, r0
  402ca2:	8181      	strh	r1, [r0, #12]
  402ca4:	81c2      	strh	r2, [r0, #14]
  402ca6:	6003      	str	r3, [r0, #0]
  402ca8:	6043      	str	r3, [r0, #4]
  402caa:	6083      	str	r3, [r0, #8]
  402cac:	6643      	str	r3, [r0, #100]	; 0x64
  402cae:	6103      	str	r3, [r0, #16]
  402cb0:	6143      	str	r3, [r0, #20]
  402cb2:	6183      	str	r3, [r0, #24]
  402cb4:	4619      	mov	r1, r3
  402cb6:	2208      	movs	r2, #8
  402cb8:	305c      	adds	r0, #92	; 0x5c
  402cba:	f7ff fd19 	bl	4026f0 <memset>
  402cbe:	4807      	ldr	r0, [pc, #28]	; (402cdc <std.isra.0+0x40>)
  402cc0:	4907      	ldr	r1, [pc, #28]	; (402ce0 <std.isra.0+0x44>)
  402cc2:	4a08      	ldr	r2, [pc, #32]	; (402ce4 <std.isra.0+0x48>)
  402cc4:	4b08      	ldr	r3, [pc, #32]	; (402ce8 <std.isra.0+0x4c>)
  402cc6:	6220      	str	r0, [r4, #32]
  402cc8:	61e4      	str	r4, [r4, #28]
  402cca:	6261      	str	r1, [r4, #36]	; 0x24
  402ccc:	62a2      	str	r2, [r4, #40]	; 0x28
  402cce:	62e3      	str	r3, [r4, #44]	; 0x2c
  402cd0:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402cd8:	f000 bb32 	b.w	403340 <__retarget_lock_init_recursive>
  402cdc:	00403fd5 	.word	0x00403fd5
  402ce0:	00403ff9 	.word	0x00403ff9
  402ce4:	00404035 	.word	0x00404035
  402ce8:	00404055 	.word	0x00404055

00402cec <__sinit>:
  402cec:	b510      	push	{r4, lr}
  402cee:	4604      	mov	r4, r0
  402cf0:	4812      	ldr	r0, [pc, #72]	; (402d3c <__sinit+0x50>)
  402cf2:	f000 fb29 	bl	403348 <__retarget_lock_acquire_recursive>
  402cf6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  402cf8:	b9d2      	cbnz	r2, 402d30 <__sinit+0x44>
  402cfa:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  402cfe:	4810      	ldr	r0, [pc, #64]	; (402d40 <__sinit+0x54>)
  402d00:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  402d04:	2103      	movs	r1, #3
  402d06:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  402d0a:	63e0      	str	r0, [r4, #60]	; 0x3c
  402d0c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  402d10:	6860      	ldr	r0, [r4, #4]
  402d12:	2104      	movs	r1, #4
  402d14:	f7ff ffc2 	bl	402c9c <std.isra.0>
  402d18:	2201      	movs	r2, #1
  402d1a:	2109      	movs	r1, #9
  402d1c:	68a0      	ldr	r0, [r4, #8]
  402d1e:	f7ff ffbd 	bl	402c9c <std.isra.0>
  402d22:	2202      	movs	r2, #2
  402d24:	2112      	movs	r1, #18
  402d26:	68e0      	ldr	r0, [r4, #12]
  402d28:	f7ff ffb8 	bl	402c9c <std.isra.0>
  402d2c:	2301      	movs	r3, #1
  402d2e:	63a3      	str	r3, [r4, #56]	; 0x38
  402d30:	4802      	ldr	r0, [pc, #8]	; (402d3c <__sinit+0x50>)
  402d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402d36:	f000 bb09 	b.w	40334c <__retarget_lock_release_recursive>
  402d3a:	bf00      	nop
  402d3c:	2000e964 	.word	0x2000e964
  402d40:	00402c91 	.word	0x00402c91

00402d44 <__sfp_lock_acquire>:
  402d44:	4801      	ldr	r0, [pc, #4]	; (402d4c <__sfp_lock_acquire+0x8>)
  402d46:	f000 baff 	b.w	403348 <__retarget_lock_acquire_recursive>
  402d4a:	bf00      	nop
  402d4c:	2000e978 	.word	0x2000e978

00402d50 <__sfp_lock_release>:
  402d50:	4801      	ldr	r0, [pc, #4]	; (402d58 <__sfp_lock_release+0x8>)
  402d52:	f000 bafb 	b.w	40334c <__retarget_lock_release_recursive>
  402d56:	bf00      	nop
  402d58:	2000e978 	.word	0x2000e978

00402d5c <__libc_fini_array>:
  402d5c:	b538      	push	{r3, r4, r5, lr}
  402d5e:	4c0a      	ldr	r4, [pc, #40]	; (402d88 <__libc_fini_array+0x2c>)
  402d60:	4d0a      	ldr	r5, [pc, #40]	; (402d8c <__libc_fini_array+0x30>)
  402d62:	1b64      	subs	r4, r4, r5
  402d64:	10a4      	asrs	r4, r4, #2
  402d66:	d00a      	beq.n	402d7e <__libc_fini_array+0x22>
  402d68:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402d6c:	3b01      	subs	r3, #1
  402d6e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402d72:	3c01      	subs	r4, #1
  402d74:	f855 3904 	ldr.w	r3, [r5], #-4
  402d78:	4798      	blx	r3
  402d7a:	2c00      	cmp	r4, #0
  402d7c:	d1f9      	bne.n	402d72 <__libc_fini_array+0x16>
  402d7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402d82:	f005 b96d 	b.w	408060 <_fini>
  402d86:	bf00      	nop
  402d88:	00408070 	.word	0x00408070
  402d8c:	0040806c 	.word	0x0040806c

00402d90 <_malloc_trim_r>:
  402d90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402d92:	4f24      	ldr	r7, [pc, #144]	; (402e24 <_malloc_trim_r+0x94>)
  402d94:	460c      	mov	r4, r1
  402d96:	4606      	mov	r6, r0
  402d98:	f000 ff58 	bl	403c4c <__malloc_lock>
  402d9c:	68bb      	ldr	r3, [r7, #8]
  402d9e:	685d      	ldr	r5, [r3, #4]
  402da0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  402da4:	310f      	adds	r1, #15
  402da6:	f025 0503 	bic.w	r5, r5, #3
  402daa:	4429      	add	r1, r5
  402dac:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402db0:	f021 010f 	bic.w	r1, r1, #15
  402db4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402db8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402dbc:	db07      	blt.n	402dce <_malloc_trim_r+0x3e>
  402dbe:	2100      	movs	r1, #0
  402dc0:	4630      	mov	r0, r6
  402dc2:	f001 f8f5 	bl	403fb0 <_sbrk_r>
  402dc6:	68bb      	ldr	r3, [r7, #8]
  402dc8:	442b      	add	r3, r5
  402dca:	4298      	cmp	r0, r3
  402dcc:	d004      	beq.n	402dd8 <_malloc_trim_r+0x48>
  402dce:	4630      	mov	r0, r6
  402dd0:	f000 ff42 	bl	403c58 <__malloc_unlock>
  402dd4:	2000      	movs	r0, #0
  402dd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402dd8:	4261      	negs	r1, r4
  402dda:	4630      	mov	r0, r6
  402ddc:	f001 f8e8 	bl	403fb0 <_sbrk_r>
  402de0:	3001      	adds	r0, #1
  402de2:	d00d      	beq.n	402e00 <_malloc_trim_r+0x70>
  402de4:	4b10      	ldr	r3, [pc, #64]	; (402e28 <_malloc_trim_r+0x98>)
  402de6:	68ba      	ldr	r2, [r7, #8]
  402de8:	6819      	ldr	r1, [r3, #0]
  402dea:	1b2d      	subs	r5, r5, r4
  402dec:	f045 0501 	orr.w	r5, r5, #1
  402df0:	4630      	mov	r0, r6
  402df2:	1b09      	subs	r1, r1, r4
  402df4:	6055      	str	r5, [r2, #4]
  402df6:	6019      	str	r1, [r3, #0]
  402df8:	f000 ff2e 	bl	403c58 <__malloc_unlock>
  402dfc:	2001      	movs	r0, #1
  402dfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402e00:	2100      	movs	r1, #0
  402e02:	4630      	mov	r0, r6
  402e04:	f001 f8d4 	bl	403fb0 <_sbrk_r>
  402e08:	68ba      	ldr	r2, [r7, #8]
  402e0a:	1a83      	subs	r3, r0, r2
  402e0c:	2b0f      	cmp	r3, #15
  402e0e:	ddde      	ble.n	402dce <_malloc_trim_r+0x3e>
  402e10:	4c06      	ldr	r4, [pc, #24]	; (402e2c <_malloc_trim_r+0x9c>)
  402e12:	4905      	ldr	r1, [pc, #20]	; (402e28 <_malloc_trim_r+0x98>)
  402e14:	6824      	ldr	r4, [r4, #0]
  402e16:	f043 0301 	orr.w	r3, r3, #1
  402e1a:	1b00      	subs	r0, r0, r4
  402e1c:	6053      	str	r3, [r2, #4]
  402e1e:	6008      	str	r0, [r1, #0]
  402e20:	e7d5      	b.n	402dce <_malloc_trim_r+0x3e>
  402e22:	bf00      	nop
  402e24:	200004a4 	.word	0x200004a4
  402e28:	2000e918 	.word	0x2000e918
  402e2c:	200008ac 	.word	0x200008ac

00402e30 <_free_r>:
  402e30:	2900      	cmp	r1, #0
  402e32:	d044      	beq.n	402ebe <_free_r+0x8e>
  402e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402e38:	460d      	mov	r5, r1
  402e3a:	4680      	mov	r8, r0
  402e3c:	f000 ff06 	bl	403c4c <__malloc_lock>
  402e40:	f855 7c04 	ldr.w	r7, [r5, #-4]
  402e44:	4969      	ldr	r1, [pc, #420]	; (402fec <_free_r+0x1bc>)
  402e46:	f027 0301 	bic.w	r3, r7, #1
  402e4a:	f1a5 0408 	sub.w	r4, r5, #8
  402e4e:	18e2      	adds	r2, r4, r3
  402e50:	688e      	ldr	r6, [r1, #8]
  402e52:	6850      	ldr	r0, [r2, #4]
  402e54:	42b2      	cmp	r2, r6
  402e56:	f020 0003 	bic.w	r0, r0, #3
  402e5a:	d05e      	beq.n	402f1a <_free_r+0xea>
  402e5c:	07fe      	lsls	r6, r7, #31
  402e5e:	6050      	str	r0, [r2, #4]
  402e60:	d40b      	bmi.n	402e7a <_free_r+0x4a>
  402e62:	f855 7c08 	ldr.w	r7, [r5, #-8]
  402e66:	1be4      	subs	r4, r4, r7
  402e68:	f101 0e08 	add.w	lr, r1, #8
  402e6c:	68a5      	ldr	r5, [r4, #8]
  402e6e:	4575      	cmp	r5, lr
  402e70:	443b      	add	r3, r7
  402e72:	d06d      	beq.n	402f50 <_free_r+0x120>
  402e74:	68e7      	ldr	r7, [r4, #12]
  402e76:	60ef      	str	r7, [r5, #12]
  402e78:	60bd      	str	r5, [r7, #8]
  402e7a:	1815      	adds	r5, r2, r0
  402e7c:	686d      	ldr	r5, [r5, #4]
  402e7e:	07ed      	lsls	r5, r5, #31
  402e80:	d53e      	bpl.n	402f00 <_free_r+0xd0>
  402e82:	f043 0201 	orr.w	r2, r3, #1
  402e86:	6062      	str	r2, [r4, #4]
  402e88:	50e3      	str	r3, [r4, r3]
  402e8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402e8e:	d217      	bcs.n	402ec0 <_free_r+0x90>
  402e90:	08db      	lsrs	r3, r3, #3
  402e92:	1c58      	adds	r0, r3, #1
  402e94:	109a      	asrs	r2, r3, #2
  402e96:	684d      	ldr	r5, [r1, #4]
  402e98:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  402e9c:	60a7      	str	r7, [r4, #8]
  402e9e:	2301      	movs	r3, #1
  402ea0:	4093      	lsls	r3, r2
  402ea2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  402ea6:	432b      	orrs	r3, r5
  402ea8:	3a08      	subs	r2, #8
  402eaa:	60e2      	str	r2, [r4, #12]
  402eac:	604b      	str	r3, [r1, #4]
  402eae:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  402eb2:	60fc      	str	r4, [r7, #12]
  402eb4:	4640      	mov	r0, r8
  402eb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402eba:	f000 becd 	b.w	403c58 <__malloc_unlock>
  402ebe:	4770      	bx	lr
  402ec0:	0a5a      	lsrs	r2, r3, #9
  402ec2:	2a04      	cmp	r2, #4
  402ec4:	d852      	bhi.n	402f6c <_free_r+0x13c>
  402ec6:	099a      	lsrs	r2, r3, #6
  402ec8:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402ecc:	00ff      	lsls	r7, r7, #3
  402ece:	f102 0538 	add.w	r5, r2, #56	; 0x38
  402ed2:	19c8      	adds	r0, r1, r7
  402ed4:	59ca      	ldr	r2, [r1, r7]
  402ed6:	3808      	subs	r0, #8
  402ed8:	4290      	cmp	r0, r2
  402eda:	d04f      	beq.n	402f7c <_free_r+0x14c>
  402edc:	6851      	ldr	r1, [r2, #4]
  402ede:	f021 0103 	bic.w	r1, r1, #3
  402ee2:	428b      	cmp	r3, r1
  402ee4:	d232      	bcs.n	402f4c <_free_r+0x11c>
  402ee6:	6892      	ldr	r2, [r2, #8]
  402ee8:	4290      	cmp	r0, r2
  402eea:	d1f7      	bne.n	402edc <_free_r+0xac>
  402eec:	68c3      	ldr	r3, [r0, #12]
  402eee:	60a0      	str	r0, [r4, #8]
  402ef0:	60e3      	str	r3, [r4, #12]
  402ef2:	609c      	str	r4, [r3, #8]
  402ef4:	60c4      	str	r4, [r0, #12]
  402ef6:	4640      	mov	r0, r8
  402ef8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402efc:	f000 beac 	b.w	403c58 <__malloc_unlock>
  402f00:	6895      	ldr	r5, [r2, #8]
  402f02:	4f3b      	ldr	r7, [pc, #236]	; (402ff0 <_free_r+0x1c0>)
  402f04:	42bd      	cmp	r5, r7
  402f06:	4403      	add	r3, r0
  402f08:	d040      	beq.n	402f8c <_free_r+0x15c>
  402f0a:	68d0      	ldr	r0, [r2, #12]
  402f0c:	60e8      	str	r0, [r5, #12]
  402f0e:	f043 0201 	orr.w	r2, r3, #1
  402f12:	6085      	str	r5, [r0, #8]
  402f14:	6062      	str	r2, [r4, #4]
  402f16:	50e3      	str	r3, [r4, r3]
  402f18:	e7b7      	b.n	402e8a <_free_r+0x5a>
  402f1a:	07ff      	lsls	r7, r7, #31
  402f1c:	4403      	add	r3, r0
  402f1e:	d407      	bmi.n	402f30 <_free_r+0x100>
  402f20:	f855 2c08 	ldr.w	r2, [r5, #-8]
  402f24:	1aa4      	subs	r4, r4, r2
  402f26:	4413      	add	r3, r2
  402f28:	68a0      	ldr	r0, [r4, #8]
  402f2a:	68e2      	ldr	r2, [r4, #12]
  402f2c:	60c2      	str	r2, [r0, #12]
  402f2e:	6090      	str	r0, [r2, #8]
  402f30:	4a30      	ldr	r2, [pc, #192]	; (402ff4 <_free_r+0x1c4>)
  402f32:	6812      	ldr	r2, [r2, #0]
  402f34:	f043 0001 	orr.w	r0, r3, #1
  402f38:	4293      	cmp	r3, r2
  402f3a:	6060      	str	r0, [r4, #4]
  402f3c:	608c      	str	r4, [r1, #8]
  402f3e:	d3b9      	bcc.n	402eb4 <_free_r+0x84>
  402f40:	4b2d      	ldr	r3, [pc, #180]	; (402ff8 <_free_r+0x1c8>)
  402f42:	4640      	mov	r0, r8
  402f44:	6819      	ldr	r1, [r3, #0]
  402f46:	f7ff ff23 	bl	402d90 <_malloc_trim_r>
  402f4a:	e7b3      	b.n	402eb4 <_free_r+0x84>
  402f4c:	4610      	mov	r0, r2
  402f4e:	e7cd      	b.n	402eec <_free_r+0xbc>
  402f50:	1811      	adds	r1, r2, r0
  402f52:	6849      	ldr	r1, [r1, #4]
  402f54:	07c9      	lsls	r1, r1, #31
  402f56:	d444      	bmi.n	402fe2 <_free_r+0x1b2>
  402f58:	6891      	ldr	r1, [r2, #8]
  402f5a:	68d2      	ldr	r2, [r2, #12]
  402f5c:	60ca      	str	r2, [r1, #12]
  402f5e:	4403      	add	r3, r0
  402f60:	f043 0001 	orr.w	r0, r3, #1
  402f64:	6091      	str	r1, [r2, #8]
  402f66:	6060      	str	r0, [r4, #4]
  402f68:	50e3      	str	r3, [r4, r3]
  402f6a:	e7a3      	b.n	402eb4 <_free_r+0x84>
  402f6c:	2a14      	cmp	r2, #20
  402f6e:	d816      	bhi.n	402f9e <_free_r+0x16e>
  402f70:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  402f74:	00ff      	lsls	r7, r7, #3
  402f76:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402f7a:	e7aa      	b.n	402ed2 <_free_r+0xa2>
  402f7c:	10aa      	asrs	r2, r5, #2
  402f7e:	2301      	movs	r3, #1
  402f80:	684d      	ldr	r5, [r1, #4]
  402f82:	4093      	lsls	r3, r2
  402f84:	432b      	orrs	r3, r5
  402f86:	604b      	str	r3, [r1, #4]
  402f88:	4603      	mov	r3, r0
  402f8a:	e7b0      	b.n	402eee <_free_r+0xbe>
  402f8c:	f043 0201 	orr.w	r2, r3, #1
  402f90:	614c      	str	r4, [r1, #20]
  402f92:	610c      	str	r4, [r1, #16]
  402f94:	60e5      	str	r5, [r4, #12]
  402f96:	60a5      	str	r5, [r4, #8]
  402f98:	6062      	str	r2, [r4, #4]
  402f9a:	50e3      	str	r3, [r4, r3]
  402f9c:	e78a      	b.n	402eb4 <_free_r+0x84>
  402f9e:	2a54      	cmp	r2, #84	; 0x54
  402fa0:	d806      	bhi.n	402fb0 <_free_r+0x180>
  402fa2:	0b1a      	lsrs	r2, r3, #12
  402fa4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402fa8:	00ff      	lsls	r7, r7, #3
  402faa:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402fae:	e790      	b.n	402ed2 <_free_r+0xa2>
  402fb0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402fb4:	d806      	bhi.n	402fc4 <_free_r+0x194>
  402fb6:	0bda      	lsrs	r2, r3, #15
  402fb8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402fbc:	00ff      	lsls	r7, r7, #3
  402fbe:	f102 0577 	add.w	r5, r2, #119	; 0x77
  402fc2:	e786      	b.n	402ed2 <_free_r+0xa2>
  402fc4:	f240 5054 	movw	r0, #1364	; 0x554
  402fc8:	4282      	cmp	r2, r0
  402fca:	d806      	bhi.n	402fda <_free_r+0x1aa>
  402fcc:	0c9a      	lsrs	r2, r3, #18
  402fce:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  402fd2:	00ff      	lsls	r7, r7, #3
  402fd4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402fd8:	e77b      	b.n	402ed2 <_free_r+0xa2>
  402fda:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402fde:	257e      	movs	r5, #126	; 0x7e
  402fe0:	e777      	b.n	402ed2 <_free_r+0xa2>
  402fe2:	f043 0101 	orr.w	r1, r3, #1
  402fe6:	6061      	str	r1, [r4, #4]
  402fe8:	6013      	str	r3, [r2, #0]
  402fea:	e763      	b.n	402eb4 <_free_r+0x84>
  402fec:	200004a4 	.word	0x200004a4
  402ff0:	200004ac 	.word	0x200004ac
  402ff4:	200008b0 	.word	0x200008b0
  402ff8:	2000e948 	.word	0x2000e948

00402ffc <__sfvwrite_r>:
  402ffc:	6893      	ldr	r3, [r2, #8]
  402ffe:	2b00      	cmp	r3, #0
  403000:	d073      	beq.n	4030ea <__sfvwrite_r+0xee>
  403002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403006:	898b      	ldrh	r3, [r1, #12]
  403008:	b083      	sub	sp, #12
  40300a:	460c      	mov	r4, r1
  40300c:	0719      	lsls	r1, r3, #28
  40300e:	9000      	str	r0, [sp, #0]
  403010:	4616      	mov	r6, r2
  403012:	d526      	bpl.n	403062 <__sfvwrite_r+0x66>
  403014:	6922      	ldr	r2, [r4, #16]
  403016:	b322      	cbz	r2, 403062 <__sfvwrite_r+0x66>
  403018:	f013 0002 	ands.w	r0, r3, #2
  40301c:	6835      	ldr	r5, [r6, #0]
  40301e:	d02c      	beq.n	40307a <__sfvwrite_r+0x7e>
  403020:	f04f 0900 	mov.w	r9, #0
  403024:	4fb0      	ldr	r7, [pc, #704]	; (4032e8 <__sfvwrite_r+0x2ec>)
  403026:	46c8      	mov	r8, r9
  403028:	46b2      	mov	sl, r6
  40302a:	45b8      	cmp	r8, r7
  40302c:	4643      	mov	r3, r8
  40302e:	464a      	mov	r2, r9
  403030:	bf28      	it	cs
  403032:	463b      	movcs	r3, r7
  403034:	9800      	ldr	r0, [sp, #0]
  403036:	f1b8 0f00 	cmp.w	r8, #0
  40303a:	d050      	beq.n	4030de <__sfvwrite_r+0xe2>
  40303c:	69e1      	ldr	r1, [r4, #28]
  40303e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  403040:	47b0      	blx	r6
  403042:	2800      	cmp	r0, #0
  403044:	dd58      	ble.n	4030f8 <__sfvwrite_r+0xfc>
  403046:	f8da 3008 	ldr.w	r3, [sl, #8]
  40304a:	1a1b      	subs	r3, r3, r0
  40304c:	4481      	add	r9, r0
  40304e:	eba8 0800 	sub.w	r8, r8, r0
  403052:	f8ca 3008 	str.w	r3, [sl, #8]
  403056:	2b00      	cmp	r3, #0
  403058:	d1e7      	bne.n	40302a <__sfvwrite_r+0x2e>
  40305a:	2000      	movs	r0, #0
  40305c:	b003      	add	sp, #12
  40305e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403062:	4621      	mov	r1, r4
  403064:	9800      	ldr	r0, [sp, #0]
  403066:	f001 f80f 	bl	404088 <__swsetup_r>
  40306a:	2800      	cmp	r0, #0
  40306c:	f040 8133 	bne.w	4032d6 <__sfvwrite_r+0x2da>
  403070:	89a3      	ldrh	r3, [r4, #12]
  403072:	6835      	ldr	r5, [r6, #0]
  403074:	f013 0002 	ands.w	r0, r3, #2
  403078:	d1d2      	bne.n	403020 <__sfvwrite_r+0x24>
  40307a:	f013 0901 	ands.w	r9, r3, #1
  40307e:	d145      	bne.n	40310c <__sfvwrite_r+0x110>
  403080:	464f      	mov	r7, r9
  403082:	9601      	str	r6, [sp, #4]
  403084:	b337      	cbz	r7, 4030d4 <__sfvwrite_r+0xd8>
  403086:	059a      	lsls	r2, r3, #22
  403088:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40308c:	f140 8083 	bpl.w	403196 <__sfvwrite_r+0x19a>
  403090:	4547      	cmp	r7, r8
  403092:	46c3      	mov	fp, r8
  403094:	f0c0 80ab 	bcc.w	4031ee <__sfvwrite_r+0x1f2>
  403098:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40309c:	f040 80ac 	bne.w	4031f8 <__sfvwrite_r+0x1fc>
  4030a0:	6820      	ldr	r0, [r4, #0]
  4030a2:	46ba      	mov	sl, r7
  4030a4:	465a      	mov	r2, fp
  4030a6:	4649      	mov	r1, r9
  4030a8:	f000 fd6c 	bl	403b84 <memmove>
  4030ac:	68a2      	ldr	r2, [r4, #8]
  4030ae:	6823      	ldr	r3, [r4, #0]
  4030b0:	eba2 0208 	sub.w	r2, r2, r8
  4030b4:	445b      	add	r3, fp
  4030b6:	60a2      	str	r2, [r4, #8]
  4030b8:	6023      	str	r3, [r4, #0]
  4030ba:	9a01      	ldr	r2, [sp, #4]
  4030bc:	6893      	ldr	r3, [r2, #8]
  4030be:	eba3 030a 	sub.w	r3, r3, sl
  4030c2:	44d1      	add	r9, sl
  4030c4:	eba7 070a 	sub.w	r7, r7, sl
  4030c8:	6093      	str	r3, [r2, #8]
  4030ca:	2b00      	cmp	r3, #0
  4030cc:	d0c5      	beq.n	40305a <__sfvwrite_r+0x5e>
  4030ce:	89a3      	ldrh	r3, [r4, #12]
  4030d0:	2f00      	cmp	r7, #0
  4030d2:	d1d8      	bne.n	403086 <__sfvwrite_r+0x8a>
  4030d4:	f8d5 9000 	ldr.w	r9, [r5]
  4030d8:	686f      	ldr	r7, [r5, #4]
  4030da:	3508      	adds	r5, #8
  4030dc:	e7d2      	b.n	403084 <__sfvwrite_r+0x88>
  4030de:	f8d5 9000 	ldr.w	r9, [r5]
  4030e2:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4030e6:	3508      	adds	r5, #8
  4030e8:	e79f      	b.n	40302a <__sfvwrite_r+0x2e>
  4030ea:	2000      	movs	r0, #0
  4030ec:	4770      	bx	lr
  4030ee:	4621      	mov	r1, r4
  4030f0:	9800      	ldr	r0, [sp, #0]
  4030f2:	f7ff fda3 	bl	402c3c <_fflush_r>
  4030f6:	b370      	cbz	r0, 403156 <__sfvwrite_r+0x15a>
  4030f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4030fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403100:	f04f 30ff 	mov.w	r0, #4294967295
  403104:	81a3      	strh	r3, [r4, #12]
  403106:	b003      	add	sp, #12
  403108:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40310c:	4681      	mov	r9, r0
  40310e:	4633      	mov	r3, r6
  403110:	464e      	mov	r6, r9
  403112:	46a8      	mov	r8, r5
  403114:	469a      	mov	sl, r3
  403116:	464d      	mov	r5, r9
  403118:	b34e      	cbz	r6, 40316e <__sfvwrite_r+0x172>
  40311a:	b380      	cbz	r0, 40317e <__sfvwrite_r+0x182>
  40311c:	6820      	ldr	r0, [r4, #0]
  40311e:	6923      	ldr	r3, [r4, #16]
  403120:	6962      	ldr	r2, [r4, #20]
  403122:	45b1      	cmp	r9, r6
  403124:	46cb      	mov	fp, r9
  403126:	bf28      	it	cs
  403128:	46b3      	movcs	fp, r6
  40312a:	4298      	cmp	r0, r3
  40312c:	465f      	mov	r7, fp
  40312e:	d904      	bls.n	40313a <__sfvwrite_r+0x13e>
  403130:	68a3      	ldr	r3, [r4, #8]
  403132:	4413      	add	r3, r2
  403134:	459b      	cmp	fp, r3
  403136:	f300 80a6 	bgt.w	403286 <__sfvwrite_r+0x28a>
  40313a:	4593      	cmp	fp, r2
  40313c:	db4b      	blt.n	4031d6 <__sfvwrite_r+0x1da>
  40313e:	4613      	mov	r3, r2
  403140:	6a67      	ldr	r7, [r4, #36]	; 0x24
  403142:	69e1      	ldr	r1, [r4, #28]
  403144:	9800      	ldr	r0, [sp, #0]
  403146:	462a      	mov	r2, r5
  403148:	47b8      	blx	r7
  40314a:	1e07      	subs	r7, r0, #0
  40314c:	ddd4      	ble.n	4030f8 <__sfvwrite_r+0xfc>
  40314e:	ebb9 0907 	subs.w	r9, r9, r7
  403152:	d0cc      	beq.n	4030ee <__sfvwrite_r+0xf2>
  403154:	2001      	movs	r0, #1
  403156:	f8da 3008 	ldr.w	r3, [sl, #8]
  40315a:	1bdb      	subs	r3, r3, r7
  40315c:	443d      	add	r5, r7
  40315e:	1bf6      	subs	r6, r6, r7
  403160:	f8ca 3008 	str.w	r3, [sl, #8]
  403164:	2b00      	cmp	r3, #0
  403166:	f43f af78 	beq.w	40305a <__sfvwrite_r+0x5e>
  40316a:	2e00      	cmp	r6, #0
  40316c:	d1d5      	bne.n	40311a <__sfvwrite_r+0x11e>
  40316e:	f108 0308 	add.w	r3, r8, #8
  403172:	e913 0060 	ldmdb	r3, {r5, r6}
  403176:	4698      	mov	r8, r3
  403178:	3308      	adds	r3, #8
  40317a:	2e00      	cmp	r6, #0
  40317c:	d0f9      	beq.n	403172 <__sfvwrite_r+0x176>
  40317e:	4632      	mov	r2, r6
  403180:	210a      	movs	r1, #10
  403182:	4628      	mov	r0, r5
  403184:	f000 fc14 	bl	4039b0 <memchr>
  403188:	2800      	cmp	r0, #0
  40318a:	f000 80a1 	beq.w	4032d0 <__sfvwrite_r+0x2d4>
  40318e:	3001      	adds	r0, #1
  403190:	eba0 0905 	sub.w	r9, r0, r5
  403194:	e7c2      	b.n	40311c <__sfvwrite_r+0x120>
  403196:	6820      	ldr	r0, [r4, #0]
  403198:	6923      	ldr	r3, [r4, #16]
  40319a:	4298      	cmp	r0, r3
  40319c:	d802      	bhi.n	4031a4 <__sfvwrite_r+0x1a8>
  40319e:	6963      	ldr	r3, [r4, #20]
  4031a0:	429f      	cmp	r7, r3
  4031a2:	d25d      	bcs.n	403260 <__sfvwrite_r+0x264>
  4031a4:	45b8      	cmp	r8, r7
  4031a6:	bf28      	it	cs
  4031a8:	46b8      	movcs	r8, r7
  4031aa:	4642      	mov	r2, r8
  4031ac:	4649      	mov	r1, r9
  4031ae:	f000 fce9 	bl	403b84 <memmove>
  4031b2:	68a3      	ldr	r3, [r4, #8]
  4031b4:	6822      	ldr	r2, [r4, #0]
  4031b6:	eba3 0308 	sub.w	r3, r3, r8
  4031ba:	4442      	add	r2, r8
  4031bc:	60a3      	str	r3, [r4, #8]
  4031be:	6022      	str	r2, [r4, #0]
  4031c0:	b10b      	cbz	r3, 4031c6 <__sfvwrite_r+0x1ca>
  4031c2:	46c2      	mov	sl, r8
  4031c4:	e779      	b.n	4030ba <__sfvwrite_r+0xbe>
  4031c6:	4621      	mov	r1, r4
  4031c8:	9800      	ldr	r0, [sp, #0]
  4031ca:	f7ff fd37 	bl	402c3c <_fflush_r>
  4031ce:	2800      	cmp	r0, #0
  4031d0:	d192      	bne.n	4030f8 <__sfvwrite_r+0xfc>
  4031d2:	46c2      	mov	sl, r8
  4031d4:	e771      	b.n	4030ba <__sfvwrite_r+0xbe>
  4031d6:	465a      	mov	r2, fp
  4031d8:	4629      	mov	r1, r5
  4031da:	f000 fcd3 	bl	403b84 <memmove>
  4031de:	68a2      	ldr	r2, [r4, #8]
  4031e0:	6823      	ldr	r3, [r4, #0]
  4031e2:	eba2 020b 	sub.w	r2, r2, fp
  4031e6:	445b      	add	r3, fp
  4031e8:	60a2      	str	r2, [r4, #8]
  4031ea:	6023      	str	r3, [r4, #0]
  4031ec:	e7af      	b.n	40314e <__sfvwrite_r+0x152>
  4031ee:	6820      	ldr	r0, [r4, #0]
  4031f0:	46b8      	mov	r8, r7
  4031f2:	46ba      	mov	sl, r7
  4031f4:	46bb      	mov	fp, r7
  4031f6:	e755      	b.n	4030a4 <__sfvwrite_r+0xa8>
  4031f8:	6962      	ldr	r2, [r4, #20]
  4031fa:	6820      	ldr	r0, [r4, #0]
  4031fc:	6921      	ldr	r1, [r4, #16]
  4031fe:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  403202:	eba0 0a01 	sub.w	sl, r0, r1
  403206:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40320a:	f10a 0001 	add.w	r0, sl, #1
  40320e:	ea4f 0868 	mov.w	r8, r8, asr #1
  403212:	4438      	add	r0, r7
  403214:	4540      	cmp	r0, r8
  403216:	4642      	mov	r2, r8
  403218:	bf84      	itt	hi
  40321a:	4680      	movhi	r8, r0
  40321c:	4642      	movhi	r2, r8
  40321e:	055b      	lsls	r3, r3, #21
  403220:	d544      	bpl.n	4032ac <__sfvwrite_r+0x2b0>
  403222:	4611      	mov	r1, r2
  403224:	9800      	ldr	r0, [sp, #0]
  403226:	f000 f913 	bl	403450 <_malloc_r>
  40322a:	4683      	mov	fp, r0
  40322c:	2800      	cmp	r0, #0
  40322e:	d055      	beq.n	4032dc <__sfvwrite_r+0x2e0>
  403230:	4652      	mov	r2, sl
  403232:	6921      	ldr	r1, [r4, #16]
  403234:	f000 fc0c 	bl	403a50 <memcpy>
  403238:	89a3      	ldrh	r3, [r4, #12]
  40323a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40323e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403242:	81a3      	strh	r3, [r4, #12]
  403244:	eb0b 000a 	add.w	r0, fp, sl
  403248:	eba8 030a 	sub.w	r3, r8, sl
  40324c:	f8c4 b010 	str.w	fp, [r4, #16]
  403250:	f8c4 8014 	str.w	r8, [r4, #20]
  403254:	6020      	str	r0, [r4, #0]
  403256:	60a3      	str	r3, [r4, #8]
  403258:	46b8      	mov	r8, r7
  40325a:	46ba      	mov	sl, r7
  40325c:	46bb      	mov	fp, r7
  40325e:	e721      	b.n	4030a4 <__sfvwrite_r+0xa8>
  403260:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  403264:	42b9      	cmp	r1, r7
  403266:	bf28      	it	cs
  403268:	4639      	movcs	r1, r7
  40326a:	464a      	mov	r2, r9
  40326c:	fb91 f1f3 	sdiv	r1, r1, r3
  403270:	9800      	ldr	r0, [sp, #0]
  403272:	6a66      	ldr	r6, [r4, #36]	; 0x24
  403274:	fb03 f301 	mul.w	r3, r3, r1
  403278:	69e1      	ldr	r1, [r4, #28]
  40327a:	47b0      	blx	r6
  40327c:	f1b0 0a00 	subs.w	sl, r0, #0
  403280:	f73f af1b 	bgt.w	4030ba <__sfvwrite_r+0xbe>
  403284:	e738      	b.n	4030f8 <__sfvwrite_r+0xfc>
  403286:	461a      	mov	r2, r3
  403288:	4629      	mov	r1, r5
  40328a:	9301      	str	r3, [sp, #4]
  40328c:	f000 fc7a 	bl	403b84 <memmove>
  403290:	6822      	ldr	r2, [r4, #0]
  403292:	9b01      	ldr	r3, [sp, #4]
  403294:	9800      	ldr	r0, [sp, #0]
  403296:	441a      	add	r2, r3
  403298:	6022      	str	r2, [r4, #0]
  40329a:	4621      	mov	r1, r4
  40329c:	f7ff fcce 	bl	402c3c <_fflush_r>
  4032a0:	9b01      	ldr	r3, [sp, #4]
  4032a2:	2800      	cmp	r0, #0
  4032a4:	f47f af28 	bne.w	4030f8 <__sfvwrite_r+0xfc>
  4032a8:	461f      	mov	r7, r3
  4032aa:	e750      	b.n	40314e <__sfvwrite_r+0x152>
  4032ac:	9800      	ldr	r0, [sp, #0]
  4032ae:	f000 fcd9 	bl	403c64 <_realloc_r>
  4032b2:	4683      	mov	fp, r0
  4032b4:	2800      	cmp	r0, #0
  4032b6:	d1c5      	bne.n	403244 <__sfvwrite_r+0x248>
  4032b8:	9d00      	ldr	r5, [sp, #0]
  4032ba:	6921      	ldr	r1, [r4, #16]
  4032bc:	4628      	mov	r0, r5
  4032be:	f7ff fdb7 	bl	402e30 <_free_r>
  4032c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4032c6:	220c      	movs	r2, #12
  4032c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4032cc:	602a      	str	r2, [r5, #0]
  4032ce:	e715      	b.n	4030fc <__sfvwrite_r+0x100>
  4032d0:	f106 0901 	add.w	r9, r6, #1
  4032d4:	e722      	b.n	40311c <__sfvwrite_r+0x120>
  4032d6:	f04f 30ff 	mov.w	r0, #4294967295
  4032da:	e6bf      	b.n	40305c <__sfvwrite_r+0x60>
  4032dc:	9a00      	ldr	r2, [sp, #0]
  4032de:	230c      	movs	r3, #12
  4032e0:	6013      	str	r3, [r2, #0]
  4032e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4032e6:	e709      	b.n	4030fc <__sfvwrite_r+0x100>
  4032e8:	7ffffc00 	.word	0x7ffffc00

004032ec <_fwalk_reent>:
  4032ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4032f0:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4032f4:	d01f      	beq.n	403336 <_fwalk_reent+0x4a>
  4032f6:	4688      	mov	r8, r1
  4032f8:	4606      	mov	r6, r0
  4032fa:	f04f 0900 	mov.w	r9, #0
  4032fe:	687d      	ldr	r5, [r7, #4]
  403300:	68bc      	ldr	r4, [r7, #8]
  403302:	3d01      	subs	r5, #1
  403304:	d411      	bmi.n	40332a <_fwalk_reent+0x3e>
  403306:	89a3      	ldrh	r3, [r4, #12]
  403308:	2b01      	cmp	r3, #1
  40330a:	f105 35ff 	add.w	r5, r5, #4294967295
  40330e:	d908      	bls.n	403322 <_fwalk_reent+0x36>
  403310:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403314:	3301      	adds	r3, #1
  403316:	4621      	mov	r1, r4
  403318:	4630      	mov	r0, r6
  40331a:	d002      	beq.n	403322 <_fwalk_reent+0x36>
  40331c:	47c0      	blx	r8
  40331e:	ea49 0900 	orr.w	r9, r9, r0
  403322:	1c6b      	adds	r3, r5, #1
  403324:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403328:	d1ed      	bne.n	403306 <_fwalk_reent+0x1a>
  40332a:	683f      	ldr	r7, [r7, #0]
  40332c:	2f00      	cmp	r7, #0
  40332e:	d1e6      	bne.n	4032fe <_fwalk_reent+0x12>
  403330:	4648      	mov	r0, r9
  403332:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403336:	46b9      	mov	r9, r7
  403338:	4648      	mov	r0, r9
  40333a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40333e:	bf00      	nop

00403340 <__retarget_lock_init_recursive>:
  403340:	4770      	bx	lr
  403342:	bf00      	nop

00403344 <__retarget_lock_close_recursive>:
  403344:	4770      	bx	lr
  403346:	bf00      	nop

00403348 <__retarget_lock_acquire_recursive>:
  403348:	4770      	bx	lr
  40334a:	bf00      	nop

0040334c <__retarget_lock_release_recursive>:
  40334c:	4770      	bx	lr
  40334e:	bf00      	nop

00403350 <__swhatbuf_r>:
  403350:	b570      	push	{r4, r5, r6, lr}
  403352:	460c      	mov	r4, r1
  403354:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403358:	2900      	cmp	r1, #0
  40335a:	b090      	sub	sp, #64	; 0x40
  40335c:	4615      	mov	r5, r2
  40335e:	461e      	mov	r6, r3
  403360:	db14      	blt.n	40338c <__swhatbuf_r+0x3c>
  403362:	aa01      	add	r2, sp, #4
  403364:	f000 ffca 	bl	4042fc <_fstat_r>
  403368:	2800      	cmp	r0, #0
  40336a:	db0f      	blt.n	40338c <__swhatbuf_r+0x3c>
  40336c:	9a02      	ldr	r2, [sp, #8]
  40336e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  403372:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  403376:	fab2 f282 	clz	r2, r2
  40337a:	0952      	lsrs	r2, r2, #5
  40337c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403380:	f44f 6000 	mov.w	r0, #2048	; 0x800
  403384:	6032      	str	r2, [r6, #0]
  403386:	602b      	str	r3, [r5, #0]
  403388:	b010      	add	sp, #64	; 0x40
  40338a:	bd70      	pop	{r4, r5, r6, pc}
  40338c:	89a2      	ldrh	r2, [r4, #12]
  40338e:	2300      	movs	r3, #0
  403390:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  403394:	6033      	str	r3, [r6, #0]
  403396:	d004      	beq.n	4033a2 <__swhatbuf_r+0x52>
  403398:	2240      	movs	r2, #64	; 0x40
  40339a:	4618      	mov	r0, r3
  40339c:	602a      	str	r2, [r5, #0]
  40339e:	b010      	add	sp, #64	; 0x40
  4033a0:	bd70      	pop	{r4, r5, r6, pc}
  4033a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4033a6:	602b      	str	r3, [r5, #0]
  4033a8:	b010      	add	sp, #64	; 0x40
  4033aa:	bd70      	pop	{r4, r5, r6, pc}

004033ac <__smakebuf_r>:
  4033ac:	898a      	ldrh	r2, [r1, #12]
  4033ae:	0792      	lsls	r2, r2, #30
  4033b0:	460b      	mov	r3, r1
  4033b2:	d506      	bpl.n	4033c2 <__smakebuf_r+0x16>
  4033b4:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4033b8:	2101      	movs	r1, #1
  4033ba:	601a      	str	r2, [r3, #0]
  4033bc:	611a      	str	r2, [r3, #16]
  4033be:	6159      	str	r1, [r3, #20]
  4033c0:	4770      	bx	lr
  4033c2:	b5f0      	push	{r4, r5, r6, r7, lr}
  4033c4:	b083      	sub	sp, #12
  4033c6:	ab01      	add	r3, sp, #4
  4033c8:	466a      	mov	r2, sp
  4033ca:	460c      	mov	r4, r1
  4033cc:	4606      	mov	r6, r0
  4033ce:	f7ff ffbf 	bl	403350 <__swhatbuf_r>
  4033d2:	9900      	ldr	r1, [sp, #0]
  4033d4:	4605      	mov	r5, r0
  4033d6:	4630      	mov	r0, r6
  4033d8:	f000 f83a 	bl	403450 <_malloc_r>
  4033dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4033e0:	b1d8      	cbz	r0, 40341a <__smakebuf_r+0x6e>
  4033e2:	9a01      	ldr	r2, [sp, #4]
  4033e4:	4f15      	ldr	r7, [pc, #84]	; (40343c <__smakebuf_r+0x90>)
  4033e6:	9900      	ldr	r1, [sp, #0]
  4033e8:	63f7      	str	r7, [r6, #60]	; 0x3c
  4033ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4033ee:	81a3      	strh	r3, [r4, #12]
  4033f0:	6020      	str	r0, [r4, #0]
  4033f2:	6120      	str	r0, [r4, #16]
  4033f4:	6161      	str	r1, [r4, #20]
  4033f6:	b91a      	cbnz	r2, 403400 <__smakebuf_r+0x54>
  4033f8:	432b      	orrs	r3, r5
  4033fa:	81a3      	strh	r3, [r4, #12]
  4033fc:	b003      	add	sp, #12
  4033fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403400:	4630      	mov	r0, r6
  403402:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403406:	f000 ff8d 	bl	404324 <_isatty_r>
  40340a:	b1a0      	cbz	r0, 403436 <__smakebuf_r+0x8a>
  40340c:	89a3      	ldrh	r3, [r4, #12]
  40340e:	f023 0303 	bic.w	r3, r3, #3
  403412:	f043 0301 	orr.w	r3, r3, #1
  403416:	b21b      	sxth	r3, r3
  403418:	e7ee      	b.n	4033f8 <__smakebuf_r+0x4c>
  40341a:	059a      	lsls	r2, r3, #22
  40341c:	d4ee      	bmi.n	4033fc <__smakebuf_r+0x50>
  40341e:	f023 0303 	bic.w	r3, r3, #3
  403422:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403426:	f043 0302 	orr.w	r3, r3, #2
  40342a:	2101      	movs	r1, #1
  40342c:	81a3      	strh	r3, [r4, #12]
  40342e:	6022      	str	r2, [r4, #0]
  403430:	6122      	str	r2, [r4, #16]
  403432:	6161      	str	r1, [r4, #20]
  403434:	e7e2      	b.n	4033fc <__smakebuf_r+0x50>
  403436:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40343a:	e7dd      	b.n	4033f8 <__smakebuf_r+0x4c>
  40343c:	00402c91 	.word	0x00402c91

00403440 <malloc>:
  403440:	4b02      	ldr	r3, [pc, #8]	; (40344c <malloc+0xc>)
  403442:	4601      	mov	r1, r0
  403444:	6818      	ldr	r0, [r3, #0]
  403446:	f000 b803 	b.w	403450 <_malloc_r>
  40344a:	bf00      	nop
  40344c:	20000070 	.word	0x20000070

00403450 <_malloc_r>:
  403450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403454:	f101 060b 	add.w	r6, r1, #11
  403458:	2e16      	cmp	r6, #22
  40345a:	b083      	sub	sp, #12
  40345c:	4605      	mov	r5, r0
  40345e:	f240 809e 	bls.w	40359e <_malloc_r+0x14e>
  403462:	f036 0607 	bics.w	r6, r6, #7
  403466:	f100 80bd 	bmi.w	4035e4 <_malloc_r+0x194>
  40346a:	42b1      	cmp	r1, r6
  40346c:	f200 80ba 	bhi.w	4035e4 <_malloc_r+0x194>
  403470:	f000 fbec 	bl	403c4c <__malloc_lock>
  403474:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403478:	f0c0 8293 	bcc.w	4039a2 <_malloc_r+0x552>
  40347c:	0a73      	lsrs	r3, r6, #9
  40347e:	f000 80b8 	beq.w	4035f2 <_malloc_r+0x1a2>
  403482:	2b04      	cmp	r3, #4
  403484:	f200 8179 	bhi.w	40377a <_malloc_r+0x32a>
  403488:	09b3      	lsrs	r3, r6, #6
  40348a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40348e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403492:	00c3      	lsls	r3, r0, #3
  403494:	4fbf      	ldr	r7, [pc, #764]	; (403794 <_malloc_r+0x344>)
  403496:	443b      	add	r3, r7
  403498:	f1a3 0108 	sub.w	r1, r3, #8
  40349c:	685c      	ldr	r4, [r3, #4]
  40349e:	42a1      	cmp	r1, r4
  4034a0:	d106      	bne.n	4034b0 <_malloc_r+0x60>
  4034a2:	e00c      	b.n	4034be <_malloc_r+0x6e>
  4034a4:	2a00      	cmp	r2, #0
  4034a6:	f280 80aa 	bge.w	4035fe <_malloc_r+0x1ae>
  4034aa:	68e4      	ldr	r4, [r4, #12]
  4034ac:	42a1      	cmp	r1, r4
  4034ae:	d006      	beq.n	4034be <_malloc_r+0x6e>
  4034b0:	6863      	ldr	r3, [r4, #4]
  4034b2:	f023 0303 	bic.w	r3, r3, #3
  4034b6:	1b9a      	subs	r2, r3, r6
  4034b8:	2a0f      	cmp	r2, #15
  4034ba:	ddf3      	ble.n	4034a4 <_malloc_r+0x54>
  4034bc:	4670      	mov	r0, lr
  4034be:	693c      	ldr	r4, [r7, #16]
  4034c0:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4037a8 <_malloc_r+0x358>
  4034c4:	4574      	cmp	r4, lr
  4034c6:	f000 81ab 	beq.w	403820 <_malloc_r+0x3d0>
  4034ca:	6863      	ldr	r3, [r4, #4]
  4034cc:	f023 0303 	bic.w	r3, r3, #3
  4034d0:	1b9a      	subs	r2, r3, r6
  4034d2:	2a0f      	cmp	r2, #15
  4034d4:	f300 8190 	bgt.w	4037f8 <_malloc_r+0x3a8>
  4034d8:	2a00      	cmp	r2, #0
  4034da:	f8c7 e014 	str.w	lr, [r7, #20]
  4034de:	f8c7 e010 	str.w	lr, [r7, #16]
  4034e2:	f280 809d 	bge.w	403620 <_malloc_r+0x1d0>
  4034e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4034ea:	f080 8161 	bcs.w	4037b0 <_malloc_r+0x360>
  4034ee:	08db      	lsrs	r3, r3, #3
  4034f0:	f103 0c01 	add.w	ip, r3, #1
  4034f4:	1099      	asrs	r1, r3, #2
  4034f6:	687a      	ldr	r2, [r7, #4]
  4034f8:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4034fc:	f8c4 8008 	str.w	r8, [r4, #8]
  403500:	2301      	movs	r3, #1
  403502:	408b      	lsls	r3, r1
  403504:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403508:	4313      	orrs	r3, r2
  40350a:	3908      	subs	r1, #8
  40350c:	60e1      	str	r1, [r4, #12]
  40350e:	607b      	str	r3, [r7, #4]
  403510:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403514:	f8c8 400c 	str.w	r4, [r8, #12]
  403518:	1082      	asrs	r2, r0, #2
  40351a:	2401      	movs	r4, #1
  40351c:	4094      	lsls	r4, r2
  40351e:	429c      	cmp	r4, r3
  403520:	f200 808b 	bhi.w	40363a <_malloc_r+0x1ea>
  403524:	421c      	tst	r4, r3
  403526:	d106      	bne.n	403536 <_malloc_r+0xe6>
  403528:	f020 0003 	bic.w	r0, r0, #3
  40352c:	0064      	lsls	r4, r4, #1
  40352e:	421c      	tst	r4, r3
  403530:	f100 0004 	add.w	r0, r0, #4
  403534:	d0fa      	beq.n	40352c <_malloc_r+0xdc>
  403536:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40353a:	46cc      	mov	ip, r9
  40353c:	4680      	mov	r8, r0
  40353e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403542:	459c      	cmp	ip, r3
  403544:	d107      	bne.n	403556 <_malloc_r+0x106>
  403546:	e16d      	b.n	403824 <_malloc_r+0x3d4>
  403548:	2a00      	cmp	r2, #0
  40354a:	f280 817b 	bge.w	403844 <_malloc_r+0x3f4>
  40354e:	68db      	ldr	r3, [r3, #12]
  403550:	459c      	cmp	ip, r3
  403552:	f000 8167 	beq.w	403824 <_malloc_r+0x3d4>
  403556:	6859      	ldr	r1, [r3, #4]
  403558:	f021 0103 	bic.w	r1, r1, #3
  40355c:	1b8a      	subs	r2, r1, r6
  40355e:	2a0f      	cmp	r2, #15
  403560:	ddf2      	ble.n	403548 <_malloc_r+0xf8>
  403562:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403566:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40356a:	9300      	str	r3, [sp, #0]
  40356c:	199c      	adds	r4, r3, r6
  40356e:	4628      	mov	r0, r5
  403570:	f046 0601 	orr.w	r6, r6, #1
  403574:	f042 0501 	orr.w	r5, r2, #1
  403578:	605e      	str	r6, [r3, #4]
  40357a:	f8c8 c00c 	str.w	ip, [r8, #12]
  40357e:	f8cc 8008 	str.w	r8, [ip, #8]
  403582:	617c      	str	r4, [r7, #20]
  403584:	613c      	str	r4, [r7, #16]
  403586:	f8c4 e00c 	str.w	lr, [r4, #12]
  40358a:	f8c4 e008 	str.w	lr, [r4, #8]
  40358e:	6065      	str	r5, [r4, #4]
  403590:	505a      	str	r2, [r3, r1]
  403592:	f000 fb61 	bl	403c58 <__malloc_unlock>
  403596:	9b00      	ldr	r3, [sp, #0]
  403598:	f103 0408 	add.w	r4, r3, #8
  40359c:	e01e      	b.n	4035dc <_malloc_r+0x18c>
  40359e:	2910      	cmp	r1, #16
  4035a0:	d820      	bhi.n	4035e4 <_malloc_r+0x194>
  4035a2:	f000 fb53 	bl	403c4c <__malloc_lock>
  4035a6:	2610      	movs	r6, #16
  4035a8:	2318      	movs	r3, #24
  4035aa:	2002      	movs	r0, #2
  4035ac:	4f79      	ldr	r7, [pc, #484]	; (403794 <_malloc_r+0x344>)
  4035ae:	443b      	add	r3, r7
  4035b0:	f1a3 0208 	sub.w	r2, r3, #8
  4035b4:	685c      	ldr	r4, [r3, #4]
  4035b6:	4294      	cmp	r4, r2
  4035b8:	f000 813d 	beq.w	403836 <_malloc_r+0x3e6>
  4035bc:	6863      	ldr	r3, [r4, #4]
  4035be:	68e1      	ldr	r1, [r4, #12]
  4035c0:	68a6      	ldr	r6, [r4, #8]
  4035c2:	f023 0303 	bic.w	r3, r3, #3
  4035c6:	4423      	add	r3, r4
  4035c8:	4628      	mov	r0, r5
  4035ca:	685a      	ldr	r2, [r3, #4]
  4035cc:	60f1      	str	r1, [r6, #12]
  4035ce:	f042 0201 	orr.w	r2, r2, #1
  4035d2:	608e      	str	r6, [r1, #8]
  4035d4:	605a      	str	r2, [r3, #4]
  4035d6:	f000 fb3f 	bl	403c58 <__malloc_unlock>
  4035da:	3408      	adds	r4, #8
  4035dc:	4620      	mov	r0, r4
  4035de:	b003      	add	sp, #12
  4035e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035e4:	2400      	movs	r4, #0
  4035e6:	230c      	movs	r3, #12
  4035e8:	4620      	mov	r0, r4
  4035ea:	602b      	str	r3, [r5, #0]
  4035ec:	b003      	add	sp, #12
  4035ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035f2:	2040      	movs	r0, #64	; 0x40
  4035f4:	f44f 7300 	mov.w	r3, #512	; 0x200
  4035f8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4035fc:	e74a      	b.n	403494 <_malloc_r+0x44>
  4035fe:	4423      	add	r3, r4
  403600:	68e1      	ldr	r1, [r4, #12]
  403602:	685a      	ldr	r2, [r3, #4]
  403604:	68a6      	ldr	r6, [r4, #8]
  403606:	f042 0201 	orr.w	r2, r2, #1
  40360a:	60f1      	str	r1, [r6, #12]
  40360c:	4628      	mov	r0, r5
  40360e:	608e      	str	r6, [r1, #8]
  403610:	605a      	str	r2, [r3, #4]
  403612:	f000 fb21 	bl	403c58 <__malloc_unlock>
  403616:	3408      	adds	r4, #8
  403618:	4620      	mov	r0, r4
  40361a:	b003      	add	sp, #12
  40361c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403620:	4423      	add	r3, r4
  403622:	4628      	mov	r0, r5
  403624:	685a      	ldr	r2, [r3, #4]
  403626:	f042 0201 	orr.w	r2, r2, #1
  40362a:	605a      	str	r2, [r3, #4]
  40362c:	f000 fb14 	bl	403c58 <__malloc_unlock>
  403630:	3408      	adds	r4, #8
  403632:	4620      	mov	r0, r4
  403634:	b003      	add	sp, #12
  403636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40363a:	68bc      	ldr	r4, [r7, #8]
  40363c:	6863      	ldr	r3, [r4, #4]
  40363e:	f023 0803 	bic.w	r8, r3, #3
  403642:	45b0      	cmp	r8, r6
  403644:	d304      	bcc.n	403650 <_malloc_r+0x200>
  403646:	eba8 0306 	sub.w	r3, r8, r6
  40364a:	2b0f      	cmp	r3, #15
  40364c:	f300 8085 	bgt.w	40375a <_malloc_r+0x30a>
  403650:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4037ac <_malloc_r+0x35c>
  403654:	4b50      	ldr	r3, [pc, #320]	; (403798 <_malloc_r+0x348>)
  403656:	f8d9 2000 	ldr.w	r2, [r9]
  40365a:	681b      	ldr	r3, [r3, #0]
  40365c:	3201      	adds	r2, #1
  40365e:	4433      	add	r3, r6
  403660:	eb04 0a08 	add.w	sl, r4, r8
  403664:	f000 8155 	beq.w	403912 <_malloc_r+0x4c2>
  403668:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40366c:	330f      	adds	r3, #15
  40366e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403672:	f02b 0b0f 	bic.w	fp, fp, #15
  403676:	4659      	mov	r1, fp
  403678:	4628      	mov	r0, r5
  40367a:	f000 fc99 	bl	403fb0 <_sbrk_r>
  40367e:	1c41      	adds	r1, r0, #1
  403680:	4602      	mov	r2, r0
  403682:	f000 80fc 	beq.w	40387e <_malloc_r+0x42e>
  403686:	4582      	cmp	sl, r0
  403688:	f200 80f7 	bhi.w	40387a <_malloc_r+0x42a>
  40368c:	4b43      	ldr	r3, [pc, #268]	; (40379c <_malloc_r+0x34c>)
  40368e:	6819      	ldr	r1, [r3, #0]
  403690:	4459      	add	r1, fp
  403692:	6019      	str	r1, [r3, #0]
  403694:	f000 814d 	beq.w	403932 <_malloc_r+0x4e2>
  403698:	f8d9 0000 	ldr.w	r0, [r9]
  40369c:	3001      	adds	r0, #1
  40369e:	bf1b      	ittet	ne
  4036a0:	eba2 0a0a 	subne.w	sl, r2, sl
  4036a4:	4451      	addne	r1, sl
  4036a6:	f8c9 2000 	streq.w	r2, [r9]
  4036aa:	6019      	strne	r1, [r3, #0]
  4036ac:	f012 0107 	ands.w	r1, r2, #7
  4036b0:	f000 8115 	beq.w	4038de <_malloc_r+0x48e>
  4036b4:	f1c1 0008 	rsb	r0, r1, #8
  4036b8:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4036bc:	4402      	add	r2, r0
  4036be:	3108      	adds	r1, #8
  4036c0:	eb02 090b 	add.w	r9, r2, fp
  4036c4:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4036c8:	eba1 0909 	sub.w	r9, r1, r9
  4036cc:	4649      	mov	r1, r9
  4036ce:	4628      	mov	r0, r5
  4036d0:	9301      	str	r3, [sp, #4]
  4036d2:	9200      	str	r2, [sp, #0]
  4036d4:	f000 fc6c 	bl	403fb0 <_sbrk_r>
  4036d8:	1c43      	adds	r3, r0, #1
  4036da:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4036de:	f000 8143 	beq.w	403968 <_malloc_r+0x518>
  4036e2:	1a80      	subs	r0, r0, r2
  4036e4:	4448      	add	r0, r9
  4036e6:	f040 0001 	orr.w	r0, r0, #1
  4036ea:	6819      	ldr	r1, [r3, #0]
  4036ec:	60ba      	str	r2, [r7, #8]
  4036ee:	4449      	add	r1, r9
  4036f0:	42bc      	cmp	r4, r7
  4036f2:	6050      	str	r0, [r2, #4]
  4036f4:	6019      	str	r1, [r3, #0]
  4036f6:	d017      	beq.n	403728 <_malloc_r+0x2d8>
  4036f8:	f1b8 0f0f 	cmp.w	r8, #15
  4036fc:	f240 80fb 	bls.w	4038f6 <_malloc_r+0x4a6>
  403700:	6860      	ldr	r0, [r4, #4]
  403702:	f1a8 020c 	sub.w	r2, r8, #12
  403706:	f022 0207 	bic.w	r2, r2, #7
  40370a:	eb04 0e02 	add.w	lr, r4, r2
  40370e:	f000 0001 	and.w	r0, r0, #1
  403712:	f04f 0c05 	mov.w	ip, #5
  403716:	4310      	orrs	r0, r2
  403718:	2a0f      	cmp	r2, #15
  40371a:	6060      	str	r0, [r4, #4]
  40371c:	f8ce c004 	str.w	ip, [lr, #4]
  403720:	f8ce c008 	str.w	ip, [lr, #8]
  403724:	f200 8117 	bhi.w	403956 <_malloc_r+0x506>
  403728:	4b1d      	ldr	r3, [pc, #116]	; (4037a0 <_malloc_r+0x350>)
  40372a:	68bc      	ldr	r4, [r7, #8]
  40372c:	681a      	ldr	r2, [r3, #0]
  40372e:	4291      	cmp	r1, r2
  403730:	bf88      	it	hi
  403732:	6019      	strhi	r1, [r3, #0]
  403734:	4b1b      	ldr	r3, [pc, #108]	; (4037a4 <_malloc_r+0x354>)
  403736:	681a      	ldr	r2, [r3, #0]
  403738:	4291      	cmp	r1, r2
  40373a:	6862      	ldr	r2, [r4, #4]
  40373c:	bf88      	it	hi
  40373e:	6019      	strhi	r1, [r3, #0]
  403740:	f022 0203 	bic.w	r2, r2, #3
  403744:	4296      	cmp	r6, r2
  403746:	eba2 0306 	sub.w	r3, r2, r6
  40374a:	d801      	bhi.n	403750 <_malloc_r+0x300>
  40374c:	2b0f      	cmp	r3, #15
  40374e:	dc04      	bgt.n	40375a <_malloc_r+0x30a>
  403750:	4628      	mov	r0, r5
  403752:	f000 fa81 	bl	403c58 <__malloc_unlock>
  403756:	2400      	movs	r4, #0
  403758:	e740      	b.n	4035dc <_malloc_r+0x18c>
  40375a:	19a2      	adds	r2, r4, r6
  40375c:	f043 0301 	orr.w	r3, r3, #1
  403760:	f046 0601 	orr.w	r6, r6, #1
  403764:	6066      	str	r6, [r4, #4]
  403766:	4628      	mov	r0, r5
  403768:	60ba      	str	r2, [r7, #8]
  40376a:	6053      	str	r3, [r2, #4]
  40376c:	f000 fa74 	bl	403c58 <__malloc_unlock>
  403770:	3408      	adds	r4, #8
  403772:	4620      	mov	r0, r4
  403774:	b003      	add	sp, #12
  403776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40377a:	2b14      	cmp	r3, #20
  40377c:	d971      	bls.n	403862 <_malloc_r+0x412>
  40377e:	2b54      	cmp	r3, #84	; 0x54
  403780:	f200 80a3 	bhi.w	4038ca <_malloc_r+0x47a>
  403784:	0b33      	lsrs	r3, r6, #12
  403786:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40378a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40378e:	00c3      	lsls	r3, r0, #3
  403790:	e680      	b.n	403494 <_malloc_r+0x44>
  403792:	bf00      	nop
  403794:	200004a4 	.word	0x200004a4
  403798:	2000e948 	.word	0x2000e948
  40379c:	2000e918 	.word	0x2000e918
  4037a0:	2000e940 	.word	0x2000e940
  4037a4:	2000e944 	.word	0x2000e944
  4037a8:	200004ac 	.word	0x200004ac
  4037ac:	200008ac 	.word	0x200008ac
  4037b0:	0a5a      	lsrs	r2, r3, #9
  4037b2:	2a04      	cmp	r2, #4
  4037b4:	d95b      	bls.n	40386e <_malloc_r+0x41e>
  4037b6:	2a14      	cmp	r2, #20
  4037b8:	f200 80ae 	bhi.w	403918 <_malloc_r+0x4c8>
  4037bc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4037c0:	00c9      	lsls	r1, r1, #3
  4037c2:	325b      	adds	r2, #91	; 0x5b
  4037c4:	eb07 0c01 	add.w	ip, r7, r1
  4037c8:	5879      	ldr	r1, [r7, r1]
  4037ca:	f1ac 0c08 	sub.w	ip, ip, #8
  4037ce:	458c      	cmp	ip, r1
  4037d0:	f000 8088 	beq.w	4038e4 <_malloc_r+0x494>
  4037d4:	684a      	ldr	r2, [r1, #4]
  4037d6:	f022 0203 	bic.w	r2, r2, #3
  4037da:	4293      	cmp	r3, r2
  4037dc:	d273      	bcs.n	4038c6 <_malloc_r+0x476>
  4037de:	6889      	ldr	r1, [r1, #8]
  4037e0:	458c      	cmp	ip, r1
  4037e2:	d1f7      	bne.n	4037d4 <_malloc_r+0x384>
  4037e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4037e8:	687b      	ldr	r3, [r7, #4]
  4037ea:	60e2      	str	r2, [r4, #12]
  4037ec:	f8c4 c008 	str.w	ip, [r4, #8]
  4037f0:	6094      	str	r4, [r2, #8]
  4037f2:	f8cc 400c 	str.w	r4, [ip, #12]
  4037f6:	e68f      	b.n	403518 <_malloc_r+0xc8>
  4037f8:	19a1      	adds	r1, r4, r6
  4037fa:	f046 0c01 	orr.w	ip, r6, #1
  4037fe:	f042 0601 	orr.w	r6, r2, #1
  403802:	f8c4 c004 	str.w	ip, [r4, #4]
  403806:	4628      	mov	r0, r5
  403808:	6179      	str	r1, [r7, #20]
  40380a:	6139      	str	r1, [r7, #16]
  40380c:	f8c1 e00c 	str.w	lr, [r1, #12]
  403810:	f8c1 e008 	str.w	lr, [r1, #8]
  403814:	604e      	str	r6, [r1, #4]
  403816:	50e2      	str	r2, [r4, r3]
  403818:	f000 fa1e 	bl	403c58 <__malloc_unlock>
  40381c:	3408      	adds	r4, #8
  40381e:	e6dd      	b.n	4035dc <_malloc_r+0x18c>
  403820:	687b      	ldr	r3, [r7, #4]
  403822:	e679      	b.n	403518 <_malloc_r+0xc8>
  403824:	f108 0801 	add.w	r8, r8, #1
  403828:	f018 0f03 	tst.w	r8, #3
  40382c:	f10c 0c08 	add.w	ip, ip, #8
  403830:	f47f ae85 	bne.w	40353e <_malloc_r+0xee>
  403834:	e02d      	b.n	403892 <_malloc_r+0x442>
  403836:	68dc      	ldr	r4, [r3, #12]
  403838:	42a3      	cmp	r3, r4
  40383a:	bf08      	it	eq
  40383c:	3002      	addeq	r0, #2
  40383e:	f43f ae3e 	beq.w	4034be <_malloc_r+0x6e>
  403842:	e6bb      	b.n	4035bc <_malloc_r+0x16c>
  403844:	4419      	add	r1, r3
  403846:	461c      	mov	r4, r3
  403848:	684a      	ldr	r2, [r1, #4]
  40384a:	68db      	ldr	r3, [r3, #12]
  40384c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  403850:	f042 0201 	orr.w	r2, r2, #1
  403854:	604a      	str	r2, [r1, #4]
  403856:	4628      	mov	r0, r5
  403858:	60f3      	str	r3, [r6, #12]
  40385a:	609e      	str	r6, [r3, #8]
  40385c:	f000 f9fc 	bl	403c58 <__malloc_unlock>
  403860:	e6bc      	b.n	4035dc <_malloc_r+0x18c>
  403862:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  403866:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40386a:	00c3      	lsls	r3, r0, #3
  40386c:	e612      	b.n	403494 <_malloc_r+0x44>
  40386e:	099a      	lsrs	r2, r3, #6
  403870:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403874:	00c9      	lsls	r1, r1, #3
  403876:	3238      	adds	r2, #56	; 0x38
  403878:	e7a4      	b.n	4037c4 <_malloc_r+0x374>
  40387a:	42bc      	cmp	r4, r7
  40387c:	d054      	beq.n	403928 <_malloc_r+0x4d8>
  40387e:	68bc      	ldr	r4, [r7, #8]
  403880:	6862      	ldr	r2, [r4, #4]
  403882:	f022 0203 	bic.w	r2, r2, #3
  403886:	e75d      	b.n	403744 <_malloc_r+0x2f4>
  403888:	f859 3908 	ldr.w	r3, [r9], #-8
  40388c:	4599      	cmp	r9, r3
  40388e:	f040 8086 	bne.w	40399e <_malloc_r+0x54e>
  403892:	f010 0f03 	tst.w	r0, #3
  403896:	f100 30ff 	add.w	r0, r0, #4294967295
  40389a:	d1f5      	bne.n	403888 <_malloc_r+0x438>
  40389c:	687b      	ldr	r3, [r7, #4]
  40389e:	ea23 0304 	bic.w	r3, r3, r4
  4038a2:	607b      	str	r3, [r7, #4]
  4038a4:	0064      	lsls	r4, r4, #1
  4038a6:	429c      	cmp	r4, r3
  4038a8:	f63f aec7 	bhi.w	40363a <_malloc_r+0x1ea>
  4038ac:	2c00      	cmp	r4, #0
  4038ae:	f43f aec4 	beq.w	40363a <_malloc_r+0x1ea>
  4038b2:	421c      	tst	r4, r3
  4038b4:	4640      	mov	r0, r8
  4038b6:	f47f ae3e 	bne.w	403536 <_malloc_r+0xe6>
  4038ba:	0064      	lsls	r4, r4, #1
  4038bc:	421c      	tst	r4, r3
  4038be:	f100 0004 	add.w	r0, r0, #4
  4038c2:	d0fa      	beq.n	4038ba <_malloc_r+0x46a>
  4038c4:	e637      	b.n	403536 <_malloc_r+0xe6>
  4038c6:	468c      	mov	ip, r1
  4038c8:	e78c      	b.n	4037e4 <_malloc_r+0x394>
  4038ca:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4038ce:	d815      	bhi.n	4038fc <_malloc_r+0x4ac>
  4038d0:	0bf3      	lsrs	r3, r6, #15
  4038d2:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4038d6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4038da:	00c3      	lsls	r3, r0, #3
  4038dc:	e5da      	b.n	403494 <_malloc_r+0x44>
  4038de:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4038e2:	e6ed      	b.n	4036c0 <_malloc_r+0x270>
  4038e4:	687b      	ldr	r3, [r7, #4]
  4038e6:	1092      	asrs	r2, r2, #2
  4038e8:	2101      	movs	r1, #1
  4038ea:	fa01 f202 	lsl.w	r2, r1, r2
  4038ee:	4313      	orrs	r3, r2
  4038f0:	607b      	str	r3, [r7, #4]
  4038f2:	4662      	mov	r2, ip
  4038f4:	e779      	b.n	4037ea <_malloc_r+0x39a>
  4038f6:	2301      	movs	r3, #1
  4038f8:	6053      	str	r3, [r2, #4]
  4038fa:	e729      	b.n	403750 <_malloc_r+0x300>
  4038fc:	f240 5254 	movw	r2, #1364	; 0x554
  403900:	4293      	cmp	r3, r2
  403902:	d822      	bhi.n	40394a <_malloc_r+0x4fa>
  403904:	0cb3      	lsrs	r3, r6, #18
  403906:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40390a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40390e:	00c3      	lsls	r3, r0, #3
  403910:	e5c0      	b.n	403494 <_malloc_r+0x44>
  403912:	f103 0b10 	add.w	fp, r3, #16
  403916:	e6ae      	b.n	403676 <_malloc_r+0x226>
  403918:	2a54      	cmp	r2, #84	; 0x54
  40391a:	d829      	bhi.n	403970 <_malloc_r+0x520>
  40391c:	0b1a      	lsrs	r2, r3, #12
  40391e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403922:	00c9      	lsls	r1, r1, #3
  403924:	326e      	adds	r2, #110	; 0x6e
  403926:	e74d      	b.n	4037c4 <_malloc_r+0x374>
  403928:	4b20      	ldr	r3, [pc, #128]	; (4039ac <_malloc_r+0x55c>)
  40392a:	6819      	ldr	r1, [r3, #0]
  40392c:	4459      	add	r1, fp
  40392e:	6019      	str	r1, [r3, #0]
  403930:	e6b2      	b.n	403698 <_malloc_r+0x248>
  403932:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403936:	2800      	cmp	r0, #0
  403938:	f47f aeae 	bne.w	403698 <_malloc_r+0x248>
  40393c:	eb08 030b 	add.w	r3, r8, fp
  403940:	68ba      	ldr	r2, [r7, #8]
  403942:	f043 0301 	orr.w	r3, r3, #1
  403946:	6053      	str	r3, [r2, #4]
  403948:	e6ee      	b.n	403728 <_malloc_r+0x2d8>
  40394a:	207f      	movs	r0, #127	; 0x7f
  40394c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  403950:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  403954:	e59e      	b.n	403494 <_malloc_r+0x44>
  403956:	f104 0108 	add.w	r1, r4, #8
  40395a:	4628      	mov	r0, r5
  40395c:	9300      	str	r3, [sp, #0]
  40395e:	f7ff fa67 	bl	402e30 <_free_r>
  403962:	9b00      	ldr	r3, [sp, #0]
  403964:	6819      	ldr	r1, [r3, #0]
  403966:	e6df      	b.n	403728 <_malloc_r+0x2d8>
  403968:	2001      	movs	r0, #1
  40396a:	f04f 0900 	mov.w	r9, #0
  40396e:	e6bc      	b.n	4036ea <_malloc_r+0x29a>
  403970:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403974:	d805      	bhi.n	403982 <_malloc_r+0x532>
  403976:	0bda      	lsrs	r2, r3, #15
  403978:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40397c:	00c9      	lsls	r1, r1, #3
  40397e:	3277      	adds	r2, #119	; 0x77
  403980:	e720      	b.n	4037c4 <_malloc_r+0x374>
  403982:	f240 5154 	movw	r1, #1364	; 0x554
  403986:	428a      	cmp	r2, r1
  403988:	d805      	bhi.n	403996 <_malloc_r+0x546>
  40398a:	0c9a      	lsrs	r2, r3, #18
  40398c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403990:	00c9      	lsls	r1, r1, #3
  403992:	327c      	adds	r2, #124	; 0x7c
  403994:	e716      	b.n	4037c4 <_malloc_r+0x374>
  403996:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40399a:	227e      	movs	r2, #126	; 0x7e
  40399c:	e712      	b.n	4037c4 <_malloc_r+0x374>
  40399e:	687b      	ldr	r3, [r7, #4]
  4039a0:	e780      	b.n	4038a4 <_malloc_r+0x454>
  4039a2:	08f0      	lsrs	r0, r6, #3
  4039a4:	f106 0308 	add.w	r3, r6, #8
  4039a8:	e600      	b.n	4035ac <_malloc_r+0x15c>
  4039aa:	bf00      	nop
  4039ac:	2000e918 	.word	0x2000e918

004039b0 <memchr>:
  4039b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4039b4:	2a10      	cmp	r2, #16
  4039b6:	db2b      	blt.n	403a10 <memchr+0x60>
  4039b8:	f010 0f07 	tst.w	r0, #7
  4039bc:	d008      	beq.n	4039d0 <memchr+0x20>
  4039be:	f810 3b01 	ldrb.w	r3, [r0], #1
  4039c2:	3a01      	subs	r2, #1
  4039c4:	428b      	cmp	r3, r1
  4039c6:	d02d      	beq.n	403a24 <memchr+0x74>
  4039c8:	f010 0f07 	tst.w	r0, #7
  4039cc:	b342      	cbz	r2, 403a20 <memchr+0x70>
  4039ce:	d1f6      	bne.n	4039be <memchr+0xe>
  4039d0:	b4f0      	push	{r4, r5, r6, r7}
  4039d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4039d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4039da:	f022 0407 	bic.w	r4, r2, #7
  4039de:	f07f 0700 	mvns.w	r7, #0
  4039e2:	2300      	movs	r3, #0
  4039e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4039e8:	3c08      	subs	r4, #8
  4039ea:	ea85 0501 	eor.w	r5, r5, r1
  4039ee:	ea86 0601 	eor.w	r6, r6, r1
  4039f2:	fa85 f547 	uadd8	r5, r5, r7
  4039f6:	faa3 f587 	sel	r5, r3, r7
  4039fa:	fa86 f647 	uadd8	r6, r6, r7
  4039fe:	faa5 f687 	sel	r6, r5, r7
  403a02:	b98e      	cbnz	r6, 403a28 <memchr+0x78>
  403a04:	d1ee      	bne.n	4039e4 <memchr+0x34>
  403a06:	bcf0      	pop	{r4, r5, r6, r7}
  403a08:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403a0c:	f002 0207 	and.w	r2, r2, #7
  403a10:	b132      	cbz	r2, 403a20 <memchr+0x70>
  403a12:	f810 3b01 	ldrb.w	r3, [r0], #1
  403a16:	3a01      	subs	r2, #1
  403a18:	ea83 0301 	eor.w	r3, r3, r1
  403a1c:	b113      	cbz	r3, 403a24 <memchr+0x74>
  403a1e:	d1f8      	bne.n	403a12 <memchr+0x62>
  403a20:	2000      	movs	r0, #0
  403a22:	4770      	bx	lr
  403a24:	3801      	subs	r0, #1
  403a26:	4770      	bx	lr
  403a28:	2d00      	cmp	r5, #0
  403a2a:	bf06      	itte	eq
  403a2c:	4635      	moveq	r5, r6
  403a2e:	3803      	subeq	r0, #3
  403a30:	3807      	subne	r0, #7
  403a32:	f015 0f01 	tst.w	r5, #1
  403a36:	d107      	bne.n	403a48 <memchr+0x98>
  403a38:	3001      	adds	r0, #1
  403a3a:	f415 7f80 	tst.w	r5, #256	; 0x100
  403a3e:	bf02      	ittt	eq
  403a40:	3001      	addeq	r0, #1
  403a42:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  403a46:	3001      	addeq	r0, #1
  403a48:	bcf0      	pop	{r4, r5, r6, r7}
  403a4a:	3801      	subs	r0, #1
  403a4c:	4770      	bx	lr
  403a4e:	bf00      	nop

00403a50 <memcpy>:
  403a50:	4684      	mov	ip, r0
  403a52:	ea41 0300 	orr.w	r3, r1, r0
  403a56:	f013 0303 	ands.w	r3, r3, #3
  403a5a:	d16d      	bne.n	403b38 <memcpy+0xe8>
  403a5c:	3a40      	subs	r2, #64	; 0x40
  403a5e:	d341      	bcc.n	403ae4 <memcpy+0x94>
  403a60:	f851 3b04 	ldr.w	r3, [r1], #4
  403a64:	f840 3b04 	str.w	r3, [r0], #4
  403a68:	f851 3b04 	ldr.w	r3, [r1], #4
  403a6c:	f840 3b04 	str.w	r3, [r0], #4
  403a70:	f851 3b04 	ldr.w	r3, [r1], #4
  403a74:	f840 3b04 	str.w	r3, [r0], #4
  403a78:	f851 3b04 	ldr.w	r3, [r1], #4
  403a7c:	f840 3b04 	str.w	r3, [r0], #4
  403a80:	f851 3b04 	ldr.w	r3, [r1], #4
  403a84:	f840 3b04 	str.w	r3, [r0], #4
  403a88:	f851 3b04 	ldr.w	r3, [r1], #4
  403a8c:	f840 3b04 	str.w	r3, [r0], #4
  403a90:	f851 3b04 	ldr.w	r3, [r1], #4
  403a94:	f840 3b04 	str.w	r3, [r0], #4
  403a98:	f851 3b04 	ldr.w	r3, [r1], #4
  403a9c:	f840 3b04 	str.w	r3, [r0], #4
  403aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  403aa4:	f840 3b04 	str.w	r3, [r0], #4
  403aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  403aac:	f840 3b04 	str.w	r3, [r0], #4
  403ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ab4:	f840 3b04 	str.w	r3, [r0], #4
  403ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  403abc:	f840 3b04 	str.w	r3, [r0], #4
  403ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ac4:	f840 3b04 	str.w	r3, [r0], #4
  403ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  403acc:	f840 3b04 	str.w	r3, [r0], #4
  403ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ad4:	f840 3b04 	str.w	r3, [r0], #4
  403ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  403adc:	f840 3b04 	str.w	r3, [r0], #4
  403ae0:	3a40      	subs	r2, #64	; 0x40
  403ae2:	d2bd      	bcs.n	403a60 <memcpy+0x10>
  403ae4:	3230      	adds	r2, #48	; 0x30
  403ae6:	d311      	bcc.n	403b0c <memcpy+0xbc>
  403ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  403aec:	f840 3b04 	str.w	r3, [r0], #4
  403af0:	f851 3b04 	ldr.w	r3, [r1], #4
  403af4:	f840 3b04 	str.w	r3, [r0], #4
  403af8:	f851 3b04 	ldr.w	r3, [r1], #4
  403afc:	f840 3b04 	str.w	r3, [r0], #4
  403b00:	f851 3b04 	ldr.w	r3, [r1], #4
  403b04:	f840 3b04 	str.w	r3, [r0], #4
  403b08:	3a10      	subs	r2, #16
  403b0a:	d2ed      	bcs.n	403ae8 <memcpy+0x98>
  403b0c:	320c      	adds	r2, #12
  403b0e:	d305      	bcc.n	403b1c <memcpy+0xcc>
  403b10:	f851 3b04 	ldr.w	r3, [r1], #4
  403b14:	f840 3b04 	str.w	r3, [r0], #4
  403b18:	3a04      	subs	r2, #4
  403b1a:	d2f9      	bcs.n	403b10 <memcpy+0xc0>
  403b1c:	3204      	adds	r2, #4
  403b1e:	d008      	beq.n	403b32 <memcpy+0xe2>
  403b20:	07d2      	lsls	r2, r2, #31
  403b22:	bf1c      	itt	ne
  403b24:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403b28:	f800 3b01 	strbne.w	r3, [r0], #1
  403b2c:	d301      	bcc.n	403b32 <memcpy+0xe2>
  403b2e:	880b      	ldrh	r3, [r1, #0]
  403b30:	8003      	strh	r3, [r0, #0]
  403b32:	4660      	mov	r0, ip
  403b34:	4770      	bx	lr
  403b36:	bf00      	nop
  403b38:	2a08      	cmp	r2, #8
  403b3a:	d313      	bcc.n	403b64 <memcpy+0x114>
  403b3c:	078b      	lsls	r3, r1, #30
  403b3e:	d08d      	beq.n	403a5c <memcpy+0xc>
  403b40:	f010 0303 	ands.w	r3, r0, #3
  403b44:	d08a      	beq.n	403a5c <memcpy+0xc>
  403b46:	f1c3 0304 	rsb	r3, r3, #4
  403b4a:	1ad2      	subs	r2, r2, r3
  403b4c:	07db      	lsls	r3, r3, #31
  403b4e:	bf1c      	itt	ne
  403b50:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403b54:	f800 3b01 	strbne.w	r3, [r0], #1
  403b58:	d380      	bcc.n	403a5c <memcpy+0xc>
  403b5a:	f831 3b02 	ldrh.w	r3, [r1], #2
  403b5e:	f820 3b02 	strh.w	r3, [r0], #2
  403b62:	e77b      	b.n	403a5c <memcpy+0xc>
  403b64:	3a04      	subs	r2, #4
  403b66:	d3d9      	bcc.n	403b1c <memcpy+0xcc>
  403b68:	3a01      	subs	r2, #1
  403b6a:	f811 3b01 	ldrb.w	r3, [r1], #1
  403b6e:	f800 3b01 	strb.w	r3, [r0], #1
  403b72:	d2f9      	bcs.n	403b68 <memcpy+0x118>
  403b74:	780b      	ldrb	r3, [r1, #0]
  403b76:	7003      	strb	r3, [r0, #0]
  403b78:	784b      	ldrb	r3, [r1, #1]
  403b7a:	7043      	strb	r3, [r0, #1]
  403b7c:	788b      	ldrb	r3, [r1, #2]
  403b7e:	7083      	strb	r3, [r0, #2]
  403b80:	4660      	mov	r0, ip
  403b82:	4770      	bx	lr

00403b84 <memmove>:
  403b84:	4288      	cmp	r0, r1
  403b86:	b5f0      	push	{r4, r5, r6, r7, lr}
  403b88:	d90d      	bls.n	403ba6 <memmove+0x22>
  403b8a:	188b      	adds	r3, r1, r2
  403b8c:	4298      	cmp	r0, r3
  403b8e:	d20a      	bcs.n	403ba6 <memmove+0x22>
  403b90:	1884      	adds	r4, r0, r2
  403b92:	2a00      	cmp	r2, #0
  403b94:	d051      	beq.n	403c3a <memmove+0xb6>
  403b96:	4622      	mov	r2, r4
  403b98:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403b9c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403ba0:	4299      	cmp	r1, r3
  403ba2:	d1f9      	bne.n	403b98 <memmove+0x14>
  403ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403ba6:	2a0f      	cmp	r2, #15
  403ba8:	d948      	bls.n	403c3c <memmove+0xb8>
  403baa:	ea41 0300 	orr.w	r3, r1, r0
  403bae:	079b      	lsls	r3, r3, #30
  403bb0:	d146      	bne.n	403c40 <memmove+0xbc>
  403bb2:	f100 0410 	add.w	r4, r0, #16
  403bb6:	f101 0310 	add.w	r3, r1, #16
  403bba:	4615      	mov	r5, r2
  403bbc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403bc0:	f844 6c10 	str.w	r6, [r4, #-16]
  403bc4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403bc8:	f844 6c0c 	str.w	r6, [r4, #-12]
  403bcc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403bd0:	f844 6c08 	str.w	r6, [r4, #-8]
  403bd4:	3d10      	subs	r5, #16
  403bd6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  403bda:	f844 6c04 	str.w	r6, [r4, #-4]
  403bde:	2d0f      	cmp	r5, #15
  403be0:	f103 0310 	add.w	r3, r3, #16
  403be4:	f104 0410 	add.w	r4, r4, #16
  403be8:	d8e8      	bhi.n	403bbc <memmove+0x38>
  403bea:	f1a2 0310 	sub.w	r3, r2, #16
  403bee:	f023 030f 	bic.w	r3, r3, #15
  403bf2:	f002 0e0f 	and.w	lr, r2, #15
  403bf6:	3310      	adds	r3, #16
  403bf8:	f1be 0f03 	cmp.w	lr, #3
  403bfc:	4419      	add	r1, r3
  403bfe:	4403      	add	r3, r0
  403c00:	d921      	bls.n	403c46 <memmove+0xc2>
  403c02:	1f1e      	subs	r6, r3, #4
  403c04:	460d      	mov	r5, r1
  403c06:	4674      	mov	r4, lr
  403c08:	3c04      	subs	r4, #4
  403c0a:	f855 7b04 	ldr.w	r7, [r5], #4
  403c0e:	f846 7f04 	str.w	r7, [r6, #4]!
  403c12:	2c03      	cmp	r4, #3
  403c14:	d8f8      	bhi.n	403c08 <memmove+0x84>
  403c16:	f1ae 0404 	sub.w	r4, lr, #4
  403c1a:	f024 0403 	bic.w	r4, r4, #3
  403c1e:	3404      	adds	r4, #4
  403c20:	4421      	add	r1, r4
  403c22:	4423      	add	r3, r4
  403c24:	f002 0203 	and.w	r2, r2, #3
  403c28:	b162      	cbz	r2, 403c44 <memmove+0xc0>
  403c2a:	3b01      	subs	r3, #1
  403c2c:	440a      	add	r2, r1
  403c2e:	f811 4b01 	ldrb.w	r4, [r1], #1
  403c32:	f803 4f01 	strb.w	r4, [r3, #1]!
  403c36:	428a      	cmp	r2, r1
  403c38:	d1f9      	bne.n	403c2e <memmove+0xaa>
  403c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403c3c:	4603      	mov	r3, r0
  403c3e:	e7f3      	b.n	403c28 <memmove+0xa4>
  403c40:	4603      	mov	r3, r0
  403c42:	e7f2      	b.n	403c2a <memmove+0xa6>
  403c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403c46:	4672      	mov	r2, lr
  403c48:	e7ee      	b.n	403c28 <memmove+0xa4>
  403c4a:	bf00      	nop

00403c4c <__malloc_lock>:
  403c4c:	4801      	ldr	r0, [pc, #4]	; (403c54 <__malloc_lock+0x8>)
  403c4e:	f7ff bb7b 	b.w	403348 <__retarget_lock_acquire_recursive>
  403c52:	bf00      	nop
  403c54:	2000e968 	.word	0x2000e968

00403c58 <__malloc_unlock>:
  403c58:	4801      	ldr	r0, [pc, #4]	; (403c60 <__malloc_unlock+0x8>)
  403c5a:	f7ff bb77 	b.w	40334c <__retarget_lock_release_recursive>
  403c5e:	bf00      	nop
  403c60:	2000e968 	.word	0x2000e968

00403c64 <_realloc_r>:
  403c64:	2900      	cmp	r1, #0
  403c66:	f000 8095 	beq.w	403d94 <_realloc_r+0x130>
  403c6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c6e:	460d      	mov	r5, r1
  403c70:	4616      	mov	r6, r2
  403c72:	b083      	sub	sp, #12
  403c74:	4680      	mov	r8, r0
  403c76:	f106 070b 	add.w	r7, r6, #11
  403c7a:	f7ff ffe7 	bl	403c4c <__malloc_lock>
  403c7e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  403c82:	2f16      	cmp	r7, #22
  403c84:	f02e 0403 	bic.w	r4, lr, #3
  403c88:	f1a5 0908 	sub.w	r9, r5, #8
  403c8c:	d83c      	bhi.n	403d08 <_realloc_r+0xa4>
  403c8e:	2210      	movs	r2, #16
  403c90:	4617      	mov	r7, r2
  403c92:	42be      	cmp	r6, r7
  403c94:	d83d      	bhi.n	403d12 <_realloc_r+0xae>
  403c96:	4294      	cmp	r4, r2
  403c98:	da43      	bge.n	403d22 <_realloc_r+0xbe>
  403c9a:	4bc4      	ldr	r3, [pc, #784]	; (403fac <_realloc_r+0x348>)
  403c9c:	6899      	ldr	r1, [r3, #8]
  403c9e:	eb09 0004 	add.w	r0, r9, r4
  403ca2:	4288      	cmp	r0, r1
  403ca4:	f000 80b4 	beq.w	403e10 <_realloc_r+0x1ac>
  403ca8:	6843      	ldr	r3, [r0, #4]
  403caa:	f023 0101 	bic.w	r1, r3, #1
  403cae:	4401      	add	r1, r0
  403cb0:	6849      	ldr	r1, [r1, #4]
  403cb2:	07c9      	lsls	r1, r1, #31
  403cb4:	d54c      	bpl.n	403d50 <_realloc_r+0xec>
  403cb6:	f01e 0f01 	tst.w	lr, #1
  403cba:	f000 809b 	beq.w	403df4 <_realloc_r+0x190>
  403cbe:	4631      	mov	r1, r6
  403cc0:	4640      	mov	r0, r8
  403cc2:	f7ff fbc5 	bl	403450 <_malloc_r>
  403cc6:	4606      	mov	r6, r0
  403cc8:	2800      	cmp	r0, #0
  403cca:	d03a      	beq.n	403d42 <_realloc_r+0xde>
  403ccc:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403cd0:	f023 0301 	bic.w	r3, r3, #1
  403cd4:	444b      	add	r3, r9
  403cd6:	f1a0 0208 	sub.w	r2, r0, #8
  403cda:	429a      	cmp	r2, r3
  403cdc:	f000 8121 	beq.w	403f22 <_realloc_r+0x2be>
  403ce0:	1f22      	subs	r2, r4, #4
  403ce2:	2a24      	cmp	r2, #36	; 0x24
  403ce4:	f200 8107 	bhi.w	403ef6 <_realloc_r+0x292>
  403ce8:	2a13      	cmp	r2, #19
  403cea:	f200 80db 	bhi.w	403ea4 <_realloc_r+0x240>
  403cee:	4603      	mov	r3, r0
  403cf0:	462a      	mov	r2, r5
  403cf2:	6811      	ldr	r1, [r2, #0]
  403cf4:	6019      	str	r1, [r3, #0]
  403cf6:	6851      	ldr	r1, [r2, #4]
  403cf8:	6059      	str	r1, [r3, #4]
  403cfa:	6892      	ldr	r2, [r2, #8]
  403cfc:	609a      	str	r2, [r3, #8]
  403cfe:	4629      	mov	r1, r5
  403d00:	4640      	mov	r0, r8
  403d02:	f7ff f895 	bl	402e30 <_free_r>
  403d06:	e01c      	b.n	403d42 <_realloc_r+0xde>
  403d08:	f027 0707 	bic.w	r7, r7, #7
  403d0c:	2f00      	cmp	r7, #0
  403d0e:	463a      	mov	r2, r7
  403d10:	dabf      	bge.n	403c92 <_realloc_r+0x2e>
  403d12:	2600      	movs	r6, #0
  403d14:	230c      	movs	r3, #12
  403d16:	4630      	mov	r0, r6
  403d18:	f8c8 3000 	str.w	r3, [r8]
  403d1c:	b003      	add	sp, #12
  403d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d22:	462e      	mov	r6, r5
  403d24:	1be3      	subs	r3, r4, r7
  403d26:	2b0f      	cmp	r3, #15
  403d28:	d81e      	bhi.n	403d68 <_realloc_r+0x104>
  403d2a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  403d2e:	f003 0301 	and.w	r3, r3, #1
  403d32:	4323      	orrs	r3, r4
  403d34:	444c      	add	r4, r9
  403d36:	f8c9 3004 	str.w	r3, [r9, #4]
  403d3a:	6863      	ldr	r3, [r4, #4]
  403d3c:	f043 0301 	orr.w	r3, r3, #1
  403d40:	6063      	str	r3, [r4, #4]
  403d42:	4640      	mov	r0, r8
  403d44:	f7ff ff88 	bl	403c58 <__malloc_unlock>
  403d48:	4630      	mov	r0, r6
  403d4a:	b003      	add	sp, #12
  403d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d50:	f023 0303 	bic.w	r3, r3, #3
  403d54:	18e1      	adds	r1, r4, r3
  403d56:	4291      	cmp	r1, r2
  403d58:	db1f      	blt.n	403d9a <_realloc_r+0x136>
  403d5a:	68c3      	ldr	r3, [r0, #12]
  403d5c:	6882      	ldr	r2, [r0, #8]
  403d5e:	462e      	mov	r6, r5
  403d60:	60d3      	str	r3, [r2, #12]
  403d62:	460c      	mov	r4, r1
  403d64:	609a      	str	r2, [r3, #8]
  403d66:	e7dd      	b.n	403d24 <_realloc_r+0xc0>
  403d68:	f8d9 2004 	ldr.w	r2, [r9, #4]
  403d6c:	eb09 0107 	add.w	r1, r9, r7
  403d70:	f002 0201 	and.w	r2, r2, #1
  403d74:	444c      	add	r4, r9
  403d76:	f043 0301 	orr.w	r3, r3, #1
  403d7a:	4317      	orrs	r7, r2
  403d7c:	f8c9 7004 	str.w	r7, [r9, #4]
  403d80:	604b      	str	r3, [r1, #4]
  403d82:	6863      	ldr	r3, [r4, #4]
  403d84:	f043 0301 	orr.w	r3, r3, #1
  403d88:	3108      	adds	r1, #8
  403d8a:	6063      	str	r3, [r4, #4]
  403d8c:	4640      	mov	r0, r8
  403d8e:	f7ff f84f 	bl	402e30 <_free_r>
  403d92:	e7d6      	b.n	403d42 <_realloc_r+0xde>
  403d94:	4611      	mov	r1, r2
  403d96:	f7ff bb5b 	b.w	403450 <_malloc_r>
  403d9a:	f01e 0f01 	tst.w	lr, #1
  403d9e:	d18e      	bne.n	403cbe <_realloc_r+0x5a>
  403da0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403da4:	eba9 0a01 	sub.w	sl, r9, r1
  403da8:	f8da 1004 	ldr.w	r1, [sl, #4]
  403dac:	f021 0103 	bic.w	r1, r1, #3
  403db0:	440b      	add	r3, r1
  403db2:	4423      	add	r3, r4
  403db4:	4293      	cmp	r3, r2
  403db6:	db25      	blt.n	403e04 <_realloc_r+0x1a0>
  403db8:	68c2      	ldr	r2, [r0, #12]
  403dba:	6881      	ldr	r1, [r0, #8]
  403dbc:	4656      	mov	r6, sl
  403dbe:	60ca      	str	r2, [r1, #12]
  403dc0:	6091      	str	r1, [r2, #8]
  403dc2:	f8da 100c 	ldr.w	r1, [sl, #12]
  403dc6:	f856 0f08 	ldr.w	r0, [r6, #8]!
  403dca:	1f22      	subs	r2, r4, #4
  403dcc:	2a24      	cmp	r2, #36	; 0x24
  403dce:	60c1      	str	r1, [r0, #12]
  403dd0:	6088      	str	r0, [r1, #8]
  403dd2:	f200 8094 	bhi.w	403efe <_realloc_r+0x29a>
  403dd6:	2a13      	cmp	r2, #19
  403dd8:	d96f      	bls.n	403eba <_realloc_r+0x256>
  403dda:	6829      	ldr	r1, [r5, #0]
  403ddc:	f8ca 1008 	str.w	r1, [sl, #8]
  403de0:	6869      	ldr	r1, [r5, #4]
  403de2:	f8ca 100c 	str.w	r1, [sl, #12]
  403de6:	2a1b      	cmp	r2, #27
  403de8:	f200 80a2 	bhi.w	403f30 <_realloc_r+0x2cc>
  403dec:	3508      	adds	r5, #8
  403dee:	f10a 0210 	add.w	r2, sl, #16
  403df2:	e063      	b.n	403ebc <_realloc_r+0x258>
  403df4:	f855 3c08 	ldr.w	r3, [r5, #-8]
  403df8:	eba9 0a03 	sub.w	sl, r9, r3
  403dfc:	f8da 1004 	ldr.w	r1, [sl, #4]
  403e00:	f021 0103 	bic.w	r1, r1, #3
  403e04:	1863      	adds	r3, r4, r1
  403e06:	4293      	cmp	r3, r2
  403e08:	f6ff af59 	blt.w	403cbe <_realloc_r+0x5a>
  403e0c:	4656      	mov	r6, sl
  403e0e:	e7d8      	b.n	403dc2 <_realloc_r+0x15e>
  403e10:	6841      	ldr	r1, [r0, #4]
  403e12:	f021 0b03 	bic.w	fp, r1, #3
  403e16:	44a3      	add	fp, r4
  403e18:	f107 0010 	add.w	r0, r7, #16
  403e1c:	4583      	cmp	fp, r0
  403e1e:	da56      	bge.n	403ece <_realloc_r+0x26a>
  403e20:	f01e 0f01 	tst.w	lr, #1
  403e24:	f47f af4b 	bne.w	403cbe <_realloc_r+0x5a>
  403e28:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403e2c:	eba9 0a01 	sub.w	sl, r9, r1
  403e30:	f8da 1004 	ldr.w	r1, [sl, #4]
  403e34:	f021 0103 	bic.w	r1, r1, #3
  403e38:	448b      	add	fp, r1
  403e3a:	4558      	cmp	r0, fp
  403e3c:	dce2      	bgt.n	403e04 <_realloc_r+0x1a0>
  403e3e:	4656      	mov	r6, sl
  403e40:	f8da 100c 	ldr.w	r1, [sl, #12]
  403e44:	f856 0f08 	ldr.w	r0, [r6, #8]!
  403e48:	1f22      	subs	r2, r4, #4
  403e4a:	2a24      	cmp	r2, #36	; 0x24
  403e4c:	60c1      	str	r1, [r0, #12]
  403e4e:	6088      	str	r0, [r1, #8]
  403e50:	f200 808f 	bhi.w	403f72 <_realloc_r+0x30e>
  403e54:	2a13      	cmp	r2, #19
  403e56:	f240 808a 	bls.w	403f6e <_realloc_r+0x30a>
  403e5a:	6829      	ldr	r1, [r5, #0]
  403e5c:	f8ca 1008 	str.w	r1, [sl, #8]
  403e60:	6869      	ldr	r1, [r5, #4]
  403e62:	f8ca 100c 	str.w	r1, [sl, #12]
  403e66:	2a1b      	cmp	r2, #27
  403e68:	f200 808a 	bhi.w	403f80 <_realloc_r+0x31c>
  403e6c:	3508      	adds	r5, #8
  403e6e:	f10a 0210 	add.w	r2, sl, #16
  403e72:	6829      	ldr	r1, [r5, #0]
  403e74:	6011      	str	r1, [r2, #0]
  403e76:	6869      	ldr	r1, [r5, #4]
  403e78:	6051      	str	r1, [r2, #4]
  403e7a:	68a9      	ldr	r1, [r5, #8]
  403e7c:	6091      	str	r1, [r2, #8]
  403e7e:	eb0a 0107 	add.w	r1, sl, r7
  403e82:	ebab 0207 	sub.w	r2, fp, r7
  403e86:	f042 0201 	orr.w	r2, r2, #1
  403e8a:	6099      	str	r1, [r3, #8]
  403e8c:	604a      	str	r2, [r1, #4]
  403e8e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403e92:	f003 0301 	and.w	r3, r3, #1
  403e96:	431f      	orrs	r7, r3
  403e98:	4640      	mov	r0, r8
  403e9a:	f8ca 7004 	str.w	r7, [sl, #4]
  403e9e:	f7ff fedb 	bl	403c58 <__malloc_unlock>
  403ea2:	e751      	b.n	403d48 <_realloc_r+0xe4>
  403ea4:	682b      	ldr	r3, [r5, #0]
  403ea6:	6003      	str	r3, [r0, #0]
  403ea8:	686b      	ldr	r3, [r5, #4]
  403eaa:	6043      	str	r3, [r0, #4]
  403eac:	2a1b      	cmp	r2, #27
  403eae:	d82d      	bhi.n	403f0c <_realloc_r+0x2a8>
  403eb0:	f100 0308 	add.w	r3, r0, #8
  403eb4:	f105 0208 	add.w	r2, r5, #8
  403eb8:	e71b      	b.n	403cf2 <_realloc_r+0x8e>
  403eba:	4632      	mov	r2, r6
  403ebc:	6829      	ldr	r1, [r5, #0]
  403ebe:	6011      	str	r1, [r2, #0]
  403ec0:	6869      	ldr	r1, [r5, #4]
  403ec2:	6051      	str	r1, [r2, #4]
  403ec4:	68a9      	ldr	r1, [r5, #8]
  403ec6:	6091      	str	r1, [r2, #8]
  403ec8:	461c      	mov	r4, r3
  403eca:	46d1      	mov	r9, sl
  403ecc:	e72a      	b.n	403d24 <_realloc_r+0xc0>
  403ece:	eb09 0107 	add.w	r1, r9, r7
  403ed2:	ebab 0b07 	sub.w	fp, fp, r7
  403ed6:	f04b 0201 	orr.w	r2, fp, #1
  403eda:	6099      	str	r1, [r3, #8]
  403edc:	604a      	str	r2, [r1, #4]
  403ede:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403ee2:	f003 0301 	and.w	r3, r3, #1
  403ee6:	431f      	orrs	r7, r3
  403ee8:	4640      	mov	r0, r8
  403eea:	f845 7c04 	str.w	r7, [r5, #-4]
  403eee:	f7ff feb3 	bl	403c58 <__malloc_unlock>
  403ef2:	462e      	mov	r6, r5
  403ef4:	e728      	b.n	403d48 <_realloc_r+0xe4>
  403ef6:	4629      	mov	r1, r5
  403ef8:	f7ff fe44 	bl	403b84 <memmove>
  403efc:	e6ff      	b.n	403cfe <_realloc_r+0x9a>
  403efe:	4629      	mov	r1, r5
  403f00:	4630      	mov	r0, r6
  403f02:	461c      	mov	r4, r3
  403f04:	46d1      	mov	r9, sl
  403f06:	f7ff fe3d 	bl	403b84 <memmove>
  403f0a:	e70b      	b.n	403d24 <_realloc_r+0xc0>
  403f0c:	68ab      	ldr	r3, [r5, #8]
  403f0e:	6083      	str	r3, [r0, #8]
  403f10:	68eb      	ldr	r3, [r5, #12]
  403f12:	60c3      	str	r3, [r0, #12]
  403f14:	2a24      	cmp	r2, #36	; 0x24
  403f16:	d017      	beq.n	403f48 <_realloc_r+0x2e4>
  403f18:	f100 0310 	add.w	r3, r0, #16
  403f1c:	f105 0210 	add.w	r2, r5, #16
  403f20:	e6e7      	b.n	403cf2 <_realloc_r+0x8e>
  403f22:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403f26:	f023 0303 	bic.w	r3, r3, #3
  403f2a:	441c      	add	r4, r3
  403f2c:	462e      	mov	r6, r5
  403f2e:	e6f9      	b.n	403d24 <_realloc_r+0xc0>
  403f30:	68a9      	ldr	r1, [r5, #8]
  403f32:	f8ca 1010 	str.w	r1, [sl, #16]
  403f36:	68e9      	ldr	r1, [r5, #12]
  403f38:	f8ca 1014 	str.w	r1, [sl, #20]
  403f3c:	2a24      	cmp	r2, #36	; 0x24
  403f3e:	d00c      	beq.n	403f5a <_realloc_r+0x2f6>
  403f40:	3510      	adds	r5, #16
  403f42:	f10a 0218 	add.w	r2, sl, #24
  403f46:	e7b9      	b.n	403ebc <_realloc_r+0x258>
  403f48:	692b      	ldr	r3, [r5, #16]
  403f4a:	6103      	str	r3, [r0, #16]
  403f4c:	696b      	ldr	r3, [r5, #20]
  403f4e:	6143      	str	r3, [r0, #20]
  403f50:	f105 0218 	add.w	r2, r5, #24
  403f54:	f100 0318 	add.w	r3, r0, #24
  403f58:	e6cb      	b.n	403cf2 <_realloc_r+0x8e>
  403f5a:	692a      	ldr	r2, [r5, #16]
  403f5c:	f8ca 2018 	str.w	r2, [sl, #24]
  403f60:	696a      	ldr	r2, [r5, #20]
  403f62:	f8ca 201c 	str.w	r2, [sl, #28]
  403f66:	3518      	adds	r5, #24
  403f68:	f10a 0220 	add.w	r2, sl, #32
  403f6c:	e7a6      	b.n	403ebc <_realloc_r+0x258>
  403f6e:	4632      	mov	r2, r6
  403f70:	e77f      	b.n	403e72 <_realloc_r+0x20e>
  403f72:	4629      	mov	r1, r5
  403f74:	4630      	mov	r0, r6
  403f76:	9301      	str	r3, [sp, #4]
  403f78:	f7ff fe04 	bl	403b84 <memmove>
  403f7c:	9b01      	ldr	r3, [sp, #4]
  403f7e:	e77e      	b.n	403e7e <_realloc_r+0x21a>
  403f80:	68a9      	ldr	r1, [r5, #8]
  403f82:	f8ca 1010 	str.w	r1, [sl, #16]
  403f86:	68e9      	ldr	r1, [r5, #12]
  403f88:	f8ca 1014 	str.w	r1, [sl, #20]
  403f8c:	2a24      	cmp	r2, #36	; 0x24
  403f8e:	d003      	beq.n	403f98 <_realloc_r+0x334>
  403f90:	3510      	adds	r5, #16
  403f92:	f10a 0218 	add.w	r2, sl, #24
  403f96:	e76c      	b.n	403e72 <_realloc_r+0x20e>
  403f98:	692a      	ldr	r2, [r5, #16]
  403f9a:	f8ca 2018 	str.w	r2, [sl, #24]
  403f9e:	696a      	ldr	r2, [r5, #20]
  403fa0:	f8ca 201c 	str.w	r2, [sl, #28]
  403fa4:	3518      	adds	r5, #24
  403fa6:	f10a 0220 	add.w	r2, sl, #32
  403faa:	e762      	b.n	403e72 <_realloc_r+0x20e>
  403fac:	200004a4 	.word	0x200004a4

00403fb0 <_sbrk_r>:
  403fb0:	b538      	push	{r3, r4, r5, lr}
  403fb2:	4c07      	ldr	r4, [pc, #28]	; (403fd0 <_sbrk_r+0x20>)
  403fb4:	2300      	movs	r3, #0
  403fb6:	4605      	mov	r5, r0
  403fb8:	4608      	mov	r0, r1
  403fba:	6023      	str	r3, [r4, #0]
  403fbc:	f7fc fecc 	bl	400d58 <_sbrk>
  403fc0:	1c43      	adds	r3, r0, #1
  403fc2:	d000      	beq.n	403fc6 <_sbrk_r+0x16>
  403fc4:	bd38      	pop	{r3, r4, r5, pc}
  403fc6:	6823      	ldr	r3, [r4, #0]
  403fc8:	2b00      	cmp	r3, #0
  403fca:	d0fb      	beq.n	403fc4 <_sbrk_r+0x14>
  403fcc:	602b      	str	r3, [r5, #0]
  403fce:	bd38      	pop	{r3, r4, r5, pc}
  403fd0:	2000e97c 	.word	0x2000e97c

00403fd4 <__sread>:
  403fd4:	b510      	push	{r4, lr}
  403fd6:	460c      	mov	r4, r1
  403fd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403fdc:	f000 f9ca 	bl	404374 <_read_r>
  403fe0:	2800      	cmp	r0, #0
  403fe2:	db03      	blt.n	403fec <__sread+0x18>
  403fe4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403fe6:	4403      	add	r3, r0
  403fe8:	6523      	str	r3, [r4, #80]	; 0x50
  403fea:	bd10      	pop	{r4, pc}
  403fec:	89a3      	ldrh	r3, [r4, #12]
  403fee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403ff2:	81a3      	strh	r3, [r4, #12]
  403ff4:	bd10      	pop	{r4, pc}
  403ff6:	bf00      	nop

00403ff8 <__swrite>:
  403ff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403ffc:	4616      	mov	r6, r2
  403ffe:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  404002:	461f      	mov	r7, r3
  404004:	05d3      	lsls	r3, r2, #23
  404006:	460c      	mov	r4, r1
  404008:	4605      	mov	r5, r0
  40400a:	d507      	bpl.n	40401c <__swrite+0x24>
  40400c:	2200      	movs	r2, #0
  40400e:	2302      	movs	r3, #2
  404010:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404014:	f000 f998 	bl	404348 <_lseek_r>
  404018:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40401c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404020:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404024:	81a2      	strh	r2, [r4, #12]
  404026:	463b      	mov	r3, r7
  404028:	4632      	mov	r2, r6
  40402a:	4628      	mov	r0, r5
  40402c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404030:	f000 b814 	b.w	40405c <_write_r>

00404034 <__sseek>:
  404034:	b510      	push	{r4, lr}
  404036:	460c      	mov	r4, r1
  404038:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40403c:	f000 f984 	bl	404348 <_lseek_r>
  404040:	89a3      	ldrh	r3, [r4, #12]
  404042:	1c42      	adds	r2, r0, #1
  404044:	bf0e      	itee	eq
  404046:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40404a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40404e:	6520      	strne	r0, [r4, #80]	; 0x50
  404050:	81a3      	strh	r3, [r4, #12]
  404052:	bd10      	pop	{r4, pc}

00404054 <__sclose>:
  404054:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404058:	f000 b8dc 	b.w	404214 <_close_r>

0040405c <_write_r>:
  40405c:	b570      	push	{r4, r5, r6, lr}
  40405e:	460d      	mov	r5, r1
  404060:	4c08      	ldr	r4, [pc, #32]	; (404084 <_write_r+0x28>)
  404062:	4611      	mov	r1, r2
  404064:	4606      	mov	r6, r0
  404066:	461a      	mov	r2, r3
  404068:	4628      	mov	r0, r5
  40406a:	2300      	movs	r3, #0
  40406c:	6023      	str	r3, [r4, #0]
  40406e:	f7fc fe9b 	bl	400da8 <_write>
  404072:	1c43      	adds	r3, r0, #1
  404074:	d000      	beq.n	404078 <_write_r+0x1c>
  404076:	bd70      	pop	{r4, r5, r6, pc}
  404078:	6823      	ldr	r3, [r4, #0]
  40407a:	2b00      	cmp	r3, #0
  40407c:	d0fb      	beq.n	404076 <_write_r+0x1a>
  40407e:	6033      	str	r3, [r6, #0]
  404080:	bd70      	pop	{r4, r5, r6, pc}
  404082:	bf00      	nop
  404084:	2000e97c 	.word	0x2000e97c

00404088 <__swsetup_r>:
  404088:	b538      	push	{r3, r4, r5, lr}
  40408a:	4b30      	ldr	r3, [pc, #192]	; (40414c <__swsetup_r+0xc4>)
  40408c:	681b      	ldr	r3, [r3, #0]
  40408e:	4605      	mov	r5, r0
  404090:	460c      	mov	r4, r1
  404092:	b113      	cbz	r3, 40409a <__swsetup_r+0x12>
  404094:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  404096:	2a00      	cmp	r2, #0
  404098:	d038      	beq.n	40410c <__swsetup_r+0x84>
  40409a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40409e:	b293      	uxth	r3, r2
  4040a0:	0718      	lsls	r0, r3, #28
  4040a2:	d50c      	bpl.n	4040be <__swsetup_r+0x36>
  4040a4:	6920      	ldr	r0, [r4, #16]
  4040a6:	b1a8      	cbz	r0, 4040d4 <__swsetup_r+0x4c>
  4040a8:	f013 0201 	ands.w	r2, r3, #1
  4040ac:	d01e      	beq.n	4040ec <__swsetup_r+0x64>
  4040ae:	6963      	ldr	r3, [r4, #20]
  4040b0:	2200      	movs	r2, #0
  4040b2:	425b      	negs	r3, r3
  4040b4:	61a3      	str	r3, [r4, #24]
  4040b6:	60a2      	str	r2, [r4, #8]
  4040b8:	b1f0      	cbz	r0, 4040f8 <__swsetup_r+0x70>
  4040ba:	2000      	movs	r0, #0
  4040bc:	bd38      	pop	{r3, r4, r5, pc}
  4040be:	06d9      	lsls	r1, r3, #27
  4040c0:	d53c      	bpl.n	40413c <__swsetup_r+0xb4>
  4040c2:	0758      	lsls	r0, r3, #29
  4040c4:	d426      	bmi.n	404114 <__swsetup_r+0x8c>
  4040c6:	6920      	ldr	r0, [r4, #16]
  4040c8:	f042 0308 	orr.w	r3, r2, #8
  4040cc:	81a3      	strh	r3, [r4, #12]
  4040ce:	b29b      	uxth	r3, r3
  4040d0:	2800      	cmp	r0, #0
  4040d2:	d1e9      	bne.n	4040a8 <__swsetup_r+0x20>
  4040d4:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4040d8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4040dc:	d0e4      	beq.n	4040a8 <__swsetup_r+0x20>
  4040de:	4628      	mov	r0, r5
  4040e0:	4621      	mov	r1, r4
  4040e2:	f7ff f963 	bl	4033ac <__smakebuf_r>
  4040e6:	89a3      	ldrh	r3, [r4, #12]
  4040e8:	6920      	ldr	r0, [r4, #16]
  4040ea:	e7dd      	b.n	4040a8 <__swsetup_r+0x20>
  4040ec:	0799      	lsls	r1, r3, #30
  4040ee:	bf58      	it	pl
  4040f0:	6962      	ldrpl	r2, [r4, #20]
  4040f2:	60a2      	str	r2, [r4, #8]
  4040f4:	2800      	cmp	r0, #0
  4040f6:	d1e0      	bne.n	4040ba <__swsetup_r+0x32>
  4040f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4040fc:	061a      	lsls	r2, r3, #24
  4040fe:	d5dd      	bpl.n	4040bc <__swsetup_r+0x34>
  404100:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404104:	81a3      	strh	r3, [r4, #12]
  404106:	f04f 30ff 	mov.w	r0, #4294967295
  40410a:	bd38      	pop	{r3, r4, r5, pc}
  40410c:	4618      	mov	r0, r3
  40410e:	f7fe fded 	bl	402cec <__sinit>
  404112:	e7c2      	b.n	40409a <__swsetup_r+0x12>
  404114:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404116:	b151      	cbz	r1, 40412e <__swsetup_r+0xa6>
  404118:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40411c:	4299      	cmp	r1, r3
  40411e:	d004      	beq.n	40412a <__swsetup_r+0xa2>
  404120:	4628      	mov	r0, r5
  404122:	f7fe fe85 	bl	402e30 <_free_r>
  404126:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40412a:	2300      	movs	r3, #0
  40412c:	6323      	str	r3, [r4, #48]	; 0x30
  40412e:	2300      	movs	r3, #0
  404130:	6920      	ldr	r0, [r4, #16]
  404132:	6063      	str	r3, [r4, #4]
  404134:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404138:	6020      	str	r0, [r4, #0]
  40413a:	e7c5      	b.n	4040c8 <__swsetup_r+0x40>
  40413c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404140:	2309      	movs	r3, #9
  404142:	602b      	str	r3, [r5, #0]
  404144:	f04f 30ff 	mov.w	r0, #4294967295
  404148:	81a2      	strh	r2, [r4, #12]
  40414a:	bd38      	pop	{r3, r4, r5, pc}
  40414c:	20000070 	.word	0x20000070

00404150 <__register_exitproc>:
  404150:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404154:	4d2c      	ldr	r5, [pc, #176]	; (404208 <__register_exitproc+0xb8>)
  404156:	4606      	mov	r6, r0
  404158:	6828      	ldr	r0, [r5, #0]
  40415a:	4698      	mov	r8, r3
  40415c:	460f      	mov	r7, r1
  40415e:	4691      	mov	r9, r2
  404160:	f7ff f8f2 	bl	403348 <__retarget_lock_acquire_recursive>
  404164:	4b29      	ldr	r3, [pc, #164]	; (40420c <__register_exitproc+0xbc>)
  404166:	681c      	ldr	r4, [r3, #0]
  404168:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40416c:	2b00      	cmp	r3, #0
  40416e:	d03e      	beq.n	4041ee <__register_exitproc+0x9e>
  404170:	685a      	ldr	r2, [r3, #4]
  404172:	2a1f      	cmp	r2, #31
  404174:	dc1c      	bgt.n	4041b0 <__register_exitproc+0x60>
  404176:	f102 0e01 	add.w	lr, r2, #1
  40417a:	b176      	cbz	r6, 40419a <__register_exitproc+0x4a>
  40417c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404180:	2401      	movs	r4, #1
  404182:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404186:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40418a:	4094      	lsls	r4, r2
  40418c:	4320      	orrs	r0, r4
  40418e:	2e02      	cmp	r6, #2
  404190:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404194:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404198:	d023      	beq.n	4041e2 <__register_exitproc+0x92>
  40419a:	3202      	adds	r2, #2
  40419c:	f8c3 e004 	str.w	lr, [r3, #4]
  4041a0:	6828      	ldr	r0, [r5, #0]
  4041a2:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4041a6:	f7ff f8d1 	bl	40334c <__retarget_lock_release_recursive>
  4041aa:	2000      	movs	r0, #0
  4041ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4041b0:	4b17      	ldr	r3, [pc, #92]	; (404210 <__register_exitproc+0xc0>)
  4041b2:	b30b      	cbz	r3, 4041f8 <__register_exitproc+0xa8>
  4041b4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4041b8:	f7ff f942 	bl	403440 <malloc>
  4041bc:	4603      	mov	r3, r0
  4041be:	b1d8      	cbz	r0, 4041f8 <__register_exitproc+0xa8>
  4041c0:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4041c4:	6002      	str	r2, [r0, #0]
  4041c6:	2100      	movs	r1, #0
  4041c8:	6041      	str	r1, [r0, #4]
  4041ca:	460a      	mov	r2, r1
  4041cc:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4041d0:	f04f 0e01 	mov.w	lr, #1
  4041d4:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4041d8:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4041dc:	2e00      	cmp	r6, #0
  4041de:	d0dc      	beq.n	40419a <__register_exitproc+0x4a>
  4041e0:	e7cc      	b.n	40417c <__register_exitproc+0x2c>
  4041e2:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4041e6:	430c      	orrs	r4, r1
  4041e8:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4041ec:	e7d5      	b.n	40419a <__register_exitproc+0x4a>
  4041ee:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4041f2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4041f6:	e7bb      	b.n	404170 <__register_exitproc+0x20>
  4041f8:	6828      	ldr	r0, [r5, #0]
  4041fa:	f7ff f8a7 	bl	40334c <__retarget_lock_release_recursive>
  4041fe:	f04f 30ff 	mov.w	r0, #4294967295
  404202:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404206:	bf00      	nop
  404208:	200004a0 	.word	0x200004a0
  40420c:	00408048 	.word	0x00408048
  404210:	00403441 	.word	0x00403441

00404214 <_close_r>:
  404214:	b538      	push	{r3, r4, r5, lr}
  404216:	4c07      	ldr	r4, [pc, #28]	; (404234 <_close_r+0x20>)
  404218:	2300      	movs	r3, #0
  40421a:	4605      	mov	r5, r0
  40421c:	4608      	mov	r0, r1
  40421e:	6023      	str	r3, [r4, #0]
  404220:	f7fc fdb6 	bl	400d90 <_close>
  404224:	1c43      	adds	r3, r0, #1
  404226:	d000      	beq.n	40422a <_close_r+0x16>
  404228:	bd38      	pop	{r3, r4, r5, pc}
  40422a:	6823      	ldr	r3, [r4, #0]
  40422c:	2b00      	cmp	r3, #0
  40422e:	d0fb      	beq.n	404228 <_close_r+0x14>
  404230:	602b      	str	r3, [r5, #0]
  404232:	bd38      	pop	{r3, r4, r5, pc}
  404234:	2000e97c 	.word	0x2000e97c

00404238 <_fclose_r>:
  404238:	b570      	push	{r4, r5, r6, lr}
  40423a:	b159      	cbz	r1, 404254 <_fclose_r+0x1c>
  40423c:	4605      	mov	r5, r0
  40423e:	460c      	mov	r4, r1
  404240:	b110      	cbz	r0, 404248 <_fclose_r+0x10>
  404242:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404244:	2b00      	cmp	r3, #0
  404246:	d03c      	beq.n	4042c2 <_fclose_r+0x8a>
  404248:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40424a:	07d8      	lsls	r0, r3, #31
  40424c:	d505      	bpl.n	40425a <_fclose_r+0x22>
  40424e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404252:	b92b      	cbnz	r3, 404260 <_fclose_r+0x28>
  404254:	2600      	movs	r6, #0
  404256:	4630      	mov	r0, r6
  404258:	bd70      	pop	{r4, r5, r6, pc}
  40425a:	89a3      	ldrh	r3, [r4, #12]
  40425c:	0599      	lsls	r1, r3, #22
  40425e:	d53c      	bpl.n	4042da <_fclose_r+0xa2>
  404260:	4621      	mov	r1, r4
  404262:	4628      	mov	r0, r5
  404264:	f7fe fc4a 	bl	402afc <__sflush_r>
  404268:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40426a:	4606      	mov	r6, r0
  40426c:	b133      	cbz	r3, 40427c <_fclose_r+0x44>
  40426e:	69e1      	ldr	r1, [r4, #28]
  404270:	4628      	mov	r0, r5
  404272:	4798      	blx	r3
  404274:	2800      	cmp	r0, #0
  404276:	bfb8      	it	lt
  404278:	f04f 36ff 	movlt.w	r6, #4294967295
  40427c:	89a3      	ldrh	r3, [r4, #12]
  40427e:	061a      	lsls	r2, r3, #24
  404280:	d422      	bmi.n	4042c8 <_fclose_r+0x90>
  404282:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404284:	b141      	cbz	r1, 404298 <_fclose_r+0x60>
  404286:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40428a:	4299      	cmp	r1, r3
  40428c:	d002      	beq.n	404294 <_fclose_r+0x5c>
  40428e:	4628      	mov	r0, r5
  404290:	f7fe fdce 	bl	402e30 <_free_r>
  404294:	2300      	movs	r3, #0
  404296:	6323      	str	r3, [r4, #48]	; 0x30
  404298:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40429a:	b121      	cbz	r1, 4042a6 <_fclose_r+0x6e>
  40429c:	4628      	mov	r0, r5
  40429e:	f7fe fdc7 	bl	402e30 <_free_r>
  4042a2:	2300      	movs	r3, #0
  4042a4:	6463      	str	r3, [r4, #68]	; 0x44
  4042a6:	f7fe fd4d 	bl	402d44 <__sfp_lock_acquire>
  4042aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4042ac:	2200      	movs	r2, #0
  4042ae:	07db      	lsls	r3, r3, #31
  4042b0:	81a2      	strh	r2, [r4, #12]
  4042b2:	d50e      	bpl.n	4042d2 <_fclose_r+0x9a>
  4042b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4042b6:	f7ff f845 	bl	403344 <__retarget_lock_close_recursive>
  4042ba:	f7fe fd49 	bl	402d50 <__sfp_lock_release>
  4042be:	4630      	mov	r0, r6
  4042c0:	bd70      	pop	{r4, r5, r6, pc}
  4042c2:	f7fe fd13 	bl	402cec <__sinit>
  4042c6:	e7bf      	b.n	404248 <_fclose_r+0x10>
  4042c8:	6921      	ldr	r1, [r4, #16]
  4042ca:	4628      	mov	r0, r5
  4042cc:	f7fe fdb0 	bl	402e30 <_free_r>
  4042d0:	e7d7      	b.n	404282 <_fclose_r+0x4a>
  4042d2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4042d4:	f7ff f83a 	bl	40334c <__retarget_lock_release_recursive>
  4042d8:	e7ec      	b.n	4042b4 <_fclose_r+0x7c>
  4042da:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4042dc:	f7ff f834 	bl	403348 <__retarget_lock_acquire_recursive>
  4042e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4042e4:	2b00      	cmp	r3, #0
  4042e6:	d1bb      	bne.n	404260 <_fclose_r+0x28>
  4042e8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4042ea:	f016 0601 	ands.w	r6, r6, #1
  4042ee:	d1b1      	bne.n	404254 <_fclose_r+0x1c>
  4042f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4042f2:	f7ff f82b 	bl	40334c <__retarget_lock_release_recursive>
  4042f6:	4630      	mov	r0, r6
  4042f8:	bd70      	pop	{r4, r5, r6, pc}
  4042fa:	bf00      	nop

004042fc <_fstat_r>:
  4042fc:	b538      	push	{r3, r4, r5, lr}
  4042fe:	460b      	mov	r3, r1
  404300:	4c07      	ldr	r4, [pc, #28]	; (404320 <_fstat_r+0x24>)
  404302:	4605      	mov	r5, r0
  404304:	4611      	mov	r1, r2
  404306:	4618      	mov	r0, r3
  404308:	2300      	movs	r3, #0
  40430a:	6023      	str	r3, [r4, #0]
  40430c:	f7fc fd43 	bl	400d96 <_fstat>
  404310:	1c43      	adds	r3, r0, #1
  404312:	d000      	beq.n	404316 <_fstat_r+0x1a>
  404314:	bd38      	pop	{r3, r4, r5, pc}
  404316:	6823      	ldr	r3, [r4, #0]
  404318:	2b00      	cmp	r3, #0
  40431a:	d0fb      	beq.n	404314 <_fstat_r+0x18>
  40431c:	602b      	str	r3, [r5, #0]
  40431e:	bd38      	pop	{r3, r4, r5, pc}
  404320:	2000e97c 	.word	0x2000e97c

00404324 <_isatty_r>:
  404324:	b538      	push	{r3, r4, r5, lr}
  404326:	4c07      	ldr	r4, [pc, #28]	; (404344 <_isatty_r+0x20>)
  404328:	2300      	movs	r3, #0
  40432a:	4605      	mov	r5, r0
  40432c:	4608      	mov	r0, r1
  40432e:	6023      	str	r3, [r4, #0]
  404330:	f7fc fd36 	bl	400da0 <_isatty>
  404334:	1c43      	adds	r3, r0, #1
  404336:	d000      	beq.n	40433a <_isatty_r+0x16>
  404338:	bd38      	pop	{r3, r4, r5, pc}
  40433a:	6823      	ldr	r3, [r4, #0]
  40433c:	2b00      	cmp	r3, #0
  40433e:	d0fb      	beq.n	404338 <_isatty_r+0x14>
  404340:	602b      	str	r3, [r5, #0]
  404342:	bd38      	pop	{r3, r4, r5, pc}
  404344:	2000e97c 	.word	0x2000e97c

00404348 <_lseek_r>:
  404348:	b570      	push	{r4, r5, r6, lr}
  40434a:	460d      	mov	r5, r1
  40434c:	4c08      	ldr	r4, [pc, #32]	; (404370 <_lseek_r+0x28>)
  40434e:	4611      	mov	r1, r2
  404350:	4606      	mov	r6, r0
  404352:	461a      	mov	r2, r3
  404354:	4628      	mov	r0, r5
  404356:	2300      	movs	r3, #0
  404358:	6023      	str	r3, [r4, #0]
  40435a:	f7fc fd23 	bl	400da4 <_lseek>
  40435e:	1c43      	adds	r3, r0, #1
  404360:	d000      	beq.n	404364 <_lseek_r+0x1c>
  404362:	bd70      	pop	{r4, r5, r6, pc}
  404364:	6823      	ldr	r3, [r4, #0]
  404366:	2b00      	cmp	r3, #0
  404368:	d0fb      	beq.n	404362 <_lseek_r+0x1a>
  40436a:	6033      	str	r3, [r6, #0]
  40436c:	bd70      	pop	{r4, r5, r6, pc}
  40436e:	bf00      	nop
  404370:	2000e97c 	.word	0x2000e97c

00404374 <_read_r>:
  404374:	b570      	push	{r4, r5, r6, lr}
  404376:	460d      	mov	r5, r1
  404378:	4c08      	ldr	r4, [pc, #32]	; (40439c <_read_r+0x28>)
  40437a:	4611      	mov	r1, r2
  40437c:	4606      	mov	r6, r0
  40437e:	461a      	mov	r2, r3
  404380:	4628      	mov	r0, r5
  404382:	2300      	movs	r3, #0
  404384:	6023      	str	r3, [r4, #0]
  404386:	f7fc fd37 	bl	400df8 <_read>
  40438a:	1c43      	adds	r3, r0, #1
  40438c:	d000      	beq.n	404390 <_read_r+0x1c>
  40438e:	bd70      	pop	{r4, r5, r6, pc}
  404390:	6823      	ldr	r3, [r4, #0]
  404392:	2b00      	cmp	r3, #0
  404394:	d0fb      	beq.n	40438e <_read_r+0x1a>
  404396:	6033      	str	r3, [r6, #0]
  404398:	bd70      	pop	{r4, r5, r6, pc}
  40439a:	bf00      	nop
  40439c:	2000e97c 	.word	0x2000e97c
  4043a0:	69647541 	.word	0x69647541
  4043a4:	6f43206f 	.word	0x6f43206f
  4043a8:	20636564 	.word	0x20636564
  4043ac:	74696e49 	.word	0x74696e49
  4043b0:	696c6169 	.word	0x696c6169
  4043b4:	0d64657a 	.word	0x0d64657a
  4043b8:	0000000a 	.word	0x0000000a
  4043bc:	43533249 	.word	0x43533249
  4043c0:	696e4920 	.word	0x696e4920
  4043c4:	6c616974 	.word	0x6c616974
  4043c8:	64657a69 	.word	0x64657a69
  4043cc:	00000a0d 	.word	0x00000a0d

004043d0 <frac_int2float>:
  4043d0:	00000000 41e00000                       .......A

004043d8 <IRPart4>:
  4043d8:	bc8c800b b9a00008 bc8b99c7 3ad8ec96     ...............:
  4043e8:	bc88eca3 3b56bf14 bc848a08 3b9e5ea5     ......V;.....^.;
  4043f8:	bc7d1b49 3bce399f bc6e3adc 3bfa0844     I.}..9.;.:n.D..;
  404408:	bc5ccfe5 3c108020 bc4945c4 3c213cd1     ..\. ..<.EI..<!<
  404418:	bc341404 3c2ef9e9 bc1db903 3c398c13     ..4....<......9<
  404428:	bc06b6f4 3c40ddab bbdf204c 3c44ef1d     ......@<L ....D<
  404438:	bbb185ca 3c45d6a4 bb858c46 3c43bd5a     ......E<F...Z.C<
  404448:	bb3817df 3c3edf39 bad707b9 3c3787c1     ..8.9.><......7<
  404458:	ba1a5f9b 3c2e0fde 39adb972 3c22d8c8     ._.....<r..9.."<
  404468:	3a917d6b 3c164b5b 3ae44006 3c08d28c     k}.:[K.<.@.:...<
  404478:	3b11c7e9 3bf5b15d 3b27ea3f 3bd98887     ...;]..;?.';...;
  404488:	3b34fdce 3bbde9db 3b39b340 3ba3814f     ..4;...;@.9;O..;
  404498:	3b36ec91 3b8ae373 3b2db280 3b69142b     ..6;s..;..-;+.i;
  4044a8:	3b1f28fb 3b41a3cf 3b0c8387 3b1ff325     .(.;..A;...;%..;
  4044b8:	3aedf40f 3b044371 3abf79fe 3add377e     ...:qC.;.y.:~7.:
  4044c8:	3a8fd74e 3abd9bd7 3a422de2 3aa8f7b0     N..:...:.-B:...:
  4044d8:	39d40003 3a9e3dee 38d0ba7e 3a9c2260     ...9.=.:~..8`".:
  4044e8:	b92d17b7 3aa12a32 b9c908fc 3aabc063     ..-.2*.:....c..:
  4044f8:	ba10c433 3aba478f ba2fd02c 3acb2b62     3....G.:,./.b+.:
  404508:	ba42116e 3adcf05b ba487b1d 3aee42e9     n.B.[..:.{H..B.:
  404518:	ba447271 3afe0122 ba37b414 3b05a195     qrD."..:..7....;
  404528:	ba2436bd 3b0ab09e ba0c0e1e 3b0dfa54     .6$....;....T..;
  404538:	b9e29bb8 3b0f6b42 b9abdeda 3b0f0e50     ....Bk.;....P..;
  404548:	b96ee89a 3b0d0892 b910bfe7 3b0995c0     ..n....;.......;
  404558:	b883f611 3b0502df b6bb21b9 3aff50ae     .......;.!...P.:
  404568:	3807c10d 3af3c839 3854c2d8 3ae8294a     ...89..:..T8J).:
  404578:	38549d43 3add2408 3811631d 3ad354d1     C.T8.$.:.c.8.T.:
  404588:	36cb0e81 3acb3a7b b801efe1 3ac5314d     ...6{:.:....M1.:
  404598:	b8968c9f 3ac16df4 b8e9eff3 3abffb83     .....m.:.......:
  4045a8:	b9189f96 3ac0bd1f b931b3c2 3ac36f00     .......:..1..o.:
  4045b8:	b93c55f6 3ac7ad28 b93588e3 3accf668     .U<.(..:..5.h..:
  4045c8:	b91b5d02 3ad2b7c8 b8da1422 3ad851e6     .].....:"....Q.:
  4045d8:	b82bec3f 3add2306 3824d7c6 3ae09023     ?.+..#.:..$8#..:
  4045e8:	390cd591 3ae20ca5 397c3932 3ae12371     ...9...:29|9q#.:
  4045f8:	39b97763 3add7a9a 39f5faaa 3ad6dbc4     cw.9.z.:...9...:
  404608:	3a187f3d 3acd3426 3a33eaa0 3ac0978a     =..:&4.:..3:...:
  404618:	3a4bf6b9 3ab13fa9 3a5f7908 3a9f881b     ..K:.?.:.y_:...:
  404628:	3a6d7404 3a8bed5f 3a752372 3a6e07ca     .tm:_..:r#u:..n:
  404638:	3a760668 3a42e6a3 3a6fe589 3a17dc5e     h.v:..B:..o:^..:
  404648:	3a62d61b 39dca724 3a4f397d 398f5878     ..b:$..9}9O:xX.9
  404658:	3a35b946 3914aced 3a173fbc 37fd8464     F.5:...9.?.:d..7
  404668:	39e9db26 b872bd6a 39a01a9b b8fbbe85     &..9j.r....9....
  404678:	392812b7 b9226a3c 3788aa60 b92a09c3     ..(9<j".`..7..*.
  404688:	b8fe1e42 b915a873 b9817b15 b8ceae22     B...s....{.."...
  404698:	b9bae3a7 b808cfd9 b9e9b4c3 3856e115     ..............V8
  4046a8:	ba062bba 391ba7e7 ba10dd2a 398526bd     .+.....9*....&.9
  4046b8:	ba14ae56 39be0737 ba11a8f9 39f59fef     V...7..9.......9
  4046c8:	ba081f9f 3a1498dc b9f1539d 3a2b187b     .......:.S..{.+:
  4046d8:	b9c83914 3a3d2fee b9970186 3a49f2a8     .9.../=:......I:
  4046e8:	b9401ebf 3a50af6c b897ee0b 3a50f6f5     ..@.l.P:......P:
  4046f8:	382438c0 3a4a9f20 39198fd6 3a3dc381     .8$8 .J:...9..=:
  404708:	39803465 3a2ac374 39ac727e 3a123c47     e4.9t.*:~r.9G<.:
  404718:	39cf7791 39ea04c1 39e79b5a 39a82db1     .w.9...9Z..9.-.9
  404728:	39f3a6df 39427335 39f2ddd0 383ccbce     ...95sB9...9..<8
  404738:	39e502d7 b8c8c210 39ca56c8 b9735566     ...9.....V.9fUs.
  404748:	39a3920d b9bc7cc0 3963b307 b9f884ae     ...9.|....c9....
  404758:	38dac214 ba15f62a b7c1a2cb ba2a9b52     ...8*.......R.*.
  404768:	b929015a ba39a629 b9a05bf8 ba42c0eb     Z.).).9..[....B.
  404778:	b9ed7a75 ba45cced ba1cdaca ba42e0ee     uz....E.......B.
  404788:	ba418329 ba3a4626 ba63cbb9 ba2c728f     ).A.&F:...c..r,.
  404798:	ba81750b ba1a0242 ba8f1d14 ba03af22     .u..B......."...
  4047a8:	ba9aa12c b9d4906e baa3da65 b99d504c     ,...n...e...LP..
  4047b8:	baaab7a4 b946b191 baaf3d45 b8a16166     ......F.E=..fa..
  4047c8:	bab18370 3810f372 bab1b214 391545ab     p...r..8.....E.9
  4047d8:	baafffe2 3980000d baacae49 39b13da5     .......9I....=.9
  4047e8:	baa8046b 39dda402 baa24dc8 3a025e83     k......9.M...^.:
  4047f8:	ba9bd4dd 3a1329a4 ba94e179 3a213657     .....).:y...W6!:
  404808:	ba8db4b4 3a2ca213 ba8686ed 3a35a01c     ......,:......5:
  404818:	ba7f0e71 3a3c74b2 ba71b1d6 3a416f7f     q....t<:..q..oA:
  404828:	ba65286c 3a44e612 ba598c81 3a472ea8     l(e...D:..Y...G:
  404838:	ba4ee386 3a489b31 ba4520ed 3a49756e     ..N.1.H:. E.nuI:
  404848:	ba3c29ab 3a49fb50 ba33d7d6 3a4a5cc1     .)<.P.I:..3..\J:
  404858:	ba2bfecc 3a4aba81 ba246f61 3a4b259d     ..+...J:ao$..%K:
  404868:	ba1cfbf1 3a4ba07d ba157b7d 3a4c1fcb     ....}.K:}{....L:
  404878:	ba0dcd10 3a4c8d84 ba05d996 3a4ccb1f     ......L:......L:
  404888:	b9fb2a9d 3a4cb50b b9ea00ff 3a4c25c4     .*....L:.....%L:
  404898:	b9d84dce 3a4af92f b9c63e01 3a490f6d     .M../.J:.>..m.I:
  4048a8:	b9b41046 3a464f85 b9a21072 3a42a919     F....OF:r.....B:
  4048b8:	b990928a 3a3e15fb b97fdaca 3a389a88     ......>:......8:
  4048c8:	b960e987 3a3245b8 b944e8b0 3a2b304e     ..`..E2:..D.N0+:
  4048d8:	b92c5671 3a237b4d b9178fee 3a1b4e1c     qV,.M{#:.....N.:
  4048e8:	b906ccb8 3a12d47b b8f4383a 3a0a3bb6     ....{..::8...;.:
  4048f8:	b8e2c9c2 3a01b03b b8d8d066 39f2b67d     ....;..:f...}..9
  404908:	b8d58b6b 39e2c12b b8d804ed 39d3b903     k...+..9.......9
  404918:	b8df2424 39c5c66b b8e9bd7c 39b8fe30     $$..k..9|...0..9
  404928:	b8f6a676 39ad6347 b90264c1 39a2e5da     v...Gc.9.d.....9
  404938:	b9099ac9 39996709 b91096d5 3990baab     .....g.9.......9
  404948:	b9171903 3988ac03 b91d0499 398101c0     .......9.......9
  404958:	b9225f80 397304df b9275284 3963f442     ._"...s9.R'.B.c9
  404968:	b92c23fa 39547b39 b93132e8 39445d5f     .#,.9{T9.21._]D9
  404978:	b936ef85 39337dfa b93dd211 3921e4d3     ..6..}39..=...!9
  404988:	b94650ee 390fbd22 b950d7c1 38faaedd     .PF."..9..P....8
  404998:	b95dbcb4 38d64a8b b96d3a4d 38b364f5     ..]..J.8M:m..d.8
  4049a8:	b97f6605 38933ee3 b98a16ab 386e59f5     .f...>.8.....Yn8
  4049b8:	b995a8da 38410a1c b9a234f4 38211039     ......A8.4..9.!8
  4049c8:	b9af71d1 38109a1c b9bd040b 38115973     .q.....8....sY.8
  4049d8:	b9ca8289 382462f3 b9d77a03 384a12d7     .....b$8.z....J8
  4049e8:	b9e37369 3880fc31 b9edf906 38a569db     is..1..8.....i.8
  4049f8:	b9f69caa 38d14908 b9fcfdf6 39019835     .....I.8....5..9
  404a08:	ba006788 391cb1a7 ba00ed03 3938f080     .g.....9......89
  404a18:	ba0001cc 39553dd7 b9fb4e2e 39707809     .....=U9.N...xp9
  404a28:	b9f3da8b 3984bfee b9e9e73a 398fa2b1     .......9:......9
  404a38:	b9ddceb0 39986ad7 b9d00417 399eb2a2     .....j.9.......9
  404a48:	b9c10dec 39a22db4 b9b18128 39a2ad14     .....-.9(......9
  404a58:	b9a1fa2a 39a0210c b993163f 399a9b10     *....!.9?......9
  404a68:	b9856bff 39924cec b9730a3d 398786e1     .k...L.9=.s....9
  404a78:	b95faea7 39756970 b9517efd 3958b0b9     .._.piu9.~Q...X9
  404a88:	b948fb06 393a07ac b94660c4 391aa815     ..H...:9.`F....9
  404a98:	b949ac76 38f7a01b b952966e 38bd6a05     v.I....8n.R..j.8
  404aa8:	b96097a7 3888eb1f b972f0bd 38383068     ..`....8..r.h088
  404ab8:	b98458fc 37e21beb b99063d5 377ae35f     .X.....7.c.._.z7
  404ac8:	b99d0364 370a0083 b9a99db7 36e553fe     d......7.....S.6
  404ad8:	b9b59bae 3731d4ef b9c06fd0 37a04641     ......17.o..AF.7
  404ae8:	b9c99ce4 38051188 b9d0bc1b 3847dda0     .......8......G8
  404af8:	b9d580d0 388a478d b9d7bc95 38b3664d     .....G.8....Mf.8
  404b08:	b9d76060 38dd091f b9d47cb3 390279b1     ``.....8.|...y.9
  404b18:	b9cf40ce 3914868a b9c7f6e9 3923bbee     .@.....9......#9
  404b28:	b9bf0121 392f544a b9b4d306 3936bbfa     !...JT/9......69
  404b38:	b9a9ec3c 393996ee b99ed1a3 3937c531     <.....99....1.79
  404b48:	b99406c4 3931619e b98a06d5 3926c106     .....a19......&9
  404b58:	b9813ed1 39186b3e b9741080 39071396     .>..>k.9..t....9
  404b68:	b9694b22 38e71bb6 b9627b60 38bd85c7     "Ki....8`{b....8
  404b78:	b95fb91f 389349bc b960e35a 38548286     .._..I.8Z.`...T8
  404b88:	b965a42c 3808470e b96d773c 3789bef8     ,.e..G.8<wm....7
  404b98:	b977b0c0 364ae806 b981c418 b6f50002     ..w...J6........
  404ba8:	b9881277 b770b9e9 b98e53d1 b797e58f     w.....p..S......
  404bb8:	b9941d95 b79d69f6 b9990e51 b78c0897     .....i..Q.......
  404bc8:	b99cd4af b7505ea3 b99f31bd b6ddb187     .....^P..1......

00404bd8 <IRPart3>:
  404bd8:	3d354003 baf80001 bba4cb51 bc111f98     .@5=....Q.......
  404be8:	3d628856 bcb4d204 bce341b9 bd88a5ce     V.b=.....A......
  404bf8:	bc5a5333 bc8ed337 bd173373 3898e26d     3SZ.7...s3..m..8
  404c08:	3ddf505d bc246174 bcce6e58 be6c970f     ]P.=ta$.Xn....l.
  404c18:	be347410 bd7cf2b5 be145ae6 bd03b745     .t4...|..Z..E...
  404c28:	be1a3df7 3dde6363 3ce75b59 3d83d9b7     .=..cc.=Y[.<...=
  404c38:	bd493a21 bd0f6ed3 bda774b9 3c997a5a     !:I..n...t..Zz.<
  404c48:	bd53df2b 3d132e46 bd8ee1b0 bc5db263     +.S.F..=....c.].
  404c58:	be1da05a 3db323bc 3c4c5c65 3e3e10cf     Z....#.=e\L<..>>
  404c68:	3de29f17 3c935181 bce42792 bda30080     ...=.Q.<.'......
  404c78:	bde32db2 3d0d53a6 bd1eab6c 3dab40ce     .-...S.=l....@.=
  404c88:	bc6f5df1 3db32cb3 3d61e167 3d6a722f     .]o..,.=g.a=/rj=
  404c98:	3c084680 bca560ad bd04fbb3 3cbf217e     .F.<.`......~!.<
  404ca8:	bc0a4dac 3cbab9db bd481487 3c58bede     .M.....<..H...X<
  404cb8:	bd591220 3dc52597 3d465fe6 3dd02470      .Y..%.=._F=p$.=
  404cc8:	3d952ea9 3cdd0b74 3d0f52b9 bd09d445     ...=t..<.R.=E...
  404cd8:	bd2e76d6 3b8a8c4b 3c81f1a7 3d48439b     .v..K..;...<.CH=
  404ce8:	3bb28c44 3ae7263f 3acc40e1 3d0832ef     D..;?&.:.@.:.2.=
  404cf8:	3c33f7ea 3c77b685 3c39c6cb 3ce23cd6     ..3<..w<..9<.<.<
  404d08:	3c90b5fb 3c2c6cdb 3c948f39 3ca34d0c     ...<.l,<9..<.M.<
  404d18:	3cf76ba7 bc13881d bb9b0641 bc8ca885     .k.<....A.......
  404d28:	bc66e796 3bdf60ce 3b71744c 3c76b4fe     ..f..`.;Ltq;..v<
  404d38:	3a9c1d57 ba8d2bcd bbfb3b4a 3c27066a     W..:.+..J;..j.'<
  404d48:	ba2f62da 3c354e2b 380086c7 3c532251     .b/.+N5<...8Q"S<
  404d58:	3b69c52b 3c332053 3bd910d3 3c0f8630     +.i;S 3<...;0..<
  404d68:	3ae38fdd 3b02606d 3a5d3f13 3c088352     ...:m`.;.?]:R..<
  404d78:	3ab6a010 3a930f67 bbe16850 3bd5b467     ...:g..:Ph..g..;
  404d88:	bb51a0f2 3c5d0e63 3bcc532a 3c647560     ..Q.c.]<*S.;`ud<
  404d98:	3bd0e06d 3b92e19a 3b91b102 3b9350d5     m..;...;...;.P.;
  404da8:	b9d0c021 39a199cc bad19b94 3c0390b9     !......9.......<
  404db8:	3a46fdab 3bb601f0 3b282f8a 3c16b56e     ..F:...;./(;n..<
  404dc8:	3b95e215 3b5f0407 3ba4ed0a 3b8f9204     ...;.._;...;...;
  404dd8:	3aefee65 bb94b5f0 bba96d0c 3b7f8688     e..:.....m.....;
  404de8:	382d03da 3b6c8981 b9ae954c 3b90dc46     ..-8..l;L...F..;
  404df8:	baf32323 39c4af3e bb6a8976 3c0c3766     ##..>..9v.j.f7.<
  404e08:	3b4dabc5 3b728d26 ba939caa 3bb0875c     ..M;&.r;....\..;
  404e18:	3b6bbaa4 3b7c81c6 3b699255 3b651c4f     ..k;..|;U.i;O.e;
  404e28:	3bb1247b bba213e7 bb9738ec bb90845d     {$.;.....8..]...
  404e38:	bb9ff985 bb5eb42b bc30270f 3b080dd6     ....+.^..'0....;
  404e48:	bb973008 3b92c27a bc0d04d6 3ba8f3aa     .0..z..;.......;
  404e58:	bb225c8c 3c2447de 398caee9 3bbd9664     .\"..G$<...9d..;
  404e68:	38ddb129 3b504278 bb33eeaf 3b1ebef2     )..8xBP;..3....;
  404e78:	bb828038 3b614ab3 bb8b7c0a 3bf80ec5     8....Ja;.|.....;
  404e88:	3aaee90c 3bd3d641 ba59ddc6 3b8d1c89     ...:A..;..Y....;
  404e98:	3ad1d1ef 3b9c2362 38a0b2b3 3ae0b25d     ...:b#.;...8]..:
  404ea8:	b9bea621 3b44ee87 b78b4d54 3abc590c     !.....D;TM...Y.:
  404eb8:	bad039ea 3a9c9ad6 ba9e61d5 3aac18f8     .9.....:.a.....:
  404ec8:	bb5785e3 ba5a4802 bbcca408 3b0f4786     ..W..HZ......G.;
  404ed8:	bbb5ff81 3b844950 bba162bc 3bdb9425     ....PI.;.b..%..;
  404ee8:	bb3943ae 3bdc2240 ba93cf55 3c177bb2     .C9.@".;U....{.<
  404ef8:	3b8c1374 3ba696ee b7d39f6e 3ae9fb06     t..;...;n......:
  404f08:	b9e98878 3b434b44 bb0cafa6 3b9953cf     x...DKC;.....S.;
  404f18:	3b4e6122 3bc3f7a7 3af89451 3a005095     "aN;...;Q..:.P.:
  404f28:	3a9bf819 3b5f4e5a 3b6bbf2b baa164ea     ...:ZN_;+.k;.d..
  404f38:	baf2fc8c baeb732b ba86f0f5 ba17bda1     ....+s..........
  404f48:	bba1d8d8 ba667d22 bb5e3be0 3b9fb339     ...."}f..;^.9..;
  404f58:	3aa0ca90 3b22fc44 ba1b0179 bac06535     ...:D.";y...5e..
  404f68:	bba40be3 3a9d6c8d 3a898e09 3b707f04     .....l.:...:..p;
  404f78:	bb06fc33 bb916909 bbf91179 3b3ce09c     3....i..y.....<;
  404f88:	bb08dc32 3b916d91 ba8c870c 3b7df7e8     2....m.;......};
  404f98:	3a1b02bf 3ac93bc9 38ff175e 3984b734     ...:.;.:^..84..9
  404fa8:	bb23a810 bb672fa5 bbe5cf12 3ae8de25     ..#../g.....%..:
  404fb8:	bb2a4df2 3b1c21df bba736d1 3b3d1d01     .M*..!.;.6....=;
  404fc8:	babf1758 3b9a7cae ba23c34f 3b47b1db     X....|.;O.#...G;
  404fd8:	3aa8000f 3a300005 bb2f5e52 bb14f7f4     ...:..0:R^/.....
  404fe8:	bb94f2ab 3a39d03d bb4ae66e 3a87e43a     ....=.9:n.J.:..:
  404ff8:	bbaa10a0 ba746587 bc0b9beb 3b83094a     .....et.....J..;
  405008:	bb5da50c 3bf55ee7 3736c416 3bbf444e     ..]..^.;..67ND.;
  405018:	3afc55fc 3abd0128 bb3c9d55 ba52618c     .U.:(..:U.<..aR.
  405028:	bb77ba61 3af0ca83 bb854173 3b2a6da7     a.w....:sA...m*;
  405038:	bb538eb3 3b56164d bb8e734b 3b9c67c0     ..S.M.V;Ks...g.;
  405048:	3a2d85f9 3bca7417 ba2f6e20 3a59da15     ..-:.t.; n/...Y:
  405058:	bb04c8d2 3ba48d69 3ae621dd 3b0c0e6c     ....i..;.!.:l..;
  405068:	bab9c4b2 3abaffc6 b8b2a78d 3ae27500     .......:.....u.:
  405078:	bad14603 3a995e0a ba84dbc7 3ad6c6f7     .F...^.:.......:
  405088:	bacfc57b 3b20e4bd 3aedfc72 3a87803c     {..... ;r..:<..:
  405098:	bb3e13cc bb10f32d bb3af991 3b344ba2     ..>.-.....:..K4;
  4050a8:	ba96e4de 39a8b3c6 bb3259af 3a960fcc     .......9.Y2....:
  4050b8:	bb23f944 3aadef67 bac48fe7 3afbad35     D.#.g..:....5..:
  4050c8:	bb341f2c b97ad653 bb6fa6ec 3b5580a6     ,.4.S.z...o...U;
  4050d8:	ba7379a4 3b08ecf9 baf0078f 3ae804b7     .ys....;.......:
  4050e8:	baf73658 3a76e637 bb2a6ca6 3b33aded     X6..7.v:.l*...3;
  4050f8:	b9ba87b7 3abfe9ba bb2bd4b0 3a3f39c5     .......:..+..9?:
  405108:	bb1a9b21 3b125c8e bacb6dd2 3b1a979b     !....\.;.m.....;
  405118:	ba9be5a4 3ada6dca baaf4700 3ad103e9     .....m.:.G.....:
  405128:	badbc563 3a9e4eb5 baba7029 3afb391c     c....N.:)p...9.:
  405138:	bad21409 3a7be5a5 bace0a8f 3b12c20f     ......{:.......;
  405148:	ba912a8a 3a7f4ac6 baa3354f 3b0c34d7     .*...J.:O5...4.;
  405158:	ba26bf7b 37fa1cf1 bb285e03 3adc52a7     {.&....7.^(..R.:
  405168:	ba018bfe 3a9f3438 bafff4c2 3a9c8b66     ....84.:....f..:
  405178:	ba252f94 3ab52998 ba8f40fb 3a704259     ./%..).:.@..YBp:
  405188:	ba296bdb 39904760 bb01f2df 395c19f2     .k).`G.9......\9
  405198:	bae8f750 3a79c12a ba92fdf4 3a9cd38b     P...*.y:.......:
  4051a8:	ba9cedb7 b98ca6fe bb1eddfc 3a862c54     ............T,.:
  4051b8:	ba867b85 3a60faf9 bab29c4a 3a3e7fad     .{....`:J.....>:
  4051c8:	ba8d2b21 b98acd34 bb1720c3 39b53387     !+..4.... ...3.9
  4051d8:	badfee68 39694201 bb0639c0 3a7b4f86     h....Bi9.9...O{:
  4051e8:	ba9be8ff b9abcd01 bb421132 3a07ddb8     ........2.B....:
  4051f8:	bac3f5e4 39d10e1c bb3cb6aa 3a2b1eb8     .......9..<...+:
  405208:	babeabf8 3a3a0aa0 bb392db4 3a2a4222     ......::.-9."B*:
  405218:	bab41774 3a98c45d bb12b0c7 3a04fa50     t...]..:....P..:
  405228:	bab22831 3a6f45c0 bb0b799b 38e9145f     1(...Eo:.y.._..8
  405238:	bb0a95f1 3a3a43de bb1796e0 3a809b82     .....C::.......:
  405248:	bab45fee 3a80f236 bb033803 39f7ed6b     ._..6..:.8..k..9
  405258:	baddac99 3a817c97 bab33f07 3a28123f     .....|.:.?..?.(:
  405268:	bae3eacc b982c33e bb41b1e7 3a83a668     ....>.....A.h..:
  405278:	baa01d6c 3ab93c77 bad1aa01 3a52aaf7     l...w<.:......R:
  405288:	ba5766c0 3a616890 ba9abf5e 393dfb23     .fW..ha:^...#.=9
  405298:	ba79629c b7149005 bae3f385 b9d3a457     .by.........W...
  4052a8:	bae71a81 39039b56 bab447c6 38eed140     ....V..9.G..@..8
  4052b8:	baca8eaf ba857f86 bb473f19 b70747ff     .........?G..G..
  4052c8:	babe8059 39e656ae bb0e0a9a ba23cffe     Y....V.9......#.
  4052d8:	bb27b591 b8233f00 bb26655a 3a056085     ..'..?#.Ze&..`.:
  4052e8:	baec0ad6 39655e60 bb29c78f 39193df6     ....`^e9..)..=.9
  4052f8:	bafcc360 3a3044bd baf044f7 38879d82     `....D0:.D.....8
  405308:	bb16086b b93d911b bb25b608 3a20ec41     k.....=...%.A. :
  405318:	baf21506 3903b44c bb2de454 3a047ae0     ....L..9T.-..z.:
  405328:	badf3a8e 39d3418f bb2cfbf7 39d0bf76     .:...A.9..,.v..9
  405338:	bacdf56c 3a4565a5 bb18f2ab 34fffffa     l....eE:.......4
  405348:	bb13e149 3a79b4af bae78d98 3a87c963     I.....y:....c..:
  405358:	ba84db1c 3a37f685 baaba082 38719af7     ......7:......q8
  405368:	baaa55a9 3735d7dd bab91890 b9824378     .U....57....xC..
  405378:	bad8213f ba2adb47 bb0ea06c b98ac38a     ?!..G.*.l.......
  405388:	baff9f88 ba017c05 bb2d0633 373717d6     .....|..3.-...77
  405398:	baee66d0 383b63fe bb23b7d6 b8f19811     .f...c;8..#.....
  4053a8:	bb09dd64 39aff1ba bb067275 39b2a0a7     d......9ur.....9
  4053b8:	bad2d34c 3834ce01 bb05038a b7b1a80e     L.....48........
  4053c8:	bae411b8 b98363e7 bb1db5de b8b1363c     .....c......<6..

004053d8 <IRPart2>:
  4053d8:	bcb23fee 3b21fff0 3c35cc6b bcb09f04     .?....!;k.5<....
  4053e8:	bd3a5383 bc2177b4 bba06ef6 bc923232     .S:..w!..n..22..
  4053f8:	3b5803b8 3d2bc291 3df84125 be281627     ..X;..+=%A.='.(.
  405408:	be24b6a6 bdc7bcd0 3e34da0a be3ec786     ..$.......4>..>.
  405418:	bf00283d bf0d41b7 bf221b4c 3eaf7985     =(...A..L."..y.>
  405428:	bdb941c8 3e8e8273 be1a16e8 3e7b96f2     .A..s..>......{>
  405438:	3d119081 3e786552 3d9ba6f0 3e062dc7     ...=Rex>...=.-.>
  405448:	3d5c7f93 bc7182fa bddf266c 3d7166c5     ..\=..q.l&...fq=
  405458:	3dc6d996 3da7f6a4 bdec679d be598aec     ...=...=.g....Y.
  405468:	bec12381 3e3b83cf 3ce4dc8e 3e9814f9     .#....;>...<...>
  405478:	bd2b649d bc8c6cc0 becb8477 3e515593     .d+..l..w....UQ>
  405488:	bd3c8b00 3f4bbdcf 3f2fea70 3eaa4dd3     ..<...K?p./?.M.>
  405498:	3e60e90c be29fe87 3e2f42bb 3e128c37     ..`>..)..B/>7..>
  4054a8:	3e97ee0b bd46c912 3e4ba5a0 be1ca0c3     ...>..F...K>....
  4054b8:	bbf7273e be4fbf40 bd2fcd83 3c9d9fee     >'..@.O.../....<
  4054c8:	3d705873 bc56c35b 3d5e934e bcf1a5ca     sXp=[.V.N.^=....
  4054d8:	bb930ee6 bda0bb47 bcb804bf 3cb81444     ....G.......D..<
  4054e8:	3c7762a3 bc0eaccc 3c700d44 3cce16af     .bw<....D.p<...<
  4054f8:	3c83a2b7 bcacfcee 3bd0aeef 3d25dd09     ...<.......;..%=
  405508:	3d247205 bc2b408b 3c990b6a 3d0d21a1     .r$=.@+.j..<.!.=
  405518:	3d952165 bcf1ad8d bc3830c9 bcc29e0a     e!.=.....08.....
  405528:	3ce8db20 3b8f68ff 3c6d1831 bc9adf14      ..<.h.;1.m<....
  405538:	3b8f9e84 bc05a9ad 3c27c831 3bd3f0ad     ...;....1.'<...;
  405548:	3c8117c3 bb6821e8 3ca92df7 3c0ab525     ...<.!h..-.<%..<
  405558:	3cdb4aa9 bc900f0c 3c31f7ca bbef62cf     .J.<......1<.b..
  405568:	3c54fd88 bc8a7f4a 3be7a00d ba9c0b8f     ..T<J......;....
  405578:	3c3df889 bc8dca8e 3a65e668 3bbb7d85     ..=<....h.e:.}.;
  405588:	3cca5269 bc4e0257 bb3cc7f2 bc475a9d     iR.<W.N...<..ZG.
  405598:	3c2d8574 ba0e35c1 3c4403d0 bc32c336     t.-<.5....D<6.2.
  4055a8:	ba14dc5f bc53a7b2 3b87a1f5 3b9446b4     _.....S....;.F.;
  4055b8:	3c516ac1 bc000c35 3c2a3055 bb91f119     .jQ<5...U0*<....
  4055c8:	3c344de5 bc8464b4 3b8b6c04 bc4f8148     .M4<.d...l.;H.O.
  4055d8:	bb7ecd25 bc81ae20 3b6edd18 3902fe4d     %.~. .....n;M..9
  4055e8:	3af78736 bcca39aa bc98c5ca bb379fea     6..:.9........7.
  4055f8:	bba259dd 3b3e5a99 3ad5bb89 3c057c97     .Y...Z>;...:.|.<
  405608:	3b5f6759 bb609f3d 3c010cbb 3c056e29     Yg_;=.`....<)n.<
  405618:	3c24b125 bc8bb392 bbf0af6b 3b5c9ca4     %.$<....k.....\;
  405628:	3c82012c bba2b460 b925373a bc773988     ,..<`...:7%..9w.
  405638:	bc1093cc bc0c23e5 bae0b35f 3bba905f     .....#.._..._..;
  405648:	3a6f449c bc0dabda bb067dde 3c02b425     .Do:.....}..%..<
  405658:	3c3efdd7 bc3b1514 bc17ef55 bbd15116     ..><..;.U....Q..
  405668:	bb1c5b6b bb722475 bbd6a4d2 3b9f099b     k[..u$r........;
  405678:	3b8c9728 ba714450 bb4eb22a 3b98f026     (..;PDq.*.N.&..;
  405688:	3c3d94b6 ba35a95e 39bdfd49 bbed8844     ..=<^.5.I..9D...
  405698:	3b027bf1 bba164d5 bb728599 bbc9cf82     .{.;.d....r.....
  4056a8:	bba3b72a 3702affe 3b27d9f9 3b268a18     *......7..';..&;
  4056b8:	b8d1a054 bbc89af9 baa9aadf 3a835184     T............Q.:
  4056c8:	bb40fdb7 bba65a9d ba73a395 3c126a3b     ..@..Z....s.;j.<
  4056d8:	3c2d12f3 bc02a93d bbf26710 bc074e9e     ..-<=....g...N..
  4056e8:	bbeb3380 ba22e5b7 bb51013a 3bc81025     .3....".:.Q.%..;
  4056f8:	3a451823 b97894eb b9ec2388 3b8aca74     #.E:..x..#..t..;
  405708:	3a7bdb1c baf97623 3a59cb1e 3bc22615     ..{:#v....Y:.&.;
  405718:	3b9a4134 bbc5304b bba1b470 3b567542     4A.;K0..p...BuV;
  405728:	3bace277 b9af13bb bab036ea 3aad109a     w..;.....6.....:
  405738:	3bbc5cfe ba079bc0 3a9955a7 bb3ce071     .\.;.....U.:q.<.
  405748:	3a1d587c bb2db052 3b65aec6 b9ecf149     |X.:R.-...e;I...
  405758:	398e9105 bc43702d bc36d5eb baed91be     ...9-pC...6.....
  405768:	bbf97105 3b17fd37 bb8a2182 3c4b5e38     .q..7..;.!..8^K<
  405778:	3bd9e4f9 3bbafc96 3bc37bc0 3ba9e6ae     ...;...;.{.;...;
  405788:	3beb03c5 bb6f8432 3b4a37c7 3b642c3a     ...;2.o..7J;:,d;
  405798:	3c314bd2 bbddca76 ba58b3e1 bb90cdc3     .K1<v.....X.....
  4057a8:	3bc2b735 bbdebd65 bbb7249a bbe7f7cb     5..;e....$......
  4057b8:	ba82c3b7 39adf4a3 3a78f6a1 bae15418     .......9..x:.T..
  4057c8:	3b1b565d bb57f143 3ac9bffd bc0773d2     ]V.;C.W....:.s..
  4057d8:	bc30000d bbeafffe baf3a3fc 3c08198a     ..0............<
  4057e8:	3b55d60b bc0824f2 bc02eb78 ba0098b9     ..U;.$..x.......
  4057f8:	bb24acf3 ba331379 bb212ce1 3bba3358     ..$.y.3..,!.X3.;
  405808:	3bae6808 bb662bee bb7f34a9 bb2a27dc     .h.;.+f..4...'*.
  405818:	ba9cd233 bb2791aa bb340b8b 3a270e9a     3.....'...4...':
  405828:	ba6deb55 bbb39bce bc10e2dc 3a9c2fcc     U.m........../.:
  405838:	bad5ecdc 3b30f1d0 bb00c35f 3b701ee1     ......0;_.....p;
  405848:	3ae7bd94 3907f66a 3a195754 b89c25be     ...:j..9TW.:.%..
  405858:	bb0b9951 bbd58293 bc03df7e 3b4b44b7     Q.......~....DK;
  405868:	ba986816 3ab43958 bb3f774f 3b998664     .h..X9.:Ow?.d..;
  405878:	3ad01d64 baa74d36 bba48fed 3af57868     d..:6M......hx.:
  405888:	bb139f04 3a8b3a86 bb815225 3c0a426e     .....:.:%R..nB.<
  405898:	3bd8ff0a 3b35240f ba06e4ae 39431ab6     ...;.$5;......C9
  4058a8:	3ae03d98 3a126548 3a03ab4e 3af893fb     .=.:He.:N..:...:
  4058b8:	3b4e20b5 bb4d8d92 bb6ecc26 bb306360     . N;..M.&.n.`c0.
  4058c8:	bbc6841e ba42d620 bb817927 3c1b02db     .... .B.'y.....<
  4058d8:	3ba87e0e 3ab2c2e0 bb20b9c9 3b33f007     .~.;...:.. ...3;
  4058e8:	3b719ab7 3b3859f9 3b1a290c 3a8d2268     ..q;.Y8;.).;h".:
  4058f8:	3b0a1a76 bb59d49d bb042569 3892a1a3     v..;..Y.i%.....8
  405908:	bb277b04 bb362af5 bba15047 3c00caec     .{'..*6.GP.....<
  405918:	3bd2b2eb 3a8df21c bb3720be b8cd42fe     ...;...:. 7..B..
  405928:	3a10e76e 3ac8899c ba8464a9 3b81298b     n..:...:.d...).;
  405938:	3b4a51f3 3883b4d6 bac3374d 3b4616a5     .QJ;...8M7....F;
  405948:	3b5f7a4e ba054400 bb637154 3b3a501d     Nz_;.D..Tqc..P:;
  405958:	3b978d65 3b510393 3aac4294 39aa1b9d     e..;..Q;.B.:...9
  405968:	3ae55c91 bad2c839 bb5dc0e6 3b3c24df     .\.:9.....]..$<;
  405978:	3b61152e 3b78a975 3b31389d 3b4a6264     ..a;u.x;.81;dbJ;
  405988:	3bd3d7c3 bab42b40 37837500 bb0ad42f     ...;@+...u.7/...
  405998:	3aa42437 ba726164 b9b896d7 3a925e92     7$.:dar......^.:
  4059a8:	3b08a886 b9d0d262 3a5de875 3ae010f7     ...;b...u.]:...:
  4059b8:	3b2979b6 bb293ca5 bad555dd 3b2939a0     .y);.<)..U...9);
  4059c8:	3ba562e6 ba36d880 ba01d7e5 b91cb456     .b.;..6.....V...
  4059d8:	3b836692 baaae297 ba0aff00 badb71d6     .f.;.........q..
  4059e8:	3a49f071 bb00bba7 bacd7640 3af11e66     q.I:....@v..f..:
  4059f8:	3b6f5812 ba925ee8 ba947d7b 38b5cf46     .Xo;.^..{}..F..8
  405a08:	3b60a94e baab10e5 baa6cbb1 ba6457fb     N.`;.........Wd.
  405a18:	3b3dddc7 ba8813e0 ba2fbd84 bb20d4a1     ..=;....../... .
  405a28:	ba28fd65 baecc86b ba4acea3 3a7331b3     e.(.k.....J..1s:
  405a38:	3a2060cd bb4668b0 bb2692a6 3ae54b1e     .` :.hF...&..K.:
  405a48:	3b034519 bb30fe90 bb9ffde2 3a42c153     .E.;..0.....S.B:
  405a58:	3a7c1b9a 3aa32a3c bafa7120 3b183fa7     ..|:<*.: q...?.;
  405a68:	3b0e53c0 3a8da7f4 39b12a51 3b59008d     .S.;...:Q*.9..Y;
  405a78:	3bc45bfa bab8b239 b980a69d bad5b3d1     .[.;9...........
  405a88:	3b2b2a10 bb4d65a4 bb2ed947 ba83f7f2     .*+;.eM.G.......
  405a98:	3ad41871 bb070974 bb61251e b9da3a85     q..:t....%a..:..
  405aa8:	3a5aa618 ba41a291 bb39f90b 3a9a1c4b     ..Z:..A...9.K..:
  405ab8:	3b092126 ba5b0756 bb66469b 3a5d2cc1     &!.;V.[..Ff..,]:
  405ac8:	3b1f5921 3a3a588a baf917d9 39b95acc     !Y.;.X::.....Z.9
  405ad8:	3ae1aaaa b99b1602 bb2cd6e3 3b0f3f23     ...:......,.#?.;
  405ae8:	3bb75da5 3a864fe6 b9aa2dbb bb636062     .].;.O.:.-..b`c.
  405af8:	b94b990a bafd50a3 bb522f37 3a262385     ..K..P..7/R..#&:
  405b08:	3ad22881 39cf49cc baa701b7 39f609f7     .(.:.I.9.......9
  405b18:	3b0cd4ba bad3ccf1 bb4caf71 b9ab4e08     ...;....q.L..N..
  405b28:	3abfa547 baaf1c0d bbba31c0 ba14e5f8     G..:.....1......
  405b38:	ba18cf80 3b5616f8 baf03b3c 3b4d30f6     ......V;<;...0M;
  405b48:	3b55aff5 3b2085c7 b7958006 3a73c488     ..U;.. ;......s:
  405b58:	3b5a257b 39b22af1 ba3defff ba14dcc6     {%Z;.*.9..=.....
  405b68:	3ae60b62 b819fe00 ba45c083 398876ff     b..:......E..v.9
  405b78:	3af207f0 baabf05e bb51a955 39ab74f5     ...:^...U.Q..t.9
  405b88:	3aaf1150 3ab6bbe9 bab0b412 3ae856ec     P..:...:.....V.:
  405b98:	3b54ea7e 3a94b4d8 b91ad014 39e0edf5     ~.T;...:.......9
  405ba8:	3b4cb11e ba198305 bab45181 b9a10606     ..L;.....Q......
  405bb8:	3b1cc0c0 b94ba1a1 bac26b4a b81aedfc     ...;..K.Jk......
  405bc8:	3b19e0e7 b85885fd bac1cc3e 3895e880     ...;..X.>......8

00405bd8 <IRPart1>:
  405bd8:	3df2f017 3c4a7feb 3df1d367 ba056f04     ...=..J<g..=.o..
  405be8:	3e522af5 3d5c41d0 3e806c87 be7256bd     .*R>.A\=.l.>.Vr.
  405bf8:	3b668586 be843a21 bebdd00f bec28b8f     ..f;!:..........
  405c08:	bf166aa9 3f219408 3ed502ef 3eb1b0cd     .j....!?...>...>
  405c18:	be553f7d 3ef343fa 3f90a6ca 3ef6a93f     }?U..C.>...??..>
  405c28:	3e13e20d bf4b2e5a bd8bcf34 3e8f5ba3     ...>Z.K.4....[.>
  405c38:	3e10b30b bdcd972d 3dbe4771 3e7a92e6     ...>-...qG.=..z>
  405c48:	3d9780bb 3dc7783c 3f0bd06c 3effe49b     ...=<x.=l..?...>
  405c58:	3f0233df bf181f54 be993bc1 3e03bd5a     .3.?T....;..Z..>
  405c68:	3eb0e608 3e2d9946 3da313be 3e49e01e     ...>F.->...=..I>
  405c78:	3eb28566 3eaafa94 3f158bd6 3f1b19a4     f..>...>...?...?
  405c88:	3fc75d79 3cca1ed2 3f694e09 bfa3adc1     y].?...<.Ni?....
  405c98:	bed74aba bf4c08b7 3e863172 3eb8ca1d     .J....L.r1.>...>
  405ca8:	3f611255 bf58ab82 beafbb30 bf260cbf     U.a?..X.0.....&.
  405cb8:	3ec2a5e8 be81fa12 bdcb4487 bf566e22     ...>.....D.."nV.
  405cc8:	be3be1a8 be8e4042 be07bc3c bf0351f0     ..;.B@..<....Q..
  405cd8:	bebf62d8 be700a7c be3d4fdf bdaf9bdc     .b..|.p..O=.....
  405ce8:	bdb8dc55 bdf8dbcf be0c22ee be439fba     U........"....C.
  405cf8:	be67824d bdcf4730 be288a05 3d58a3b5     M.g.0G....(...X=
  405d08:	bcb6be6e 3c546d40 bd91b8e0 3d1c9654     n...@mT<....T..=
  405d18:	3e014c23 3d3a36e3 3d8a091e be0769a9     #L.>.6:=...=.i..
  405d28:	3d2f0d84 bdda98ee bd25233b be11f1d0     ../=....;#%.....
  405d38:	3c2605b9 bd445be5 bc9e1488 be29edc0     ..&<.[D.......).
  405d48:	bda44079 bd2a738c 3b8c464a bd9af676     y@...s*.JF.;v...
  405d58:	bd68fee2 bda9245f bd805e52 bd2b58a9     ..h._$..R^...X+.
  405d68:	bce99c46 3b5053eb 3c563f3c bd08038a     F....SP;<?V<....
  405d78:	bbc1b110 bd2fa5c5 bc63cd9a bd41490b     ....../...c..IA.
  405d88:	bcdc9aa0 bc86a74f 3c0bba9e 3bc13ca1     ....O......<.<.;
  405d98:	3d5d546f bc82e4ec 3d1ea613 bd9b5b3b     oT]=.......=;[..
  405da8:	bbd363aa bd81e860 bc13f845 bd375f7d     .c..`...E...}_7.
  405db8:	bb85eb11 bcd49a56 3c513653 bce8a4cf     ....V...S6Q<....
  405dc8:	3c4d3324 bd0024ce 3c8bee4b bd001330     $3M<.$..K..<0...
  405dd8:	3caee195 bd09f1f1 3cb7d707 bd23042c     ...<.......<,.#.
  405de8:	3ca5965d bd23f35a 3ce62b78 bd3277ed     ]..<Z.#.x+.<.w2.
  405df8:	3c872812 bd7b852c 3bb44ed2 bd296d9d     .(.<,.{..N.;.m).
  405e08:	3c84eff4 bd79df55 bcee2004 bd0228cf     ...<U.y.. ...(..
  405e18:	3d3a5043 3b101d44 3d3faf78 bda4e85a     CP:=D..;x.?=Z...
  405e28:	baafc7d9 bd93a803 bc676351 bd89fcd9     ........Qcg.....
  405e38:	bd1c3c5c bd0bc424 3b1f30dd 3bfbb79c     \<..$....0.;...;
  405e48:	3d47ae9b bd40285f bcdc9349 bd8c3f74     ..G=_(@.I...t?..
  405e58:	bb1c634e 3b3d5f1c 3cf4aeff bd4af6b9     Nc..._=;...<..J.
  405e68:	bc222d11 bd3abda1 bb50a620 bd122d7a     .-"...:. .P.z-..
  405e78:	bbfccb17 bced5b83 391263bd bce326ab     .....[...c.9.&..
  405e88:	bb8dac7b bce75976 bbda3ba0 bca96081     {...vY...;...`..
  405e98:	3b57ddf8 bc2061eb 3c88cbec bc9376d5     ..W;.a ....<.v..
  405ea8:	3c76f81a bce165ab 3c354dc0 bcf0295e     ..v<.e...M5<^)..
  405eb8:	3c4695e7 bd088d02 3b22e5c9 bd162a5e     ..F<......";^*..
  405ec8:	bad3d5ab bd12fb85 bc9d9bbd bcc9ce80     ................
  405ed8:	3ac733b1 bb3698d9 3c0279c2 bc91ccb1     .3.:..6..y.<....
  405ee8:	3c818175 bc7f7165 3b19450b bd2664ef     u..<eq...E.;.d&.
  405ef8:	bca6ac72 bbdc1b49 3c79d833 3c1ab4e2     r...I...3.y<...<
  405f08:	3d16055b bc97e88a 3b94c991 bd3dee78     [..=.......;x.=.
  405f18:	bc73c0c2 bb77c096 3cc3a033 ba9e886c     ..s...w.3..<l...
  405f28:	3c7c17a9 bca2e573 3c941992 bb12dd68     ..|<s......<h...
  405f38:	3d53dbd0 bca65351 3cc98f60 bd8473b2     ..S=QS..`..<.s..
  405f48:	bbd40464 bd2d7c1f bbdd0ee4 bd271ea3     d....|-.......'.
  405f58:	bcbdb750 bc8d5121 3b23024e bb912a1f     P...!Q..N.#;.*..
  405f68:	3be2fc7a bc60b6fa 3c3a4f1c bc9e7ae0     z..;..`..O:<.z..
  405f78:	3a912ae0 bcd1d290 bb312bb2 bc9ccf44     .*.:.....+1.D...
  405f88:	bc18061c bc8df76f bc428c01 3b86d343     ....o.....B.C..;
  405f98:	3c968c9f 3c3679a4 3cc2d242 bc76de84     ...<.y6<B..<..v.
  405fa8:	3c851d41 bc9531f6 3b182e60 bd0d7db2     A..<.1..`..;.}..
  405fb8:	bce2a32e 3b66a693 3cecb139 3cf85ff9     ......f;9..<._.<
  405fc8:	3d307f09 bca9208b 3ca9df62 bcc91919     ..0=. ..b..<....
  405fd8:	3ca4ffff bd0de00d bb9d2453 bd1057b7     ...<....S$...W..
  405fe8:	bc50e347 bc9b6b96 bc4f1943 3b4bda5f     G.P..k..C.O._.K;
  405ff8:	3c92bc30 3bb1d956 3c17d122 bc748c9a     0..<V..;"..<..t.
  406008:	3c3b2dd3 bb7363e5 3bd0500f bc924e4c     .-;<.cs..P.;LN..
  406018:	3ac08aca 3b4a1c43 3c81af2d bbcbf58c     ...:C.J;-..<....
  406028:	3c08aca2 3a571e34 3cd310e9 bc053284     ...<4.W:...<.2..
  406038:	3b55d6e2 bc853056 3c1dc27e 3beb0094     ..U;V0..~..<...;
  406048:	3cc81436 bbb668f3 3c5b43f3 bbf23d4a     6..<.h...C[<J=..
  406058:	3cbadac7 bb199842 3ca3baba bc3b4c06     ...<B......<.L;.
  406068:	3cd37c7f bb90d901 3cef709b bcd5995a     .|.<.....p.<Z...
  406078:	3bd25812 bcc9c6be 3b923623 bc4881e4     .X.;....#6.;..H.
  406088:	3c117c49 babe124a 3cc0fc14 bb223d01     I|.<J......<.=".
  406098:	3cef3e11 bc812e69 3c6a9c56 bce85879     .>.<i...V.j<yX..
  4060a8:	3bf520be bc1d3651 3cb636be bcad63e6     . .;Q6...6.<.c..
  4060b8:	bb764973 bcb6f95c 3bf2e2b6 3b8a5605     sIv.\......;.V.;
  4060c8:	3ce45ca1 bc315c2e 3c6089ae bcd13bc7     .\.<.\1...`<.;..
  4060d8:	3c0c6680 bc5758ac 3c8c2ee2 bcbec38a     .f.<.XW....<....
  4060e8:	bb8f67e7 bce1ae3b bc0ec784 bbc61c59     .g..;.......Y...
  4060f8:	3bf25486 39cf0242 3c2d3268 bc52f281     .T.;B..9h2-<..R.
  406108:	ba3d5e70 bc2084c5 3995675b bb4b6519     p^=... .[g.9.eK.
  406118:	3b5fdd76 3be40c04 3c9bf778 3b72d29b     v._;...;x..<..r;
  406128:	3c925fe9 bb62f2ff 3cbdeeae bc2aeafb     ._.<..b....<..*.
  406138:	3c23f3fb bca50035 3ae784df bc37fe74     ..#<5......:t.7.
  406148:	3a89fb6c bb341bfc 3c245a52 3ae99c10     l..:..4.RZ$<...:
  406158:	3c3d5c82 bb4bbb80 3c46610d bb05c9ae     .\=<..K..aF<....
  406168:	3c594c37 bb6fce2f 3c49eb71 bbc34189     7LY</.o.q.I<.A..
  406178:	3c07af97 baf68228 3c87c2d8 3a3aa742     ...<(......<B.::
  406188:	3c8592b1 bbd93464 3c4dc9b7 bbf57aec     ...<d4....M<.z..
  406198:	3c03a155 bb119b73 3c9d008c 3aafb260     U..<s......<`..:
  4061a8:	3c87bea6 bc34cf80 3c2bc4aa bba1c02f     ...<..4...+</...
  4061b8:	3c61efdf bbb6821d 3c36e9a1 bbc8de15     ..a<......6<....
  4061c8:	3bf8b61f bb1ad2aa 3c82cfbe 3bc21690     ...;.......<...;
  4061d8:	3cc19e9b bbdd8f27 3c5967e6 bc18314f     ...<'....gY<O1..
  4061e8:	3c636a9e bbe1503d 3c1de1f3 bbda10d8     .jc<=P.....<....
  4061f8:	3c230c95 b9fec4d3 3c83fe92 3b5ca35a     ..#<.......<Z.\;
  406208:	3cd2df36 bb46b2d7 3cb311db bc7f822c     6..<..F....<,...
  406218:	3c1d3012 bca345b5 bb9c98bd bc0c8b49     .0.<.E......I...
  406228:	3bc2a62d 3c211975 3ca34a52 3a482ada     -..;u.!<RJ.<.*H:
  406238:	3c5d0600 bbb91408 3c4a884f ba7268a4     ..]<....O.J<.hr.
  406248:	3c86bc47 bb3d9725 3c3e905f bbac6d71     G..<%.=._.><qm..
  406258:	3c461375 3a6ddcf9 3c8515e9 395e21e7     u.F<..m:...<.!^9
  406268:	3ca1b98e b9a886d0 3cb2dab3 bc080da0     ...<.......<....
  406278:	3c6374af bc55687d 3ba7d1c1 bc05a4db     .tc<}hU....;....
  406288:	3c0edd1d 3b1fb38f 3c68c1f6 baef1c58     ...<...;..h<X...
  406298:	3c404bb5 3af935b6 3ca2287f ba301404     .K@<.5.:.(.<..0.
  4062a8:	3c671a56 bb88e1a6 3c9656b9 bab132e8     V.g<.....V.<.2..
  4062b8:	3c729549 bc14d732 3c0d35a8 bab9abde     I.r<2....5.<....
  4062c8:	3c7407a4 3b430a81 3cac485d 3b27d0bf     ..t<..C;]H.<..';
  4062d8:	3cdb870f bc00596c 3c6d7e1d bc805f36     ...<lY...~m<6_..
  4062e8:	3c1694c2 bc017c82 3c007053 bbabe145     ...<.|..Sp.<E...
  4062f8:	3c3a14cf 3b31f98d 3c9ccc8a bb327101     ..:<..1;...<.q2.
  406308:	3c71db0f bbe73c7a 3c44bcc8 bba0a795     ..q<z<....D<....
  406318:	3c80848a bb3c2205 3c694e0d bc35441a     ...<."<..Ni<.D5.
  406328:	3b890476 bbb137db 3c1a36a2 3b2e6889     v..;.7...6.<.h.;
  406338:	3c8280e4 3b0348f5 3c95f5d6 bb8c75da     ...<.H.;...<.u..
  406348:	3c7bd34b bbdfbe82 3c3671ac bc3253a5     K.{<.....q6<.S2.
  406358:	3b51970c bb1547fb 3c664402 3b14d8eb     ..Q;.G...Df<...;
  406368:	3c524760 bbca2035 3bfc35dc bb419231     `GR<5 ...5.;1.A.
  406378:	3c256ffc 3ace51b2 3c806de4 baa878db     .o%<.Q.:.m.<.x..
  406388:	3c342104 bc082f44 3a95de23 bb268bc5     .!4<D/..#..:..&.
  406398:	3bf3f81f 3c27ea2a 3c9be1a8 3b657a43     ...;*.'<...<Cze;
  4063a8:	3c60bc02 bb1bfa72 3c4c9f80 ba45adfd     ..`<r.....L<..E.
  4063b8:	3c3f430c 396c47e7 3c5d1443 38b983fa     .C?<.Gl9C.]<...8
  4063c8:	3c43d46b b9c29b34 3c546cd4 397772be     k.C<4....lT<.rw9

004063d8 <IRPart0>:
  4063d8:	bde9203a bc52ffed 3e0af859 3d0c938c     : ....R.Y..>...=
  4063e8:	be37d673 b719b701 3eb22728 3ed6d17c     s.7.....('.>|..>
  4063f8:	3efd62bf befbed52 be06ec18 be8e8a50     .b.>R.......P...
  406408:	3e040af2 bebb89b5 be4a8976 bee378ab     ...>....v.J..x..
  406418:	beed7aff bf5a149c bff1a805 3e8b8de7     .z....Z........>
  406428:	3e174fb5 3fec89f4 3f593b8e be5fe75c     .O.>...?.;Y?\._.
  406438:	be8ccee6 bd79dab7 be1bfc22 3d0c99a1     ......y."......=
  406448:	becb14cb 3ee14b16 3c699f6b 3f0547bf     .....K.>k.i<.G.?
  406458:	3d5b5195 3f4727bb 3f4528bf 3f1fbc1b     .Q[=.'G?.(E?...?
  406468:	3f5e1cde 3e1509c0 3f06b431 bf151090     ..^?...>1..?....
  406478:	bebc23b8 3f2abf12 40143055 3f4596c8     .#....*?U0.@..E?
  406488:	3fcbd7b2 c019527e bf5674b0 c003544c     ...?~R...tV.LT..
  406498:	bfcf1705 bdc27137 3f9a1427 3f18a516     ....7q..'..?...?
  4064a8:	bdb676dd c055de6a c067db23 be4e1c9b     .v..j.U.#.g...N.
  4064b8:	bf89119d 3fc43dee bf3b1c43 3fb49d49     .....=.?C.;.I..?
  4064c8:	3f28fdf4 3f96fc7a 3e536ef8 3ef33a47     ..(?z..?.nS>G:.>
  4064d8:	3f61b457 3f114fbe 3f028eb4 bed67770     W.a?.O.?...?pw..
  4064e8:	3da5927c be35946c bc366ebc bdc0b905     |..=l.5..n6.....
  4064f8:	3bb92032 bdeef566 be836fe3 3e3d14e4     2 .;f....o....=>
  406508:	3eb7f844 3e3318b9 bdf3f4aa bdd54435     D..>..3>....5D..
  406518:	3e9a4e7b 3e855c96 3da741c3 be984cad     {N.>.\.>.A.=.L..
  406528:	3d78845b 3e301a7a 3e8ab170 be788b11     [.x=z.0>p..>..x.
  406538:	bdcbe313 be8343d9 be494ee4 bcc3745e     .....C...NI.^t..
  406548:	3d23b3cf 3d69fcf4 bdc4112f bd9bb144     ..#=..i=/...D...
  406558:	3c821731 3dbe56e8 bd31f992 bd2c89b1     1..<.V.=..1...,.
  406568:	3d8558d0 3dbf5184 bbb4c920 bdd4f82f     .X.=.Q.= .../...
  406578:	bc2d1867 3da5efdc 3d7411d0 3b7f0707     g.-....=..t=...;
  406588:	3e2d905c bd937a08 be17ccc0 be885165     \.->.z......eQ..
  406598:	be040315 3df621fb bd59439e bd70a824     .....!.=.CY.$.p.
  4065a8:	bda8d5f0 3e1fdc16 3d799949 3bd56db0     .......>I.y=.m.;
  4065b8:	bcaf62fa 3d7c9405 3d097df8 3c9e8e61     .b....|=.}.=a..<
  4065c8:	3d1bb6fb 3d72abb9 3d6208ef bc54d61b     ...=..r=..b=..T.
  4065d8:	3d826ecd 3cbfe26e 3d89ceb6 bd274fb5     .n.=n..<...=.O'.
  4065e8:	3e0b2aae bd8db779 bd845a45 be89f2fe     .*.>y...EZ......
  4065f8:	be514446 3cfaa3d5 bce49aea 3da680b8     FDQ....<.......=
  406608:	3dbbc218 3d071d46 bc9ee0cc be21bde8     ...=F..=......!.
  406618:	bdbbbbdb 3cba31c0 bd1a8b31 bd8b26c0     .....1.<1....&..
  406628:	bdf27243 3ceeb448 bd9de88b 3c75401e     Cr..H..<.....@u<
  406638:	bdbfc116 3dd54b06 bd1a3840 3ddb8455     .....K.=@8..U..=
  406648:	3d85f60c 3e25bea1 3db777a9 bcc60faf     ...=..%>.w.=....
  406658:	3b9102f2 3d7aca1b 3d9c40f9 bb34ef60     ...;..z=.@.=`.4.
  406668:	3d26dda0 3c9b8887 3d45d08f bdadd774     ..&=...<..E=t...
  406678:	bdb022b5 3c147045 3d072a7c 3d804ba8     ."..Ep.<|*.=.K.=
  406688:	3d3eb166 bbe18516 bca8f87c bcdc26a7     f.>=....|....&..
  406698:	bb01d27e 3d8d1d1f 3d599cbf 3c1e713a     ~......=..Y=:q.<
  4066a8:	3d39ff86 3ccf2f7e 3d600e0d bd30e271     ..9=~/.<..`=q.0.
  4066b8:	b8892001 bb922d7f 3cdca304 3c000f5a     . ...-.....<Z..<
  4066c8:	3daff188 3ccbe073 3dd17482 bde4cd75     ...=s..<.t.=u...
  4066d8:	bc80a1e6 bdff3ade bda901df bdae5d0b     .....:.......]..
  4066e8:	bd8f0897 3c841249 bd0600cb 3b4fa1e9     ....I..<......O;
  4066f8:	3acc7d47 3d26d2b8 3c9ebb0c bce2e67f     G}.:..&=...<....
  406708:	3c701d9f 3ad9b137 3cda81f7 bd9b3213     ..p<7..:...<.2..
  406718:	bd0d4802 bda3f9a5 bdfc0b9a bda3a084     .H..............
  406728:	bdf40b35 3d95aa64 bd5824ba 3d30d321     5...d..=.$X.!.0=
  406738:	bd2f0c42 3df2bfdb 3d6c2d6b 3d80f3cb     B./....=k-l=...=
  406748:	3d2eeeb0 3ceb6f85 3d1f90da bc55d58a     ...=.o.<...=..U.
  406758:	3cbe9715 bc91460e bd1f10d2 bd06025e     ...<.F......^...
  406768:	3cba02c6 3d7fc77b 3d062fc5 bdc146bc     ...<{..=./.=.F..
  406778:	bdafa5aa bb92e19a bd01b775 bc13d88f     ........u.......
  406788:	bdb80bd3 3d16fc81 bd4b4bc3 3d9ed65d     .......=.KK.]..=
  406798:	bc16888d 3df327aa 3d19c33a 3dbf0b36     .....'.=:..=6..=
  4067a8:	3dd1b047 3dcdcca7 3dba9e11 bcaf1f73     G..=...=...=s...
  4067b8:	3d900340 3d561abf 3dda786c bd8357a3     @..=..V=lx.=.W..
  4067c8:	3cdb8dc5 3c686686 3e0893fb bd79260c     ...<.fh<...>.&y.
  4067d8:	3cc47ff7 bdb7dffe 3d120261 bdcca52a     ...<....a..=*...
  4067e8:	bd482426 bd8cb055 3c1c9a35 bd279f81     &$H.U...5..<..'.
  4067f8:	bcbb3b75 bd925339 bd0b5d7c bd6cd72e     u;..9S..|]....l.
  406808:	bd37b579 bd456eba bd899c61 bd63e7d1     y.7..nE.a.....c.
  406818:	bdadab19 bba96ce1 bd9e2aa8 3b750db4     .....l...*....u;
  406828:	bd2d7152 3d3edab7 bd4f7e07 bd055391     Rq-...>=.~O..S..
  406838:	bdf9945b 3d8643bf bd4dae59 3dd15832     [....C.=Y.M.2X.=
  406848:	3be4c9ef 3e167ad9 3da80651 3d51df40     ...;.z.>Q..=@.Q=
  406858:	3d0b133f 3d7e8cce 3dc5b559 3c672325     ?..=..~=Y..=%#g<
  406868:	3d235b6a bb7a2c56 3d6cbd48 bc94c3dc     j[#=V,z.H.l=....
  406878:	3d0d6869 bc1bd157 3d5482a4 bd740109     ih.=W.....T=..t.
  406888:	bcaad70e bd0cacd2 3c93f580 bcff2402     ...........<.$..
  406898:	bcc262e6 bcd536ff 3b5c6b25 bcb4f7c4     .b...6..%k\;....
  4068a8:	bcc5483e bc753edc 3c1278f4 bcb31099     >H...>u..x.<....
  4068b8:	bd120b15 bd37ca57 bd6c084c bbc46473     ....W.7.L.l.sd..
  4068c8:	bce202bf 3c9f658b bd431975 bc90ed58     .....e.<u.C.X...
  4068d8:	bd9325ba 3d7657c6 bcc89749 3d83fe4f     .%...Wv=I...O..=
  4068e8:	3c029c07 3de8dfbd 3daaadf4 3d1e3c7c     ...<...=...=|<.=
  4068f8:	3d38d386 3d192296 3dc5b1a0 bc9aca87     ..8=.".=...=....
  406908:	3c791596 bd1de269 3cf5c514 bcd9f78d     ..y<i......<....
  406918:	bc1ac92f bca52ac7 3c8d6ab7 b9e4ce5d     /....*...j.<]...
  406928:	3c9e4aa4 bb8b31a2 3d115974 bcdfbe0b     .J.<.1..tY.=....
  406938:	3c8cea94 bd112a7a b9bd79c0 bd8e0f80     ...<z*...y......
  406948:	bd725171 bc6e51ed 3bc91f18 3c37ce38     qQr..Qn....;8.7<
  406958:	3be5eb01 bcf1d748 bcf315a1 bd32a2b5     ...;H.........2.
  406968:	bd29ab45 3c28b2a7 bc20830d bc008d8f     E.)...(<.. .....
  406978:	bcb17d1b 3c599319 3b52b13d bcc5c861     .}....Y<=.R;a...
  406988:	bd3c5a59 bbaac424 bcdc475e bbb5b599     YZ<.$...^G......
  406998:	bd7e7c22 3d09bb6b 3b86b5d2 3d5ab218     "|~.k..=...;..Z=
  4069a8:	3c6986ac 3c9bcacc bbde6fcd bc3147a1     ..i<...<.o...G1.
  4069b8:	bd05bc02 3d245423 3c718945 3ce83bbe     ....#T$=E.q<.;.<
  4069c8:	bb62b618 3d2926ba 3d286f1f 3cb18ca0     ..b..&)=.o(=...<
  4069d8:	3c078997 3c856275 3d2adbe1 3c9ea430     ...<ub.<..*=0..<
  4069e8:	3d18a512 bb59d2f0 3ce7afdd bcf18a1b     ...=..Y....<....
  4069f8:	39273aa0 bbd88e77 3cab0780 bca23041     .:'9w......<A0..
  406a08:	bbb17685 bbf434b0 3c9b544f bc83e964     .v...4..OT.<d...
  406a18:	bb80ebf9 bcae4c44 bc665d98 bcc910b5     ....DL...]f.....
  406a28:	bc933857 3c6b24a7 3b0ae4a0 bc94e931     W8...$k<...;1...
  406a38:	bcd8537e 3ce2d3d5 3d1d6536 bb8f72a4     ~S.....<6e.=.r..
  406a48:	bcb3fd28 bc83e99a 3acf4750 3b66aa19     (.......PG.:..f;
  406a58:	bc494340 3b9b709f 3ac529eb 3b3d362c     @CI..p.;.).:,6=;
  406a68:	bb88a987 3cdc53be 3d205972 bb86ac97     .....S.<rY =....
  406a78:	bace210b bc27fb5c 3c9d4a28 bc737832     .!..\.'.(J.<2xs.
  406a88:	bc385c68 bc3d8673 3bf229be bc588781     h\8.s.=..).;..X.
  406a98:	bc847aef bb15c24a 3c22c923 bbe2a998     .z..J...#."<....
  406aa8:	bc20db62 3a367105 3c9ffc54 bc69ba43     b. ..q6:T..<C.i.
  406ab8:	bc6d7767 bc737a4b 3c18676a bc927e88     gwm.Kzs.jg.<.~..
  406ac8:	bcbc3647 bcc9ec7d bc910683 bc847652     G6..}.......Rv..
  406ad8:	bcf45217 bb91b636 bcb7e25a bc90777c     .R..6...Z...|w..
  406ae8:	bd5e2ea4 3c44d735 bcc9ab0f 3c8339a6     ..^.5.D<.....9.<
  406af8:	bd33d7d4 3d2705c9 3b9c33fe 3d2886b7     ..3...'=.3.;..(=
  406b08:	bc0b2fbf 3d17a6e6 3ca8d328 3ce0a30e     ./.....=(..<...<
  406b18:	3a893015 3cdcadeb 3cc3f9f5 3c91a686     .0.:...<...<...<
  406b28:	3b421209 3cddd533 3d20f0c1 3c8e955a     ..B;3..<.. =Z..<
  406b38:	3c88e40a 3c031bbe 3d037d12 b9f58bef     ...<...<.}.=....
  406b48:	3c585165 3be030ad 3d135ed2 bc44dafb     eQX<.0.;.^.=..D.
  406b58:	3ad6e179 badbd6d6 3d0e7203 bbcdd637     y..:.....r.=7...
  406b68:	3c4701b2 bbfa4fa7 3d1b7ab0 bcdf5f41     ..G<.O...z.=A_..
  406b78:	bbaeaaa3 bcdf8edc 3c9a28d6 bcf32922     .........(.<")..
  406b88:	bcb1d606 bcef6f8f b5700006 bcb4960a     .....o....p.....
  406b98:	bd0763d7 bc930312 bc281776 bbc1807e     .c......v.(.~...
  406ba8:	bcf8fffc 3b24bcb8 3a80057c 3b9b175e     ......$;|..:^..;
  406bb8:	bcab0242 3bafd75e 3bff61ca 3ba2df3e     B...^..;.a.;>..;
  406bc8:	bc7cf016 3b85c551 3c43a2ed 3b1be9d6     ..|.Q..;..C<...;
  406bd8:	73736143 65747465 616c7020 20726579     Cassette player 
  406be8:	766e6f63 74756c6f 206e6f69 000d4e4f     convolution ON..
  406bf8:	73736143 65747465 616c7020 20726579     Cassette player 
  406c08:	766e6f63 74756c6f 206e6f69 0d46464f     convolution OFF.
  406c18:	00000000 2c757066 0d642520 0000000a     ....fpu, %d.....
  406c28:	6f420a0d 5f647261 74696e49 63757320     ..Board_Init suc
  406c38:	73736563 0d6c7566 776f4e0a 61747320     cessful..Now sta
  406c48:	6e697472 72702067 6172676f 000a0d6d     rting program...
  406c58:	73736143 65747465 63657220 6564726f     Cassette recorde
  406c68:	6f632072 6c6f766e 6f697475 464f206e     r convolution OF
  406c78:	00000d46 20495754 74696e49 696c6169     F...TWI Initiali
  406c88:	0d64657a 0000000a                       zed.....

00406c90 <Representation.14388>:
  406c90:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  406ca0:	00000000 54524155 696e4920 6c616974     ....UART Initial
  406cb0:	64657a69 0000000d                       ized....

00406cb8 <arm_cfft_sR_f32_len512>:
  406cb8:	00000200 00407048 00406cc8 000001c0     ....Hp@..l@.....

00406cc8 <armBitRevIndexTable512>:
  406cc8:	02000008 04000010 06000018 08000020     ............ ...
  406cd8:	0a000028 0c000030 0e000038 02400048     (...0...8...H.@.
  406ce8:	04400050 06400058 08400060 0a400068     P.@.X.@.`.@.h.@.
  406cf8:	0c400070 0e400078 02800088 04800090     p.@.x.@.........
  406d08:	06800098 088000a0 0a8000a8 0c8000b0     ................
  406d18:	0e8000b8 02c000c8 04c000d0 06c000d8     ................
  406d28:	08c000e0 0ac000e8 0cc000f0 0ec000f8     ................
  406d38:	03000108 05000110 07000118 09000120     ............ ...
  406d48:	0b000128 0d000130 0f000138 03400148     (...0...8...H.@.
  406d58:	05400150 07400158 09400160 0b400168     P.@.X.@.`.@.h.@.
  406d68:	0d400170 0f400178 03800188 05800190     p.@.x.@.........
  406d78:	07800198 098001a0 0b8001a8 0d8001b0     ................
  406d88:	0f8001b8 03c001c8 05c001d0 07c001d8     ................
  406d98:	09c001e0 0bc001e8 0dc001f0 0fc001f8     ................
  406da8:	04080210 06080218 08080220 0a080228     ........ ...(...
  406db8:	0c080230 0e080238 04480250 06480258     0...8...P.H.X.H.
  406dc8:	08480260 0a480268 0c480270 0e480278     `.H.h.H.p.H.x.H.
  406dd8:	04880290 06880298 088802a0 0a8802a8     ................
  406de8:	0c8802b0 0e8802b8 04c802d0 06c802d8     ................
  406df8:	08c802e0 0ac802e8 0cc802f0 0ec802f8     ................
  406e08:	05080310 07080318 09080320 0b080328     ........ ...(...
  406e18:	0d080330 0f080338 05480350 07480358     0...8...P.H.X.H.
  406e28:	09480360 0b480368 0d480370 0f480378     `.H.h.H.p.H.x.H.
  406e38:	05880390 07880398 098803a0 0b8803a8     ................
  406e48:	0d8803b0 0f8803b8 05c803d0 07c803d8     ................
  406e58:	09c803e0 0bc803e8 0dc803f0 0fc803f8     ................
  406e68:	06100418 08100420 0a100428 0c100430     .... ...(...0...
  406e78:	0e100438 06500458 08500460 0a500468     8...X.P.`.P.h.P.
  406e88:	0c500470 0e500478 06900498 089004a0     p.P.x.P.........
  406e98:	0a9004a8 0c9004b0 0e9004b8 06d004d8     ................
  406ea8:	08d004e0 0ad004e8 0cd004f0 0ed004f8     ................
  406eb8:	07100518 09100520 0b100528 0d100530     .... ...(...0...
  406ec8:	0f100538 07500558 09500560 0b500568     8...X.P.`.P.h.P.
  406ed8:	0d500570 0f500578 07900598 099005a0     p.P.x.P.........
  406ee8:	0b9005a8 0d9005b0 0f9005b8 07d005d8     ................
  406ef8:	09d005e0 0bd005e8 0dd005f0 0fd005f8     ................
  406f08:	08180620 0a180628 0c180630 0e180638      ...(...0...8...
  406f18:	08580660 0a580668 0c580670 0e580678     `.X.h.X.p.X.x.X.
  406f28:	089806a0 0a9806a8 0c9806b0 0e9806b8     ................
  406f38:	08d806e0 0ad806e8 0cd806f0 0ed806f8     ................
  406f48:	09180720 0b180728 0d180730 0f180738      ...(...0...8...
  406f58:	09580760 0b580768 0d580770 0f580778     `.X.h.X.p.X.x.X.
  406f68:	099807a0 0b9807a8 0d9807b0 0f9807b8     ................
  406f78:	09d807e0 0bd807e8 0dd807f0 0fd807f8     ................
  406f88:	0a200828 0c200830 0e200838 0a600868     (. .0. .8. .h.`.
  406f98:	0c600870 0e600878 0aa008a8 0ca008b0     p.`.x.`.........
  406fa8:	0ea008b8 0ae008e8 0ce008f0 0ee008f8     ................
  406fb8:	0b200928 0d200930 0f200938 0b600968     (. .0. .8. .h.`.
  406fc8:	0d600970 0f600978 0ba009a8 0da009b0     p.`.x.`.........
  406fd8:	0fa009b8 0be009e8 0de009f0 0fe009f8     ................
  406fe8:	0c280a30 0e280a38 0c680a70 0e680a78     0.(.8.(.p.h.x.h.
  406ff8:	0ca80ab0 0ea80ab8 0ce80af0 0ee80af8     ................
  407008:	0d280b30 0f280b38 0d680b70 0f680b78     0.(.8.(.p.h.x.h.
  407018:	0da80bb0 0fa80bb8 0de80bf0 0fe80bf8     ................
  407028:	0e300c38 0e700c78 0eb00cb8 0ef00cf8     8.0.x.p.........
  407038:	0f300d38 0f700d78 0fb00db8 0ff00df8     8.0.x.p.........

00407048 <twiddleCoef_512>:
  407048:	3f800000 00000000 3f7ffb11 3c490e90     ...?.......?..I<
  407058:	3f7fec43 3cc90ab0 3f7fd398 3d16c32c     C..?...<...?,..=
  407068:	3f7fb10f 3d48fb2f 3f7f84ab 3d7b2b74     ...?/.H=...?t+{=
  407078:	3f7f4e6d 3d96a905 3f7f0e58 3dafb680     mN.?...=X..?...=
  407088:	3f7ec46d 3dc8bd36 3f7e70b0 3de1bc2e     m.~?6..=.p~?...=
  407098:	3f7e1324 3dfab273 3f7dabcc 3e09cf86     $.~?s..=..}?...>
  4070a8:	3f7d3aac 3e164083 3f7cbfc9 3e22abb6     .:}?.@.>..|?..">
  4070b8:	3f7c3b28 3e2f10a2 3f7baccd 3e3b6ecf     (;|?../>..{?.n;>
  4070c8:	3f7b14be 3e47c5c2 3f7a7302 3e541501     ..{?..G>.sz?..T>
  4070d8:	3f79c79d 3e605c13 3f791298 3e6c9a7f     ..y?.\`>..y?..l>
  4070e8:	3f7853f8 3e78cfcc 3f778bc5 3e827dc0     .Sx?..x>..w?.}.>
  4070f8:	3f76ba07 3e888e93 3f75dec6 3e8e9a22     ..v?...>..u?"..>
  407108:	3f74fa0b 3e94a031 3f740bdd 3e9aa086     ..t?1..>..t?...>
  407118:	3f731447 3ea09ae5 3f721352 3ea68f12     G.s?...>R.r?...>
  407128:	3f710908 3eac7cd4 3f6ff573 3eb263ef     ..q?.|.>s.o?.c.>
  407138:	3f6ed89e 3eb8442a 3f6db293 3ebe1d4a     ..n?*D.>..m?J..>
  407148:	3f6c835e 3ec3ef15 3f6b4b0c 3ec9b953     ^.l?...>.Kk?S..>
  407158:	3f6a09a7 3ecf7bca 3f68bf3c 3ed53641     ..j?.{.><.h?A6.>
  407168:	3f676bd8 3edae880 3f660f88 3ee0924f     .kg?...>..f?O..>
  407178:	3f64aa59 3ee63375 3f633c5a 3eebcbbb     Y.d?u3.>Z<c?...>
  407188:	3f61c598 3ef15aea 3f604621 3ef6e0cb     ..a?.Z.>!F`?...>
  407198:	3f5ebe05 3efc5d27 3f5d2d53 3f00e7e4     ..^?'].>S-]?...?
  4071a8:	3f5b941a 3f039c3d 3f59f26a 3f064b82     ..[?=..?j.Y?.K.?
  4071b8:	3f584853 3f08f59b 3f5695e5 3f0b9a6b     SHX?...?..V?k..?
  4071c8:	3f54db31 3f0e39da 3f531849 3f10d3cd     1.T?.9.?I.S?...?
  4071d8:	3f514d3d 3f13682a 3f4f7a1f 3f15f6d9     =MQ?*h.?.zO?...?
  4071e8:	3f4d9f02 3f187fc0 3f4bbbf8 3f1b02c6     ..M?...?..K?...?
  4071f8:	3f49d112 3f1d7fd1 3f47de65 3f1ff6cb     ..I?...?e.G?...?
  407208:	3f45e403 3f226799 3f43e200 3f24d225     ..E?.g"?..C?%.$?
  407218:	3f41d870 3f273656 3f3fc767 3f299415     p.A?V6'?g.??..)?
  407228:	3f3daef9 3f2beb4a 3f3b8f3b 3f2e3bde     ..=?J.+?;.;?.;.?
  407238:	3f396842 3f3085bb 3f373a23 3f32c8c9     Bh9?..0?#:7?..2?
  407248:	3f3504f3 3f3504f3 3f32c8c9 3f373a23     ..5?..5?..2?#:7?
  407258:	3f3085bb 3f396842 3f2e3bde 3f3b8f3b     ..0?Bh9?.;.?;.;?
  407268:	3f2beb4a 3f3daef9 3f299415 3f3fc767     J.+?..=?..)?g.??
  407278:	3f273656 3f41d870 3f24d225 3f43e200     V6'?p.A?%.$?..C?
  407288:	3f226799 3f45e403 3f1ff6cb 3f47de65     .g"?..E?...?e.G?
  407298:	3f1d7fd1 3f49d112 3f1b02c6 3f4bbbf8     ...?..I?...?..K?
  4072a8:	3f187fc0 3f4d9f02 3f15f6d9 3f4f7a1f     ...?..M?...?.zO?
  4072b8:	3f13682a 3f514d3d 3f10d3cd 3f531849     *h.?=MQ?...?I.S?
  4072c8:	3f0e39da 3f54db31 3f0b9a6b 3f5695e5     .9.?1.T?k..?..V?
  4072d8:	3f08f59b 3f584853 3f064b82 3f59f26a     ...?SHX?.K.?j.Y?
  4072e8:	3f039c3d 3f5b941a 3f00e7e4 3f5d2d53     =..?..[?...?S-]?
  4072f8:	3efc5d27 3f5ebe05 3ef6e0cb 3f604621     '].>..^?...>!F`?
  407308:	3ef15aea 3f61c598 3eebcbbb 3f633c5a     .Z.>..a?...>Z<c?
  407318:	3ee63375 3f64aa59 3ee0924f 3f660f88     u3.>Y.d?O..>..f?
  407328:	3edae880 3f676bd8 3ed53641 3f68bf3c     ...>.kg?A6.><.h?
  407338:	3ecf7bca 3f6a09a7 3ec9b953 3f6b4b0c     .{.>..j?S..>.Kk?
  407348:	3ec3ef15 3f6c835e 3ebe1d4a 3f6db293     ...>^.l?J..>..m?
  407358:	3eb8442a 3f6ed89e 3eb263ef 3f6ff573     *D.>..n?.c.>s.o?
  407368:	3eac7cd4 3f710908 3ea68f12 3f721352     .|.>..q?...>R.r?
  407378:	3ea09ae5 3f731447 3e9aa086 3f740bdd     ...>G.s?...>..t?
  407388:	3e94a031 3f74fa0b 3e8e9a22 3f75dec6     1..>..t?"..>..u?
  407398:	3e888e93 3f76ba07 3e827dc0 3f778bc5     ...>..v?.}.>..w?
  4073a8:	3e78cfcc 3f7853f8 3e6c9a7f 3f791298     ..x>.Sx?..l>..y?
  4073b8:	3e605c13 3f79c79d 3e541501 3f7a7302     .\`>..y?..T>.sz?
  4073c8:	3e47c5c2 3f7b14be 3e3b6ecf 3f7baccd     ..G>..{?.n;>..{?
  4073d8:	3e2f10a2 3f7c3b28 3e22abb6 3f7cbfc9     ../>(;|?..">..|?
  4073e8:	3e164083 3f7d3aac 3e09cf86 3f7dabcc     .@.>.:}?...>..}?
  4073f8:	3dfab273 3f7e1324 3de1bc2e 3f7e70b0     s..=$.~?...=.p~?
  407408:	3dc8bd36 3f7ec46d 3dafb680 3f7f0e58     6..=m.~?...=X..?
  407418:	3d96a905 3f7f4e6d 3d7b2b74 3f7f84ab     ...=mN.?t+{=...?
  407428:	3d48fb2f 3f7fb10f 3d16c32c 3f7fd398     /.H=...?,..=...?
  407438:	3cc90ab0 3f7fec43 3c490e90 3f7ffb11     ...<C..?..I<...?
  407448:	00000000 3f800000 bc490e90 3f7ffb11     .......?..I....?
  407458:	bcc90ab0 3f7fec43 bd16c32c 3f7fd398     ....C..?,......?
  407468:	bd48fb2f 3f7fb10f bd7b2b74 3f7f84ab     /.H....?t+{....?
  407478:	bd96a905 3f7f4e6d bdafb680 3f7f0e58     ....mN.?....X..?
  407488:	bdc8bd36 3f7ec46d bde1bc2e 3f7e70b0     6...m.~?.....p~?
  407498:	bdfab273 3f7e1324 be09cf86 3f7dabcc     s...$.~?......}?
  4074a8:	be164083 3f7d3aac be22abb6 3f7cbfc9     .@...:}?.."...|?
  4074b8:	be2f10a2 3f7c3b28 be3b6ecf 3f7baccd     ../.(;|?.n;...{?
  4074c8:	be47c5c2 3f7b14be be541501 3f7a7302     ..G...{?..T..sz?
  4074d8:	be605c13 3f79c79d be6c9a7f 3f791298     .\`...y?..l...y?
  4074e8:	be78cfcc 3f7853f8 be827dc0 3f778bc5     ..x..Sx?.}....w?
  4074f8:	be888e93 3f76ba07 be8e9a22 3f75dec6     ......v?".....u?
  407508:	be94a031 3f74fa0b be9aa086 3f740bdd     1.....t?......t?
  407518:	bea09ae5 3f731447 bea68f12 3f721352     ....G.s?....R.r?
  407528:	beac7cd4 3f710908 beb263ef 3f6ff573     .|....q?.c..s.o?
  407538:	beb8442a 3f6ed89e bebe1d4a 3f6db293     *D....n?J.....m?
  407548:	bec3ef15 3f6c835e bec9b953 3f6b4b0c     ....^.l?S....Kk?
  407558:	becf7bca 3f6a09a7 bed53641 3f68bf3c     .{....j?A6..<.h?
  407568:	bedae880 3f676bd8 bee0924f 3f660f88     .....kg?O.....f?
  407578:	bee63375 3f64aa59 beebcbbb 3f633c5a     u3..Y.d?....Z<c?
  407588:	bef15aea 3f61c598 bef6e0cb 3f604621     .Z....a?....!F`?
  407598:	befc5d27 3f5ebe05 bf00e7e4 3f5d2d53     ']....^?....S-]?
  4075a8:	bf039c3d 3f5b941a bf064b82 3f59f26a     =.....[?.K..j.Y?
  4075b8:	bf08f59b 3f584853 bf0b9a6b 3f5695e5     ....SHX?k.....V?
  4075c8:	bf0e39da 3f54db31 bf10d3cd 3f531849     .9..1.T?....I.S?
  4075d8:	bf13682a 3f514d3d bf15f6d9 3f4f7a1f     *h..=MQ?.....zO?
  4075e8:	bf187fc0 3f4d9f02 bf1b02c6 3f4bbbf8     ......M?......K?
  4075f8:	bf1d7fd1 3f49d112 bf1ff6cb 3f47de65     ......I?....e.G?
  407608:	bf226799 3f45e403 bf24d225 3f43e200     .g"...E?%.$...C?
  407618:	bf273656 3f41d870 bf299415 3f3fc767     V6'.p.A?..).g.??
  407628:	bf2beb4a 3f3daef9 bf2e3bde 3f3b8f3b     J.+...=?.;..;.;?
  407638:	bf3085bb 3f396842 bf32c8c9 3f373a23     ..0.Bh9?..2.#:7?
  407648:	bf3504f3 3f3504f3 bf373a23 3f32c8c9     ..5...5?#:7...2?
  407658:	bf396842 3f3085bb bf3b8f3b 3f2e3bde     Bh9...0?;.;..;.?
  407668:	bf3daef9 3f2beb4a bf3fc767 3f299415     ..=.J.+?g.?...)?
  407678:	bf41d870 3f273656 bf43e200 3f24d225     p.A.V6'?..C.%.$?
  407688:	bf45e403 3f226799 bf47de65 3f1ff6cb     ..E..g"?e.G....?
  407698:	bf49d112 3f1d7fd1 bf4bbbf8 3f1b02c6     ..I....?..K....?
  4076a8:	bf4d9f02 3f187fc0 bf4f7a1f 3f15f6d9     ..M....?.zO....?
  4076b8:	bf514d3d 3f13682a bf531849 3f10d3cd     =MQ.*h.?I.S....?
  4076c8:	bf54db31 3f0e39da bf5695e5 3f0b9a6b     1.T..9.?..V.k..?
  4076d8:	bf584853 3f08f59b bf59f26a 3f064b82     SHX....?j.Y..K.?
  4076e8:	bf5b941a 3f039c3d bf5d2d53 3f00e7e4     ..[.=..?S-]....?
  4076f8:	bf5ebe05 3efc5d27 bf604621 3ef6e0cb     ..^.'].>!F`....>
  407708:	bf61c598 3ef15aea bf633c5a 3eebcbbb     ..a..Z.>Z<c....>
  407718:	bf64aa59 3ee63375 bf660f88 3ee0924f     Y.d.u3.>..f.O..>
  407728:	bf676bd8 3edae880 bf68bf3c 3ed53641     .kg....><.h.A6.>
  407738:	bf6a09a7 3ecf7bca bf6b4b0c 3ec9b953     ..j..{.>.Kk.S..>
  407748:	bf6c835e 3ec3ef15 bf6db293 3ebe1d4a     ^.l....>..m.J..>
  407758:	bf6ed89e 3eb8442a bf6ff573 3eb263ef     ..n.*D.>s.o..c.>
  407768:	bf710908 3eac7cd4 bf721352 3ea68f12     ..q..|.>R.r....>
  407778:	bf731447 3ea09ae5 bf740bdd 3e9aa086     G.s....>..t....>
  407788:	bf74fa0b 3e94a031 bf75dec6 3e8e9a22     ..t.1..>..u."..>
  407798:	bf76ba07 3e888e93 bf778bc5 3e827dc0     ..v....>..w..}.>
  4077a8:	bf7853f8 3e78cfcc bf791298 3e6c9a7f     .Sx...x>..y...l>
  4077b8:	bf79c79d 3e605c13 bf7a7302 3e541501     ..y..\`>.sz...T>
  4077c8:	bf7b14be 3e47c5c2 bf7baccd 3e3b6ecf     ..{...G>..{..n;>
  4077d8:	bf7c3b28 3e2f10a2 bf7cbfc9 3e22abb6     (;|.../>..|...">
  4077e8:	bf7d3aac 3e164083 bf7dabcc 3e09cf86     .:}..@.>..}....>
  4077f8:	bf7e1324 3dfab273 bf7e70b0 3de1bc2e     $.~.s..=.p~....=
  407808:	bf7ec46d 3dc8bd36 bf7f0e58 3dafb680     m.~.6..=X......=
  407818:	bf7f4e6d 3d96a905 bf7f84ab 3d7b2b74     mN.....=....t+{=
  407828:	bf7fb10f 3d48fb2f bf7fd398 3d16c32c     ..../.H=....,..=
  407838:	bf7fec43 3cc90ab0 bf7ffb11 3c490e90     C......<......I<
  407848:	bf800000 00000000 bf7ffb11 bc490e90     ..............I.
  407858:	bf7fec43 bcc90ab0 bf7fd398 bd16c32c     C...........,...
  407868:	bf7fb10f bd48fb2f bf7f84ab bd7b2b74     ..../.H.....t+{.
  407878:	bf7f4e6d bd96a905 bf7f0e58 bdafb680     mN......X.......
  407888:	bf7ec46d bdc8bd36 bf7e70b0 bde1bc2e     m.~.6....p~.....
  407898:	bf7e1324 bdfab273 bf7dabcc be09cf86     $.~.s.....}.....
  4078a8:	bf7d3aac be164083 bf7cbfc9 be22abb6     .:}..@....|...".
  4078b8:	bf7c3b28 be2f10a2 bf7baccd be3b6ecf     (;|.../...{..n;.
  4078c8:	bf7b14be be47c5c2 bf7a7302 be541501     ..{...G..sz...T.
  4078d8:	bf79c79d be605c13 bf791298 be6c9a7f     ..y..\`...y...l.
  4078e8:	bf7853f8 be78cfcc bf778bc5 be827dc0     .Sx...x...w..}..
  4078f8:	bf76ba07 be888e93 bf75dec6 be8e9a22     ..v.......u."...
  407908:	bf74fa0b be94a031 bf740bdd be9aa086     ..t.1.....t.....
  407918:	bf731447 bea09ae5 bf721352 bea68f12     G.s.....R.r.....
  407928:	bf710908 beac7cd4 bf6ff573 beb263ef     ..q..|..s.o..c..
  407938:	bf6ed89e beb8442a bf6db293 bebe1d4a     ..n.*D....m.J...
  407948:	bf6c835e bec3ef15 bf6b4b0c bec9b953     ^.l......Kk.S...
  407958:	bf6a09a7 becf7bca bf68bf3c bed53641     ..j..{..<.h.A6..
  407968:	bf676bd8 bedae880 bf660f88 bee0924f     .kg.......f.O...
  407978:	bf64aa59 bee63375 bf633c5a beebcbbb     Y.d.u3..Z<c.....
  407988:	bf61c598 bef15aea bf604621 bef6e0cb     ..a..Z..!F`.....
  407998:	bf5ebe05 befc5d27 bf5d2d53 bf00e7e4     ..^.']..S-].....
  4079a8:	bf5b941a bf039c3d bf59f26a bf064b82     ..[.=...j.Y..K..
  4079b8:	bf584853 bf08f59b bf5695e5 bf0b9a6b     SHX.......V.k...
  4079c8:	bf54db31 bf0e39da bf531849 bf10d3cd     1.T..9..I.S.....
  4079d8:	bf514d3d bf13682a bf4f7a1f bf15f6d9     =MQ.*h...zO.....
  4079e8:	bf4d9f02 bf187fc0 bf4bbbf8 bf1b02c6     ..M.......K.....
  4079f8:	bf49d112 bf1d7fd1 bf47de65 bf1ff6cb     ..I.....e.G.....
  407a08:	bf45e403 bf226799 bf43e200 bf24d225     ..E..g"...C.%.$.
  407a18:	bf41d870 bf273656 bf3fc767 bf299415     p.A.V6'.g.?...).
  407a28:	bf3daef9 bf2beb4a bf3b8f3b bf2e3bde     ..=.J.+.;.;..;..
  407a38:	bf396842 bf3085bb bf373a23 bf32c8c9     Bh9...0.#:7...2.
  407a48:	bf3504f3 bf3504f3 bf32c8c9 bf373a23     ..5...5...2.#:7.
  407a58:	bf3085bb bf396842 bf2e3bde bf3b8f3b     ..0.Bh9..;..;.;.
  407a68:	bf2beb4a bf3daef9 bf299415 bf3fc767     J.+...=...).g.?.
  407a78:	bf273656 bf41d870 bf24d225 bf43e200     V6'.p.A.%.$...C.
  407a88:	bf226799 bf45e403 bf1ff6cb bf47de65     .g"...E.....e.G.
  407a98:	bf1d7fd1 bf49d112 bf1b02c6 bf4bbbf8     ......I.......K.
  407aa8:	bf187fc0 bf4d9f02 bf15f6d9 bf4f7a1f     ......M......zO.
  407ab8:	bf13682a bf514d3d bf10d3cd bf531849     *h..=MQ.....I.S.
  407ac8:	bf0e39da bf54db31 bf0b9a6b bf5695e5     .9..1.T.k.....V.
  407ad8:	bf08f59b bf584853 bf064b82 bf59f26a     ....SHX..K..j.Y.
  407ae8:	bf039c3d bf5b941a bf00e7e4 bf5d2d53     =.....[.....S-].
  407af8:	befc5d27 bf5ebe05 bef6e0cb bf604621     ']....^.....!F`.
  407b08:	bef15aea bf61c598 beebcbbb bf633c5a     .Z....a.....Z<c.
  407b18:	bee63375 bf64aa59 bee0924f bf660f88     u3..Y.d.O.....f.
  407b28:	bedae880 bf676bd8 bed53641 bf68bf3c     .....kg.A6..<.h.
  407b38:	becf7bca bf6a09a7 bec9b953 bf6b4b0c     .{....j.S....Kk.
  407b48:	bec3ef15 bf6c835e bebe1d4a bf6db293     ....^.l.J.....m.
  407b58:	beb8442a bf6ed89e beb263ef bf6ff573     *D....n..c..s.o.
  407b68:	beac7cd4 bf710908 bea68f12 bf721352     .|....q.....R.r.
  407b78:	bea09ae5 bf731447 be9aa086 bf740bdd     ....G.s.......t.
  407b88:	be94a031 bf74fa0b be8e9a22 bf75dec6     1.....t.".....u.
  407b98:	be888e93 bf76ba07 be827dc0 bf778bc5     ......v..}....w.
  407ba8:	be78cfcc bf7853f8 be6c9a7f bf791298     ..x..Sx...l...y.
  407bb8:	be605c13 bf79c79d be541501 bf7a7302     .\`...y...T..sz.
  407bc8:	be47c5c2 bf7b14be be3b6ecf bf7baccd     ..G...{..n;...{.
  407bd8:	be2f10a2 bf7c3b28 be22abb6 bf7cbfc9     ../.(;|..."...|.
  407be8:	be164083 bf7d3aac be09cf86 bf7dabcc     .@...:}.......}.
  407bf8:	bdfab273 bf7e1324 bde1bc2e bf7e70b0     s...$.~......p~.
  407c08:	bdc8bd36 bf7ec46d bdafb680 bf7f0e58     6...m.~.....X...
  407c18:	bd96a905 bf7f4e6d bd7b2b74 bf7f84ab     ....mN..t+{.....
  407c28:	bd48fb2f bf7fb10f bd16c32c bf7fd398     /.H.....,.......
  407c38:	bcc90ab0 bf7fec43 bc490e90 bf7ffb11     ....C.....I.....
  407c48:	80000000 bf800000 3c490e90 bf7ffb11     ..........I<....
  407c58:	3cc90ab0 bf7fec43 3d16c32c bf7fd398     ...<C...,..=....
  407c68:	3d48fb2f bf7fb10f 3d7b2b74 bf7f84ab     /.H=....t+{=....
  407c78:	3d96a905 bf7f4e6d 3dafb680 bf7f0e58     ...=mN.....=X...
  407c88:	3dc8bd36 bf7ec46d 3de1bc2e bf7e70b0     6..=m.~....=.p~.
  407c98:	3dfab273 bf7e1324 3e09cf86 bf7dabcc     s..=$.~....>..}.
  407ca8:	3e164083 bf7d3aac 3e22abb6 bf7cbfc9     .@.>.:}...">..|.
  407cb8:	3e2f10a2 bf7c3b28 3e3b6ecf bf7baccd     ../>(;|..n;>..{.
  407cc8:	3e47c5c2 bf7b14be 3e541501 bf7a7302     ..G>..{...T>.sz.
  407cd8:	3e605c13 bf79c79d 3e6c9a7f bf791298     .\`>..y...l>..y.
  407ce8:	3e78cfcc bf7853f8 3e827dc0 bf778bc5     ..x>.Sx..}.>..w.
  407cf8:	3e888e93 bf76ba07 3e8e9a22 bf75dec6     ...>..v."..>..u.
  407d08:	3e94a031 bf74fa0b 3e9aa086 bf740bdd     1..>..t....>..t.
  407d18:	3ea09ae5 bf731447 3ea68f12 bf721352     ...>G.s....>R.r.
  407d28:	3eac7cd4 bf710908 3eb263ef bf6ff573     .|.>..q..c.>s.o.
  407d38:	3eb8442a bf6ed89e 3ebe1d4a bf6db293     *D.>..n.J..>..m.
  407d48:	3ec3ef15 bf6c835e 3ec9b953 bf6b4b0c     ...>^.l.S..>.Kk.
  407d58:	3ecf7bca bf6a09a7 3ed53641 bf68bf3c     .{.>..j.A6.><.h.
  407d68:	3edae880 bf676bd8 3ee0924f bf660f88     ...>.kg.O..>..f.
  407d78:	3ee63375 bf64aa59 3eebcbbb bf633c5a     u3.>Y.d....>Z<c.
  407d88:	3ef15aea bf61c598 3ef6e0cb bf604621     .Z.>..a....>!F`.
  407d98:	3efc5d27 bf5ebe05 3f00e7e4 bf5d2d53     '].>..^....?S-].
  407da8:	3f039c3d bf5b941a 3f064b82 bf59f26a     =..?..[..K.?j.Y.
  407db8:	3f08f59b bf584853 3f0b9a6b bf5695e5     ...?SHX.k..?..V.
  407dc8:	3f0e39da bf54db31 3f10d3cd bf531849     .9.?1.T....?I.S.
  407dd8:	3f13682a bf514d3d 3f15f6d9 bf4f7a1f     *h.?=MQ....?.zO.
  407de8:	3f187fc0 bf4d9f02 3f1b02c6 bf4bbbf8     ...?..M....?..K.
  407df8:	3f1d7fd1 bf49d112 3f1ff6cb bf47de65     ...?..I....?e.G.
  407e08:	3f226799 bf45e403 3f24d225 bf43e200     .g"?..E.%.$?..C.
  407e18:	3f273656 bf41d870 3f299415 bf3fc767     V6'?p.A...)?g.?.
  407e28:	3f2beb4a bf3daef9 3f2e3bde bf3b8f3b     J.+?..=..;.?;.;.
  407e38:	3f3085bb bf396842 3f32c8c9 bf373a23     ..0?Bh9...2?#:7.
  407e48:	3f3504f3 bf3504f3 3f373a23 bf32c8c9     ..5?..5.#:7?..2.
  407e58:	3f396842 bf3085bb 3f3b8f3b bf2e3bde     Bh9?..0.;.;?.;..
  407e68:	3f3daef9 bf2beb4a 3f3fc767 bf299415     ..=?J.+.g.??..).
  407e78:	3f41d870 bf273656 3f43e200 bf24d225     p.A?V6'...C?%.$.
  407e88:	3f45e403 bf226799 3f47de65 bf1ff6cb     ..E?.g".e.G?....
  407e98:	3f49d112 bf1d7fd1 3f4bbbf8 bf1b02c6     ..I?......K?....
  407ea8:	3f4d9f02 bf187fc0 3f4f7a1f bf15f6d9     ..M?.....zO?....
  407eb8:	3f514d3d bf13682a 3f531849 bf10d3cd     =MQ?*h..I.S?....
  407ec8:	3f54db31 bf0e39da 3f5695e5 bf0b9a6b     1.T?.9....V?k...
  407ed8:	3f584853 bf08f59b 3f59f26a bf064b82     SHX?....j.Y?.K..
  407ee8:	3f5b941a bf039c3d 3f5d2d53 bf00e7e4     ..[?=...S-]?....
  407ef8:	3f5ebe05 befc5d27 3f604621 bef6e0cb     ..^?']..!F`?....
  407f08:	3f61c598 bef15aea 3f633c5a beebcbbb     ..a?.Z..Z<c?....
  407f18:	3f64aa59 bee63375 3f660f88 bee0924f     Y.d?u3....f?O...
  407f28:	3f676bd8 bedae880 3f68bf3c bed53641     .kg?....<.h?A6..
  407f38:	3f6a09a7 becf7bca 3f6b4b0c bec9b953     ..j?.{...Kk?S...
  407f48:	3f6c835e bec3ef15 3f6db293 bebe1d4a     ^.l?......m?J...
  407f58:	3f6ed89e beb8442a 3f6ff573 beb263ef     ..n?*D..s.o?.c..
  407f68:	3f710908 beac7cd4 3f721352 bea68f12     ..q?.|..R.r?....
  407f78:	3f731447 bea09ae5 3f740bdd be9aa086     G.s?......t?....
  407f88:	3f74fa0b be94a031 3f75dec6 be8e9a22     ..t?1.....u?"...
  407f98:	3f76ba07 be888e93 3f778bc5 be827dc0     ..v?......w?.}..
  407fa8:	3f7853f8 be78cfcc 3f791298 be6c9a7f     .Sx?..x...y?..l.
  407fb8:	3f79c79d be605c13 3f7a7302 be541501     ..y?.\`..sz?..T.
  407fc8:	3f7b14be be47c5c2 3f7baccd be3b6ecf     ..{?..G...{?.n;.
  407fd8:	3f7c3b28 be2f10a2 3f7cbfc9 be22abb6     (;|?../...|?..".
  407fe8:	3f7d3aac be164083 3f7dabcc be09cf86     .:}?.@....}?....
  407ff8:	3f7e1324 bdfab273 3f7e70b0 bde1bc2e     $.~?s....p~?....
  408008:	3f7ec46d bdc8bd36 3f7f0e58 bdafb680     m.~?6...X..?....
  408018:	3f7f4e6d bd96a905 3f7f84ab bd7b2b74     mN.?.......?t+{.
  408028:	3f7fb10f bd48fb2f 3f7fd398 bd16c32c     ...?/.H....?,...
  408038:	3f7fec43 bcc90ab0 3f7ffb11 bc490e90     C..?.......?..I.

00408048 <_global_impure_ptr>:
  408048:	20000078                                x.. 

0040804c <_init>:
  40804c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40804e:	bf00      	nop
  408050:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408052:	bc08      	pop	{r3}
  408054:	469e      	mov	lr, r3
  408056:	4770      	bx	lr

00408058 <__init_array_start>:
  408058:	00402add 	.word	0x00402add

0040805c <__frame_dummy_init_array_entry>:
  40805c:	0040012d                                -.@.

00408060 <_fini>:
  408060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408062:	bf00      	nop
  408064:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408066:	bc08      	pop	{r3}
  408068:	469e      	mov	lr, r3
  40806a:	4770      	bx	lr

0040806c <__fini_array_start>:
  40806c:	00400109 	.word	0x00400109
